# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: VertexAI
display_name: Vertex AI
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://{{region}}-aiplatform.googleapis.com/v1/
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://{{region}}-aiplatform.googleapis.com/v1beta1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
objects:
# Vertex AI Datasets
# Vertex AI Featurestores
  - !ruby/object:Api::Resource
    name: Featurestore
    base_url: projects/{{project}}/locations/{{region}}/featurestores
    create_url: projects/{{project}}/locations/{{region}}/featurestores?featurestoreId={{name}}
    self_link: 'projects/{{project}}/locations/{{region}}/featurestores/{{name}}'
    min_version: beta
    update_verb: :PATCH
    update_mask: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/vertex-ai/docs'
      api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featurestores'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
      A collection of DataItems and Annotations on them.
    parameters:
      - !ruby/object:Api::Type::String
        name: region
        description: The region of the dataset. eg us-central1
        url_param_only: true
        input: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the Featurestore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
        input: true
        url_param_only: true
        pattern: projects/{{project}}/locations/{{region}}/featurestores/{{name}}
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: Used to perform consistent read-modify-write updates. 
        output: true
      - !ruby/object:Api::Type::String
        name: 'createTime'
        output: true
        description: |
          The timestamp of when the featurestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        output: true
        description: |
          The timestamp of when the featurestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          A set of key/value label pairs to assign to this Featurestore.
      - !ruby/object:Api::Type::NestedObject
        name: 'onlineServingConfig'
        description: |
           Config for online serving resources.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'fixedNodeCount'
            required: true
            description: |
              The number of nodes for each cluster. The number of nodes will not scale automatically but can be scaled manually by providing different values when updating.
# Vertex AI Featurestore Entity Type
  - !ruby/object:Api::Resource
    name: FeaturestoreEntitytype
    base_url: '{{featurestore}}/entityTypes'
    create_url: '{{featurestore}}/entityTypes?entityTypeId={{name}}'
    self_link: '{{featurestore}}/entityTypes/{{name}}'
    min_version: beta
    update_verb: :PATCH
    update_mask: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/vertex-ai/docs'
      api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featurestores.entityTypes'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
      include_project: true
    description: |-
      An entity type is a type of object in a system that needs to be modeled and have stored information about. For example, driver is an entity type, and driver0 is an instance of an entity type driver.
    parameters:
      - !ruby/object:Api::Type::String
        name: featurestore
        description: The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}.
        url_param_only: true
        input: true
        required: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the EntityType. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
        input: true
        url_param_only: true
        pattern: '{featurestore}}/entityTypes/{{name}}'
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: Used to perform consistent read-modify-write updates. 
        output: true
      - !ruby/object:Api::Type::String
        name: 'createTime'
        output: true
        description: |
          The timestamp of when the featurestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        output: true
        description: |
          The timestamp of when the featurestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          A set of key/value label pairs to assign to this EntityType.
      - !ruby/object:Api::Type::NestedObject
        name: 'monitoringConfig'
        description: |
          The default monitoring configuration for all Features under this EntityType.

          If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: 'snapshotAnalysis'
            description: |
              Configuration of how features in Featurestore are monitored.
            properties:
              - !ruby/object:Api::Type::Boolean
                name: 'disabled'
                default_value: false
                description: |
                  The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoringInterval for Features under it.
              - !ruby/object:Api::Type::String
                name: 'monitoringInterval'
                description: |
                  Configuration of the snapshot analysis based monitoring pipeline running interval. The value is rolled up to full day.

                  A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
# Vertex ML Metadata
  - !ruby/object:Api::Resource
    name: MetadataStore
    base_url: projects/{{project}}/locations/{{region}}/metadataStores
    self_link: 'projects/{{project}}/locations/{{region}}/metadataStores/{{name}}'
    create_url: projects/{{project}}/locations/{{region}}/metadataStores?metadataStoreId={{name}}
    min_version: beta
    input: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/vertex-ai/docs'
      api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.metadataStores'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
      Instance of a metadata store. Contains a set of metadata that can be queried.
    parameters:
      - !ruby/object:Api::Type::String
        name: region
        description: The region of the Metadata Store. eg us-central1
        url_param_only: true
        input: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the MetadataStore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
        input: true
        url_param_only: true
        pattern: projects/{{project}}/locations/{{region}}/metadataStores/{{name}}
      - !ruby/object:Api::Type::String
        name: 'description'
        description: Description of the MetadataStore.
        input: true
      - !ruby/object:Api::Type::String
        name: 'createTime'
        output: true
        description: |
          The timestamp of when the MetadataStore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        output: true
        description: |
          The timestamp of when the MetadataStore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        input: true
        description: |
          Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this MetadataStore will be secured by this key.
        properties:
          - !ruby/object:Api::Type::String
            name: 'kmsKeyName'
            description: |
              Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. 
              Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
            input: true
      - !ruby/object:Api::Type::NestedObject
        name: 'state'
        output: true
        description: |
          State information of the MetadataStore.
        properties:
          - !ruby/object:Api::Type::String
            name: 'diskUtilizationBytes'
            description: |
              The disk utilization of the MetadataStore in bytes.
            output: true


    
  - !ruby/object:Api::Resource
    name: Dataset
    base_url: '{{parent}}/datasets'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A collection of DataItems and Annotations on them.
    properties:
  
      - !ruby/object:Api::Type::Array
        name: 'savedQueries'
        description: |
          All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Integer
              name: 'annotationSpecCount'
              description: |
                Output only. Number of AnnotationSpecs in the context of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'updateTime'
              description: |
                Output only. Timestamp when SavedQuery was last updated.
            - !ruby/object:Api::Type::Boolean
              name: 'supportAutomlTraining'
              description: |
                Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training.
            - !ruby/object:Api::Type::String
              name: 'metadata'
              description: |
                Some additional information about the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'problemType'
              description: |
                Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Output only. Resource name of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'createTime'
              description: |
                Output only. Timestamp when this SavedQuery was created.
            - !ruby/object:Api::Type::String
              name: 'etag'
              description: |
                Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens.
            - !ruby/object:Api::Type::String
              name: 'displayName'
              description: |
                Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters.
            - !ruby/object:Api::Type::String
              name: 'annotationFilter'
              description: |
                Output only. Filters on the Annotations in the dataset.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this Dataset was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the Dataset.
      - !ruby/object:Api::Type::String
        name: 'metadata'
        description: |
          Required. Additional information about the Dataset.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The description of the Dataset.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Dataset: * "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value is the metadata_schema's title.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::String
        name: 'metadataSchemaUri'
        description: |
          Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
      - !ruby/object:Api::Type::String
        name: 'metadataArtifact'
        description: |
          Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this Dataset was last updated.
      - !ruby/object:Api::Type::String
        name: 'dataItemCount'
        description: |
          Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.
  

    
  - !ruby/object:Api::Resource
    name: Dataset
    base_url: '{{parent}}/datasets'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A collection of DataItems and Annotations on them.
    properties:
  
      - !ruby/object:Api::Type::Array
        name: 'savedQueries'
        description: |
          All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Integer
              name: 'annotationSpecCount'
              description: |
                Output only. Number of AnnotationSpecs in the context of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'updateTime'
              description: |
                Output only. Timestamp when SavedQuery was last updated.
            - !ruby/object:Api::Type::Boolean
              name: 'supportAutomlTraining'
              description: |
                Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training.
            - !ruby/object:Api::Type::String
              name: 'metadata'
              description: |
                Some additional information about the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'problemType'
              description: |
                Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Output only. Resource name of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'createTime'
              description: |
                Output only. Timestamp when this SavedQuery was created.
            - !ruby/object:Api::Type::String
              name: 'etag'
              description: |
                Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens.
            - !ruby/object:Api::Type::String
              name: 'displayName'
              description: |
                Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters.
            - !ruby/object:Api::Type::String
              name: 'annotationFilter'
              description: |
                Output only. Filters on the Annotations in the dataset.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this Dataset was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the Dataset.
      - !ruby/object:Api::Type::String
        name: 'metadata'
        description: |
          Required. Additional information about the Dataset.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The description of the Dataset.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Dataset: * "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value is the metadata_schema's title.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::String
        name: 'metadataSchemaUri'
        description: |
          Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
      - !ruby/object:Api::Type::String
        name: 'metadataArtifact'
        description: |
          Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this Dataset was last updated.
      - !ruby/object:Api::Type::String
        name: 'dataItemCount'
        description: |
          Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.
  

    
  - !ruby/object:Api::Resource
    name: Dataset
    base_url: '{{parent}}/datasets'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A collection of DataItems and Annotations on them.
    properties:
  
      - !ruby/object:Api::Type::Array
        name: 'savedQueries'
        description: |
          All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Integer
              name: 'annotationSpecCount'
              description: |
                Output only. Number of AnnotationSpecs in the context of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'updateTime'
              description: |
                Output only. Timestamp when SavedQuery was last updated.
            - !ruby/object:Api::Type::Boolean
              name: 'supportAutomlTraining'
              description: |
                Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training.
            - !ruby/object:Api::Type::String
              name: 'metadata'
              description: |
                Some additional information about the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'problemType'
              description: |
                Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Output only. Resource name of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'createTime'
              description: |
                Output only. Timestamp when this SavedQuery was created.
            - !ruby/object:Api::Type::String
              name: 'etag'
              description: |
                Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens.
            - !ruby/object:Api::Type::String
              name: 'displayName'
              description: |
                Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters.
            - !ruby/object:Api::Type::String
              name: 'annotationFilter'
              description: |
                Output only. Filters on the Annotations in the dataset.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this Dataset was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the Dataset.
      - !ruby/object:Api::Type::String
        name: 'metadata'
        description: |
          Required. Additional information about the Dataset.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The description of the Dataset.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Dataset: * "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value is the metadata_schema's title.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::String
        name: 'metadataSchemaUri'
        description: |
          Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
      - !ruby/object:Api::Type::String
        name: 'metadataArtifact'
        description: |
          Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this Dataset was last updated.
      - !ruby/object:Api::Type::String
        name: 'dataItemCount'
        description: |
          Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.
  

    
  - !ruby/object:Api::Resource
    name: Endpoint
    base_url: '{{parent}}/endpoints'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        Models are deployed into it, and afterwards Endpoint is called to obtain predictions and explanations.
    properties:
  
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::Boolean
        name: 'enablePrivateServiceConnect'
        description: |
          Deprecated: If true, expose the Endpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this Endpoint was last updated.
      - !ruby/object:Api::Type::String
        name: 'modelDeploymentMonitoringJob'
        description: |
          Output only. Resource name of the Model Monitoring job associated with this Endpoint if monitoring is enabled by JobService.CreateModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The description of the Endpoint.
      - !ruby/object:Api::Type::Array
        name: 'deployedModels'
        description: |
          Output only. The models deployed in this Endpoint. To add or remove DeployedModels use EndpointService.DeployModel and EndpointService.UndeployModel respectively.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'createTime'
              description: |
                Output only. Timestamp when the DeployedModel was created.
            - !ruby/object:Api::Type::NestedObject
              name: 'privateEndpoints'
              description: |
                PrivateEndpoints proto is used to provide paths for users to send requests privately. To send request via private service access, use predict_http_uri, explain_http_uri or health_http_uri. To send request via private service connect, use service_attachment.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'healthHttpUri'
                    description: |
                      Output only. Http(s) path to send health check requests.
                  - !ruby/object:Api::Type::String
                    name: 'explainHttpUri'
                    description: |
                      Output only. Http(s) path to send explain requests.
                  - !ruby/object:Api::Type::String
                    name: 'predictHttpUri'
                    description: |
                      Output only. Http(s) path to send prediction requests.
                  - !ruby/object:Api::Type::String
                    name: 'serviceAttachment'
                    description: |
                      Output only. The name of the service attachment resource. Populated if private service connect is enabled.
            - !ruby/object:Api::Type::Boolean
              name: 'disableContainerLogging'
              description: |
                For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.
            - !ruby/object:Api::Type::String
              name: 'modelVersionId'
              description: |
                Output only. The version ID of the model that is deployed.
            - !ruby/object:Api::Type::NestedObject
              name: 'explanationSpec'
              description: |
                Specification of Model explanation.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'parameters'
                    description: |
                      Parameters to configure explaining for Model's predictions.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'outputIndices'
                          description: |
                            If populated, only returns attributions that have output_index contained in output_indices. It must be an ndarray of integers, with the same shape of the output it's explaining. If not populated, returns attributions for top_k indices of outputs. If neither top_k nor output_indices is populated, returns the argmax index of the outputs. Only applicable to Models that predict multiple outputs (e,g, multi-class Models that predict multiple classes).
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::NestedObject
                          name: 'examples'
                          description: |
                            Example-based explainability that returns the nearest neighbors from the provided dataset.
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'presets'
                                description: |
                                  Preset configuration for example-based explanations
                                properties:
                                    - !ruby/object:Api::Type::Enum
                                      name: 'modality'
                                      description: |
                                        The modality of the uploaded model, which automatically configures the distance measurement and feature normalization for the underlying example index and queries. If your model does not precisely fit one of these types, it is okay to choose the closest type.
                                      values:
                                        - :MODALITY_UNSPECIFIED
                                        - :IMAGE
                                        - :TEXT
                                        - :TABULAR
                                    - !ruby/object:Api::Type::Enum
                                      name: 'query'
                                      description: |
                                        Preset option controlling parameters for speed-precision trade-off when querying for examples. If omitted, defaults to `PRECISE`.
                                      values:
                                        - :PRECISE
                                        - :FAST
                              - !ruby/object:Api::Type::Integer
                                name: 'neighborCount'
                                description: |
                                  The number of neighbors to return when querying for examples.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'exampleGcsSource'
                                description: |
                                  The Cloud Storage input instances.
                                properties:
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'gcsSource'
                                      description: |
                                        The Google Cloud Storage location for the input content.
                                      properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'uris'
                                            description: |
                                              Required. Google Cloud Storage URI(-s) to the input file(s). May contain wildcards. For more information on wildcards, see https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames.
                                            item_type: Api::Type::String
                                    - !ruby/object:Api::Type::Enum
                                      name: 'dataFormat'
                                      description: |
                                        The format in which instances are given, if not specified, assume it's JSONL format. Currently only JSONL format is supported.
                                      values:
                                        - :DATA_FORMAT_UNSPECIFIED
                                        - :JSONL
                              - !ruby/object:Api::Type::String
                                name: 'nearestNeighborSearchConfig'
                                description: |
                                  The full configuration for the generated index, the semantics are the same as metadata and should match [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'xraiAttribution'
                          description: |
                            An explanation method that redistributes Integrated Gradients attributions to segmented regions, taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Supported only by image Models.
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'smoothGradConfig'
                                description: |
                                  Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
                                properties:
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'featureNoiseSigma'
                                      description: |
                                        Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients.
                                      properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'noiseSigma'
                                            description: |
                                              Noise sigma per feature. No noise is added to features that are not set.
                                            item_type: !ruby/object:Api::Type::NestedObject
                                              properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'name'
                                                  description: |
                                                    The name of the input feature for which noise sigma is provided. The features are defined in explanation metadata inputs.
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'sigma'
                                                  description: |
                                                    This represents the standard deviation of the Gaussian kernel that will be used to add noise to the feature prior to computing gradients. Similar to noise_sigma but represents the noise added to the current feature. Defaults to 0.1.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'noiseSigma'
                                      description: |
                                        This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. Learn more about [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization). For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'noisySampleCount'
                                      description: |
                                        The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3.
                              - !ruby/object:Api::Type::Integer
                                name: 'stepCount'
                                description: |
                                  Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range. Valid range of its value is [1, 100], inclusively.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'blurBaselineConfig'
                                description: |
                                  Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'maxBlurSigma'
                                      description: |
                                        The standard deviation of the blur kernel for the blurred baseline. The same blurring parameter is used for both the height and the width dimension. If not set, the method defaults to the zero (i.e. black for images) baseline.
                        - !ruby/object:Api::Type::Integer
                          name: 'topK'
                          description: |
                            If populated, returns attributions for top K indices of outputs (defaults to 1). Only applies to Models that predicts more than one outputs (e,g, multi-class Models). When set to -1, returns explanations for all outputs.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'integratedGradientsAttribution'
                          description: |
                            An attribution method that computes the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'stepCount'
                                description: |
                                  Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is within the desired error range. Valid range of its value is [1, 100], inclusively.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'smoothGradConfig'
                                description: |
                                  Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
                                properties:
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'featureNoiseSigma'
                                      description: |
                                        Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients.
                                      properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'noiseSigma'
                                            description: |
                                              Noise sigma per feature. No noise is added to features that are not set.
                                            item_type: !ruby/object:Api::Type::NestedObject
                                              properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'name'
                                                  description: |
                                                    The name of the input feature for which noise sigma is provided. The features are defined in explanation metadata inputs.
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'sigma'
                                                  description: |
                                                    This represents the standard deviation of the Gaussian kernel that will be used to add noise to the feature prior to computing gradients. Similar to noise_sigma but represents the noise added to the current feature. Defaults to 0.1.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'noiseSigma'
                                      description: |
                                        This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. Learn more about [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization). For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'noisySampleCount'
                                      description: |
                                        The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'blurBaselineConfig'
                                description: |
                                  Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'maxBlurSigma'
                                      description: |
                                        The standard deviation of the blur kernel for the blurred baseline. The same blurring parameter is used for both the height and the width dimension. If not set, the method defaults to the zero (i.e. black for images) baseline.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'sampledShapleyAttribution'
                          description: |
                            An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'pathCount'
                                description: |
                                  Required. The number of feature permutations to consider when approximating the Shapley values. Valid range of its value is [1, 50], inclusively.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'metadata'
                    description: |
                      Metadata describing the Model's input and output for explanation.
                    properties:
                        - !ruby/object:Api::Type::String
                          name: 'featureAttributionsSchemaUri'
                          description: |
                            Points to a YAML file stored on Google Cloud Storage describing the format of the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on output may be different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
                        - !ruby/object:Api::Type::String
                          name: 'latentSpaceSource'
                          description: |
                            Name of the source to generate embeddings for example based explanations.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'outputs'
                          description: |
                            Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images, keys can be any user defined string that consists of any UTF-8 characters. For custom images, keys are the name of the output field in the prediction to be explained. Currently only one key is allowed.
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                Metadata of the prediction output to be explained.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'inputs'
                          description: |
                            Required. Map from feature names to feature input metadata. Keys are the name of the features. Values are the specification of the feature. An empty InputMetadata is valid. It describes a text feature which has the name specified as the key in ExplanationMetadata.inputs. The baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images, the key can be any friendly name of the feature. Once specified, featureAttributions are keyed by this key (if not grouped with another feature). For custom images, the key must match with the key in instance.
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                Metadata of the input of a feature. Fields other than InputMetadata.input_baselines are applicable only for Models that are using Vertex AI-provided images for Tensorflow.
            - !ruby/object:Api::Type::Boolean
              name: 'enableAccessLogging'
              description: |
                If true, online prediction access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each prediction request. Note that logs may incur a cost, especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option.
            - !ruby/object:Api::Type::String
              name: 'serviceAccount'
              description: |
                The service account that the DeployedModel's container runs as. Specify the email address of the service account. If this service account is not specified, the container runs as a service account that doesn't have access to the resource project. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.
            - !ruby/object:Api::Type::NestedObject
              name: 'dedicatedResources'
              description: |
                A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'machineSpec'
                    description: |
                      Specification of a single machine.
                    properties:
                        - !ruby/object:Api::Type::Enum
                          name: 'acceleratorType'
                          description: |
                            Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count.
                          values:
                            - :ACCELERATOR_TYPE_UNSPECIFIED
                            - :NVIDIA_TESLA_K80
                            - :NVIDIA_TESLA_P100
                            - :NVIDIA_TESLA_V100
                            - :NVIDIA_TESLA_P4
                            - :NVIDIA_TESLA_T4
                            - :NVIDIA_TESLA_A100
                            - :NVIDIA_A100_80GB
                            - :NVIDIA_L4
                            - :TPU_V2
                            - :TPU_V3
                            - :TPU_V4_POD
                        - !ruby/object:Api::Type::String
                          name: 'machineType'
                          description: |
                            Immutable. The type of the machine. See the [list of machine types supported for prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types) See the [list of machine types supported for custom training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types). For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required.
                        - !ruby/object:Api::Type::Integer
                          name: 'acceleratorCount'
                          description: |
                            The number of accelerators to attach to the machine.
                  - !ruby/object:Api::Type::Integer
                    name: 'maxReplicaCount'
                    description: |
                      Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, will use min_replica_count as the default value. The value of this field impacts the charge against Vertex CPU and GPU quotas. Specifically, you will be charged for (max_replica_count * number of cores in the selected machine type) and (max_replica_count * number of GPUs per replica in the selected machine type).
                  - !ruby/object:Api::Type::Array
                    name: 'autoscalingMetricSpecs'
                    description: |
                      Immutable. The metric specifications that overrides a resource utilization metric (CPU utilization, accelerator's duty cycle, and so on) target value (default to 60 if not set). At most one entry is allowed per metric. If machine_spec.accelerator_count is above 0, the autoscaling will be based on both CPU utilization and accelerator's duty cycle metrics and scale up when either metrics exceeds its target value while scale down if both metrics are under their target value. The default target value is 60 for both metrics. If machine_spec.accelerator_count is 0, the autoscaling will be based on CPU utilization metric only with default target value 60 if not explicitly set. For example, in the case of Online Prediction, if you want to override target CPU utilization to 80, you should set autoscaling_metric_specs.metric_name to `aiplatform.googleapis.com/prediction/online/cpu/utilization` and autoscaling_metric_specs.target to `80`.
                    item_type: !ruby/object:Api::Type::NestedObject
                      properties:
                        - !ruby/object:Api::Type::Integer
                          name: 'target'
                          description: |
                            The target resource utilization in percentage (1% - 100%) for the given metric; once the real usage deviates from the target by a certain percentage, the machine replicas change. The default value is 60 (representing 60%) if not provided.
                        - !ruby/object:Api::Type::String
                          name: 'metricName'
                          description: |
                            Required. The resource metric name. Supported metrics: * For Online Prediction: * `aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle` * `aiplatform.googleapis.com/prediction/online/cpu/utilization`
                  - !ruby/object:Api::Type::Integer
                    name: 'minReplicaCount'
                    description: |
                      Required. Immutable. The minimum number of machine replicas this DeployedModel will be always deployed on. This value must be greater than or equal to 1. If traffic against the DeployedModel increases, it may dynamically be deployed onto more replicas, and as traffic decreases, some of these extra replicas may be freed.
            - !ruby/object:Api::Type::NestedObject
              name: 'automaticResources'
              description: |
                A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines.
              properties:
                  - !ruby/object:Api::Type::Integer
                    name: 'maxReplicaCount'
                    description: |
                      Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, a no upper bound for scaling under heavy traffic will be assume, though Vertex AI may be unable to scale beyond certain replica number.
                  - !ruby/object:Api::Type::Integer
                    name: 'minReplicaCount'
                    description: |
                      Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas up to max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the requested value is too large, the deployment will error.
            - !ruby/object:Api::Type::String
              name: 'displayName'
              description: |
                The display name of the DeployedModel. If not provided upon creation, the Model's display_name is used.
            - !ruby/object:Api::Type::String
              name: 'model'
              description: |
                Required. The resource name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel's Endpoint. The resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed.
            - !ruby/object:Api::Type::String
              name: 'id'
              description: |
                Immutable. The ID of the DeployedModel. If not provided upon deployment, Vertex AI will generate a value for this ID. This value should be 1-10 characters, and valid characters are /[0-9]/.
      - !ruby/object:Api::Type::String
        name: 'network'
        description: |
          Optional. The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the Endpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. Only one of the fields, network or enable_private_service_connect, can be set. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is network name.
      - !ruby/object:Api::Type::NestedObject
        name: 'trafficSplit'
        description: |
          A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your Endpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.
      - !ruby/object:Api::Type::NestedObject
        name: 'predictRequestResponseLoggingConfig'
        description: |
          Configuration for logging request-response to a BigQuery table.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'samplingRate'
              description: |
                Percentage of requests to be logged, expressed as a fraction in range(0,1].
            - !ruby/object:Api::Type::Boolean
              name: 'enabled'
              description: |
                If logging is enabled or not.
            - !ruby/object:Api::Type::NestedObject
              name: 'bigqueryDestination'
              description: |
                The BigQuery location for the output content.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'outputUri'
                    description: |
                      Required. BigQuery URI to a project or table, up to 2000 characters long. When only the project is specified, the Dataset and Table is created. When the full table reference is specified, the Dataset must exist and table must not exist. Accepted forms: * BigQuery path. For example: `bq://projectId` or `bq://projectId.bqDatasetId` or `bq://projectId.bqDatasetId.bqTableId`.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this Endpoint was created.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the Endpoint.
  

    
  - !ruby/object:Api::Resource
    name: Endpoint
    base_url: '{{parent}}/endpoints'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        Models are deployed into it, and afterwards Endpoint is called to obtain predictions and explanations.
    properties:
  
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::Boolean
        name: 'enablePrivateServiceConnect'
        description: |
          Deprecated: If true, expose the Endpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this Endpoint was last updated.
      - !ruby/object:Api::Type::String
        name: 'modelDeploymentMonitoringJob'
        description: |
          Output only. Resource name of the Model Monitoring job associated with this Endpoint if monitoring is enabled by JobService.CreateModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The description of the Endpoint.
      - !ruby/object:Api::Type::Array
        name: 'deployedModels'
        description: |
          Output only. The models deployed in this Endpoint. To add or remove DeployedModels use EndpointService.DeployModel and EndpointService.UndeployModel respectively.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'createTime'
              description: |
                Output only. Timestamp when the DeployedModel was created.
            - !ruby/object:Api::Type::NestedObject
              name: 'privateEndpoints'
              description: |
                PrivateEndpoints proto is used to provide paths for users to send requests privately. To send request via private service access, use predict_http_uri, explain_http_uri or health_http_uri. To send request via private service connect, use service_attachment.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'healthHttpUri'
                    description: |
                      Output only. Http(s) path to send health check requests.
                  - !ruby/object:Api::Type::String
                    name: 'explainHttpUri'
                    description: |
                      Output only. Http(s) path to send explain requests.
                  - !ruby/object:Api::Type::String
                    name: 'predictHttpUri'
                    description: |
                      Output only. Http(s) path to send prediction requests.
                  - !ruby/object:Api::Type::String
                    name: 'serviceAttachment'
                    description: |
                      Output only. The name of the service attachment resource. Populated if private service connect is enabled.
            - !ruby/object:Api::Type::Boolean
              name: 'disableContainerLogging'
              description: |
                For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.
            - !ruby/object:Api::Type::String
              name: 'modelVersionId'
              description: |
                Output only. The version ID of the model that is deployed.
            - !ruby/object:Api::Type::NestedObject
              name: 'explanationSpec'
              description: |
                Specification of Model explanation.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'parameters'
                    description: |
                      Parameters to configure explaining for Model's predictions.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'outputIndices'
                          description: |
                            If populated, only returns attributions that have output_index contained in output_indices. It must be an ndarray of integers, with the same shape of the output it's explaining. If not populated, returns attributions for top_k indices of outputs. If neither top_k nor output_indices is populated, returns the argmax index of the outputs. Only applicable to Models that predict multiple outputs (e,g, multi-class Models that predict multiple classes).
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::NestedObject
                          name: 'examples'
                          description: |
                            Example-based explainability that returns the nearest neighbors from the provided dataset.
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'presets'
                                description: |
                                  Preset configuration for example-based explanations
                                properties:
                                    - !ruby/object:Api::Type::Enum
                                      name: 'modality'
                                      description: |
                                        The modality of the uploaded model, which automatically configures the distance measurement and feature normalization for the underlying example index and queries. If your model does not precisely fit one of these types, it is okay to choose the closest type.
                                      values:
                                        - :MODALITY_UNSPECIFIED
                                        - :IMAGE
                                        - :TEXT
                                        - :TABULAR
                                    - !ruby/object:Api::Type::Enum
                                      name: 'query'
                                      description: |
                                        Preset option controlling parameters for speed-precision trade-off when querying for examples. If omitted, defaults to `PRECISE`.
                                      values:
                                        - :PRECISE
                                        - :FAST
                              - !ruby/object:Api::Type::Integer
                                name: 'neighborCount'
                                description: |
                                  The number of neighbors to return when querying for examples.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'exampleGcsSource'
                                description: |
                                  The Cloud Storage input instances.
                                properties:
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'gcsSource'
                                      description: |
                                        The Google Cloud Storage location for the input content.
                                      properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'uris'
                                            description: |
                                              Required. Google Cloud Storage URI(-s) to the input file(s). May contain wildcards. For more information on wildcards, see https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames.
                                            item_type: Api::Type::String
                                    - !ruby/object:Api::Type::Enum
                                      name: 'dataFormat'
                                      description: |
                                        The format in which instances are given, if not specified, assume it's JSONL format. Currently only JSONL format is supported.
                                      values:
                                        - :DATA_FORMAT_UNSPECIFIED
                                        - :JSONL
                              - !ruby/object:Api::Type::String
                                name: 'nearestNeighborSearchConfig'
                                description: |
                                  The full configuration for the generated index, the semantics are the same as metadata and should match [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'xraiAttribution'
                          description: |
                            An explanation method that redistributes Integrated Gradients attributions to segmented regions, taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Supported only by image Models.
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'smoothGradConfig'
                                description: |
                                  Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
                                properties:
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'featureNoiseSigma'
                                      description: |
                                        Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients.
                                      properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'noiseSigma'
                                            description: |
                                              Noise sigma per feature. No noise is added to features that are not set.
                                            item_type: !ruby/object:Api::Type::NestedObject
                                              properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'name'
                                                  description: |
                                                    The name of the input feature for which noise sigma is provided. The features are defined in explanation metadata inputs.
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'sigma'
                                                  description: |
                                                    This represents the standard deviation of the Gaussian kernel that will be used to add noise to the feature prior to computing gradients. Similar to noise_sigma but represents the noise added to the current feature. Defaults to 0.1.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'noiseSigma'
                                      description: |
                                        This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. Learn more about [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization). For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'noisySampleCount'
                                      description: |
                                        The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3.
                              - !ruby/object:Api::Type::Integer
                                name: 'stepCount'
                                description: |
                                  Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range. Valid range of its value is [1, 100], inclusively.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'blurBaselineConfig'
                                description: |
                                  Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'maxBlurSigma'
                                      description: |
                                        The standard deviation of the blur kernel for the blurred baseline. The same blurring parameter is used for both the height and the width dimension. If not set, the method defaults to the zero (i.e. black for images) baseline.
                        - !ruby/object:Api::Type::Integer
                          name: 'topK'
                          description: |
                            If populated, returns attributions for top K indices of outputs (defaults to 1). Only applies to Models that predicts more than one outputs (e,g, multi-class Models). When set to -1, returns explanations for all outputs.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'integratedGradientsAttribution'
                          description: |
                            An attribution method that computes the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'stepCount'
                                description: |
                                  Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is within the desired error range. Valid range of its value is [1, 100], inclusively.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'smoothGradConfig'
                                description: |
                                  Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
                                properties:
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'featureNoiseSigma'
                                      description: |
                                        Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients.
                                      properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'noiseSigma'
                                            description: |
                                              Noise sigma per feature. No noise is added to features that are not set.
                                            item_type: !ruby/object:Api::Type::NestedObject
                                              properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'name'
                                                  description: |
                                                    The name of the input feature for which noise sigma is provided. The features are defined in explanation metadata inputs.
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'sigma'
                                                  description: |
                                                    This represents the standard deviation of the Gaussian kernel that will be used to add noise to the feature prior to computing gradients. Similar to noise_sigma but represents the noise added to the current feature. Defaults to 0.1.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'noiseSigma'
                                      description: |
                                        This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. Learn more about [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization). For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'noisySampleCount'
                                      description: |
                                        The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'blurBaselineConfig'
                                description: |
                                  Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'maxBlurSigma'
                                      description: |
                                        The standard deviation of the blur kernel for the blurred baseline. The same blurring parameter is used for both the height and the width dimension. If not set, the method defaults to the zero (i.e. black for images) baseline.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'sampledShapleyAttribution'
                          description: |
                            An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'pathCount'
                                description: |
                                  Required. The number of feature permutations to consider when approximating the Shapley values. Valid range of its value is [1, 50], inclusively.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'metadata'
                    description: |
                      Metadata describing the Model's input and output for explanation.
                    properties:
                        - !ruby/object:Api::Type::String
                          name: 'featureAttributionsSchemaUri'
                          description: |
                            Points to a YAML file stored on Google Cloud Storage describing the format of the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on output may be different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
                        - !ruby/object:Api::Type::String
                          name: 'latentSpaceSource'
                          description: |
                            Name of the source to generate embeddings for example based explanations.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'outputs'
                          description: |
                            Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images, keys can be any user defined string that consists of any UTF-8 characters. For custom images, keys are the name of the output field in the prediction to be explained. Currently only one key is allowed.
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                Metadata of the prediction output to be explained.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'inputs'
                          description: |
                            Required. Map from feature names to feature input metadata. Keys are the name of the features. Values are the specification of the feature. An empty InputMetadata is valid. It describes a text feature which has the name specified as the key in ExplanationMetadata.inputs. The baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images, the key can be any friendly name of the feature. Once specified, featureAttributions are keyed by this key (if not grouped with another feature). For custom images, the key must match with the key in instance.
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                Metadata of the input of a feature. Fields other than InputMetadata.input_baselines are applicable only for Models that are using Vertex AI-provided images for Tensorflow.
            - !ruby/object:Api::Type::Boolean
              name: 'enableAccessLogging'
              description: |
                If true, online prediction access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each prediction request. Note that logs may incur a cost, especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option.
            - !ruby/object:Api::Type::String
              name: 'serviceAccount'
              description: |
                The service account that the DeployedModel's container runs as. Specify the email address of the service account. If this service account is not specified, the container runs as a service account that doesn't have access to the resource project. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.
            - !ruby/object:Api::Type::NestedObject
              name: 'dedicatedResources'
              description: |
                A description of resources that are dedicated to a DeployedModel, and that need a higher degree of manual configuration.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'machineSpec'
                    description: |
                      Specification of a single machine.
                    properties:
                        - !ruby/object:Api::Type::Enum
                          name: 'acceleratorType'
                          description: |
                            Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count.
                          values:
                            - :ACCELERATOR_TYPE_UNSPECIFIED
                            - :NVIDIA_TESLA_K80
                            - :NVIDIA_TESLA_P100
                            - :NVIDIA_TESLA_V100
                            - :NVIDIA_TESLA_P4
                            - :NVIDIA_TESLA_T4
                            - :NVIDIA_TESLA_A100
                            - :NVIDIA_A100_80GB
                            - :NVIDIA_L4
                            - :TPU_V2
                            - :TPU_V3
                            - :TPU_V4_POD
                        - !ruby/object:Api::Type::String
                          name: 'machineType'
                          description: |
                            Immutable. The type of the machine. See the [list of machine types supported for prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types) See the [list of machine types supported for custom training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types). For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required.
                        - !ruby/object:Api::Type::Integer
                          name: 'acceleratorCount'
                          description: |
                            The number of accelerators to attach to the machine.
                  - !ruby/object:Api::Type::Integer
                    name: 'maxReplicaCount'
                    description: |
                      Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, will use min_replica_count as the default value. The value of this field impacts the charge against Vertex CPU and GPU quotas. Specifically, you will be charged for (max_replica_count * number of cores in the selected machine type) and (max_replica_count * number of GPUs per replica in the selected machine type).
                  - !ruby/object:Api::Type::Array
                    name: 'autoscalingMetricSpecs'
                    description: |
                      Immutable. The metric specifications that overrides a resource utilization metric (CPU utilization, accelerator's duty cycle, and so on) target value (default to 60 if not set). At most one entry is allowed per metric. If machine_spec.accelerator_count is above 0, the autoscaling will be based on both CPU utilization and accelerator's duty cycle metrics and scale up when either metrics exceeds its target value while scale down if both metrics are under their target value. The default target value is 60 for both metrics. If machine_spec.accelerator_count is 0, the autoscaling will be based on CPU utilization metric only with default target value 60 if not explicitly set. For example, in the case of Online Prediction, if you want to override target CPU utilization to 80, you should set autoscaling_metric_specs.metric_name to `aiplatform.googleapis.com/prediction/online/cpu/utilization` and autoscaling_metric_specs.target to `80`.
                    item_type: !ruby/object:Api::Type::NestedObject
                      properties:
                        - !ruby/object:Api::Type::Integer
                          name: 'target'
                          description: |
                            The target resource utilization in percentage (1% - 100%) for the given metric; once the real usage deviates from the target by a certain percentage, the machine replicas change. The default value is 60 (representing 60%) if not provided.
                        - !ruby/object:Api::Type::String
                          name: 'metricName'
                          description: |
                            Required. The resource metric name. Supported metrics: * For Online Prediction: * `aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle` * `aiplatform.googleapis.com/prediction/online/cpu/utilization`
                  - !ruby/object:Api::Type::Integer
                    name: 'minReplicaCount'
                    description: |
                      Required. Immutable. The minimum number of machine replicas this DeployedModel will be always deployed on. This value must be greater than or equal to 1. If traffic against the DeployedModel increases, it may dynamically be deployed onto more replicas, and as traffic decreases, some of these extra replicas may be freed.
            - !ruby/object:Api::Type::NestedObject
              name: 'automaticResources'
              description: |
                A description of resources that to large degree are decided by Vertex AI, and require only a modest additional configuration. Each Model supporting these resources documents its specific guidelines.
              properties:
                  - !ruby/object:Api::Type::Integer
                    name: 'maxReplicaCount'
                    description: |
                      Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, a no upper bound for scaling under heavy traffic will be assume, though Vertex AI may be unable to scale beyond certain replica number.
                  - !ruby/object:Api::Type::Integer
                    name: 'minReplicaCount'
                    description: |
                      Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas up to max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the requested value is too large, the deployment will error.
            - !ruby/object:Api::Type::String
              name: 'displayName'
              description: |
                The display name of the DeployedModel. If not provided upon creation, the Model's display_name is used.
            - !ruby/object:Api::Type::String
              name: 'model'
              description: |
                Required. The resource name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel's Endpoint. The resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed.
            - !ruby/object:Api::Type::String
              name: 'id'
              description: |
                Immutable. The ID of the DeployedModel. If not provided upon deployment, Vertex AI will generate a value for this ID. This value should be 1-10 characters, and valid characters are /[0-9]/.
      - !ruby/object:Api::Type::String
        name: 'network'
        description: |
          Optional. The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the Endpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. Only one of the fields, network or enable_private_service_connect, can be set. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is network name.
      - !ruby/object:Api::Type::NestedObject
        name: 'trafficSplit'
        description: |
          A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your Endpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.
      - !ruby/object:Api::Type::NestedObject
        name: 'predictRequestResponseLoggingConfig'
        description: |
          Configuration for logging request-response to a BigQuery table.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'samplingRate'
              description: |
                Percentage of requests to be logged, expressed as a fraction in range(0,1].
            - !ruby/object:Api::Type::Boolean
              name: 'enabled'
              description: |
                If logging is enabled or not.
            - !ruby/object:Api::Type::NestedObject
              name: 'bigqueryDestination'
              description: |
                The BigQuery location for the output content.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'outputUri'
                    description: |
                      Required. BigQuery URI to a project or table, up to 2000 characters long. When only the project is specified, the Dataset and Table is created. When the full table reference is specified, the Dataset must exist and table must not exist. Accepted forms: * BigQuery path. For example: `bq://projectId` or `bq://projectId.bqDatasetId` or `bq://projectId.bqDatasetId.bqTableId`.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this Endpoint was created.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the Endpoint.
  
