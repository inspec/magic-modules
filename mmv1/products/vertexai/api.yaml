# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: VertexAI
display_name: Vertex AI
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://{{region}}-aiplatform.googleapis.com/v1/
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://{{region}}-aiplatform.googleapis.com/v1beta1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
objects:
# Vertex AI Datasets
# Vertex AI Featurestores
  - !ruby/object:Api::Resource
    name: Featurestore
    base_url: projects/{{project}}/locations/{{region}}/featurestores
    create_url: projects/{{project}}/locations/{{region}}/featurestores?featurestoreId={{name}}
    self_link: 'projects/{{project}}/locations/{{region}}/featurestores/{{name}}'
    min_version: beta
    update_verb: :PATCH
    update_mask: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/vertex-ai/docs'
      api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featurestores'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
      A collection of DataItems and Annotations on them.
    parameters:
      - !ruby/object:Api::Type::String
        name: region
        description: The region of the dataset. eg us-central1
        url_param_only: true
        input: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the Featurestore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
        input: true
        url_param_only: true
        pattern: projects/{{project}}/locations/{{region}}/featurestores/{{name}}
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: Used to perform consistent read-modify-write updates. 
        output: true
      - !ruby/object:Api::Type::String
        name: 'createTime'
        output: true
        description: |
          The timestamp of when the featurestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        output: true
        description: |
          The timestamp of when the featurestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          A set of key/value label pairs to assign to this Featurestore.
      - !ruby/object:Api::Type::NestedObject
        name: 'onlineServingConfig'
        description: |
           Config for online serving resources.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'fixedNodeCount'
            required: true
            description: |
              The number of nodes for each cluster. The number of nodes will not scale automatically but can be scaled manually by providing different values when updating.
# Vertex AI Featurestore Entity Type
  - !ruby/object:Api::Resource
    name: FeaturestoreEntitytype
    base_url: '{{featurestore}}/entityTypes'
    create_url: '{{featurestore}}/entityTypes?entityTypeId={{name}}'
    self_link: '{{featurestore}}/entityTypes/{{name}}'
    min_version: beta
    update_verb: :PATCH
    update_mask: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/vertex-ai/docs'
      api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featurestores.entityTypes'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
      include_project: true
    description: |-
      An entity type is a type of object in a system that needs to be modeled and have stored information about. For example, driver is an entity type, and driver0 is an instance of an entity type driver.
    parameters:
      - !ruby/object:Api::Type::String
        name: featurestore
        description: The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}.
        url_param_only: true
        input: true
        required: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the EntityType. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
        input: true
        url_param_only: true
        pattern: '{featurestore}}/entityTypes/{{name}}'
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: Used to perform consistent read-modify-write updates. 
        output: true
      - !ruby/object:Api::Type::String
        name: 'createTime'
        output: true
        description: |
          The timestamp of when the featurestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        output: true
        description: |
          The timestamp of when the featurestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          A set of key/value label pairs to assign to this EntityType.
      - !ruby/object:Api::Type::NestedObject
        name: 'monitoringConfig'
        description: |
          The default monitoring configuration for all Features under this EntityType.

          If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: 'snapshotAnalysis'
            description: |
              Configuration of how features in Featurestore are monitored.
            properties:
              - !ruby/object:Api::Type::Boolean
                name: 'disabled'
                default_value: false
                description: |
                  The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoringInterval for Features under it.
              - !ruby/object:Api::Type::String
                name: 'monitoringInterval'
                description: |
                  Configuration of the snapshot analysis based monitoring pipeline running interval. The value is rolled up to full day.

                  A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
# Vertex ML Metadata
  - !ruby/object:Api::Resource
    name: MetadataStore
    base_url: projects/{{project}}/locations/{{region}}/metadataStores
    self_link: 'projects/{{project}}/locations/{{region}}/metadataStores/{{name}}'
    create_url: projects/{{project}}/locations/{{region}}/metadataStores?metadataStoreId={{name}}
    min_version: beta
    input: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/vertex-ai/docs'
      api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.metadataStores'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
      Instance of a metadata store. Contains a set of metadata that can be queried.
    parameters:
      - !ruby/object:Api::Type::String
        name: region
        description: The region of the Metadata Store. eg us-central1
        url_param_only: true
        input: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the MetadataStore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
        input: true
        url_param_only: true
        pattern: projects/{{project}}/locations/{{region}}/metadataStores/{{name}}
      - !ruby/object:Api::Type::String
        name: 'description'
        description: Description of the MetadataStore.
        input: true
      - !ruby/object:Api::Type::String
        name: 'createTime'
        output: true
        description: |
          The timestamp of when the MetadataStore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        output: true
        description: |
          The timestamp of when the MetadataStore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        input: true
        description: |
          Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this MetadataStore will be secured by this key.
        properties:
          - !ruby/object:Api::Type::String
            name: 'kmsKeyName'
            description: |
              Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. 
              Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
            input: true
      - !ruby/object:Api::Type::NestedObject
        name: 'state'
        output: true
        description: |
          State information of the MetadataStore.
        properties:
          - !ruby/object:Api::Type::String
            name: 'diskUtilizationBytes'
            description: |
              The disk utilization of the MetadataStore in bytes.
            output: true


    
  - !ruby/object:Api::Resource
    name: Dataset
    base_url: '{{parent}}/datasets'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A collection of DataItems and Annotations on them.
    properties:
  
      - !ruby/object:Api::Type::Array
        name: 'savedQueries'
        description: |
          All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Integer
              name: 'annotationSpecCount'
              description: |
                Output only. Number of AnnotationSpecs in the context of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'updateTime'
              description: |
                Output only. Timestamp when SavedQuery was last updated.
            - !ruby/object:Api::Type::Boolean
              name: 'supportAutomlTraining'
              description: |
                Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training.
            - !ruby/object:Api::Type::String
              name: 'metadata'
              description: |
                Some additional information about the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'problemType'
              description: |
                Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Output only. Resource name of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'createTime'
              description: |
                Output only. Timestamp when this SavedQuery was created.
            - !ruby/object:Api::Type::String
              name: 'etag'
              description: |
                Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens.
            - !ruby/object:Api::Type::String
              name: 'displayName'
              description: |
                Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters.
            - !ruby/object:Api::Type::String
              name: 'annotationFilter'
              description: |
                Output only. Filters on the Annotations in the dataset.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this Dataset was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the Dataset.
      - !ruby/object:Api::Type::String
        name: 'metadata'
        description: |
          Required. Additional information about the Dataset.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The description of the Dataset.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Dataset: * "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value is the metadata_schema's title.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::String
        name: 'metadataSchemaUri'
        description: |
          Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
      - !ruby/object:Api::Type::String
        name: 'metadataArtifact'
        description: |
          Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this Dataset was last updated.
      - !ruby/object:Api::Type::String
        name: 'dataItemCount'
        description: |
          Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.
  

    
  - !ruby/object:Api::Resource
    name: Dataset
    base_url: '{{parent}}/datasets'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A collection of DataItems and Annotations on them.
    properties:
  
      - !ruby/object:Api::Type::Array
        name: 'savedQueries'
        description: |
          All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Integer
              name: 'annotationSpecCount'
              description: |
                Output only. Number of AnnotationSpecs in the context of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'updateTime'
              description: |
                Output only. Timestamp when SavedQuery was last updated.
            - !ruby/object:Api::Type::Boolean
              name: 'supportAutomlTraining'
              description: |
                Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training.
            - !ruby/object:Api::Type::String
              name: 'metadata'
              description: |
                Some additional information about the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'problemType'
              description: |
                Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Output only. Resource name of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'createTime'
              description: |
                Output only. Timestamp when this SavedQuery was created.
            - !ruby/object:Api::Type::String
              name: 'etag'
              description: |
                Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens.
            - !ruby/object:Api::Type::String
              name: 'displayName'
              description: |
                Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters.
            - !ruby/object:Api::Type::String
              name: 'annotationFilter'
              description: |
                Output only. Filters on the Annotations in the dataset.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this Dataset was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the Dataset.
      - !ruby/object:Api::Type::String
        name: 'metadata'
        description: |
          Required. Additional information about the Dataset.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The description of the Dataset.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Dataset: * "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value is the metadata_schema's title.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::String
        name: 'metadataSchemaUri'
        description: |
          Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
      - !ruby/object:Api::Type::String
        name: 'metadataArtifact'
        description: |
          Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this Dataset was last updated.
      - !ruby/object:Api::Type::String
        name: 'dataItemCount'
        description: |
          Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.
  

    
  - !ruby/object:Api::Resource
    name: Dataset
    base_url: '{{parent}}/datasets'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A collection of DataItems and Annotations on them.
    properties:
  
      - !ruby/object:Api::Type::Array
        name: 'savedQueries'
        description: |
          All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Integer
              name: 'annotationSpecCount'
              description: |
                Output only. Number of AnnotationSpecs in the context of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'updateTime'
              description: |
                Output only. Timestamp when SavedQuery was last updated.
            - !ruby/object:Api::Type::Boolean
              name: 'supportAutomlTraining'
              description: |
                Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training.
            - !ruby/object:Api::Type::String
              name: 'metadata'
              description: |
                Some additional information about the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'problemType'
              description: |
                Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Output only. Resource name of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'createTime'
              description: |
                Output only. Timestamp when this SavedQuery was created.
            - !ruby/object:Api::Type::String
              name: 'etag'
              description: |
                Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens.
            - !ruby/object:Api::Type::String
              name: 'displayName'
              description: |
                Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters.
            - !ruby/object:Api::Type::String
              name: 'annotationFilter'
              description: |
                Output only. Filters on the Annotations in the dataset.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this Dataset was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the Dataset.
      - !ruby/object:Api::Type::String
        name: 'metadata'
        description: |
          Required. Additional information about the Dataset.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The description of the Dataset.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Dataset: * "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value is the metadata_schema's title.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::String
        name: 'metadataSchemaUri'
        description: |
          Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
      - !ruby/object:Api::Type::String
        name: 'metadataArtifact'
        description: |
          Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this Dataset was last updated.
      - !ruby/object:Api::Type::String
        name: 'dataItemCount'
        description: |
          Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.
  

    
  - !ruby/object:Api::Resource
    name: DataLabelingJob
    base_url: '{{parent}}/dataLabelingJobs'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset:
    properties:
  
      - !ruby/object:Api::Type::Integer
        name: 'labelingProgress'
        description: |
          Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this DataLabelingJob was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'inputsSchemaUri'
        description: |
          Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
      - !ruby/object:Api::Type::Integer
        name: 'labelerCount'
        description: |
          Required. Number of labelers to work on each DataItem.
      - !ruby/object:Api::Type::NestedObject
        name: 'error'
        description: |
          The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
        properties:
            - !ruby/object:Api::Type::Array
              name: 'details'
              description: |
                A list of messages that carry the error details. There is a common set of message types for APIs to use.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Integer
              name: 'code'
              description: |
                The status code, which should be an enum value of google.rpc.Code.
            - !ruby/object:Api::Type::String
              name: 'message'
              description: |
                A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
      - !ruby/object:Api::Type::String
        name: 'inputs'
        description: |
          Required. Input config parameters for the DataLabelingJob.
      - !ruby/object:Api::Type::String
        name: 'instructionUri'
        description: |
          Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this DataLabelingJob was updated most recently.
      - !ruby/object:Api::Type::NestedObject
        name: 'annotationLabels'
        description: |
          Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. Resource name of the DataLabelingJob.
      - !ruby/object:Api::Type::NestedObject
        name: 'currentSpend'
        description: |
          Represents an amount of money with its currency type.
        properties:
            - !ruby/object:Api::Type::String
              name: 'currencyCode'
              description: |
                The three-letter currency code defined in ISO 4217.
            - !ruby/object:Api::Type::Integer
              name: 'nanos'
              description: |
                Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
            - !ruby/object:Api::Type::String
              name: 'units'
              description: |
                The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
      - !ruby/object:Api::Type::Array
        name: 'specialistPools'
        description: |
          The SpecialistPools' resource names associated with this job.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          Output only. The detailed state of the job.
        values:
          - :JOB_STATE_UNSPECIFIED
          - :JOB_STATE_QUEUED
          - :JOB_STATE_PENDING
          - :JOB_STATE_RUNNING
          - :JOB_STATE_SUCCEEDED
          - :JOB_STATE_FAILED
          - :JOB_STATE_CANCELLING
          - :JOB_STATE_CANCELLED
          - :JOB_STATE_PAUSED
          - :JOB_STATE_EXPIRED
          - :JOB_STATE_UPDATING
          - :JOB_STATE_PARTIALLY_SUCCEEDED
      - !ruby/object:Api::Type::Array
        name: 'datasets'
        description: |
          Required. Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
        item_type: Api::Type::String
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::NestedObject
        name: 'activeLearningConfig'
        description: |
          Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'maxDataItemPercentage'
              description: |
                Max percent of total DataItems for human labeling.
            - !ruby/object:Api::Type::NestedObject
              name: 'sampleConfig'
              description: |
                Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.
              properties:
                  - !ruby/object:Api::Type::Enum
                    name: 'sampleStrategy'
                    description: |
                      Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch.
                    values:
                      - :SAMPLE_STRATEGY_UNSPECIFIED
                      - :UNCERTAINTY
                  - !ruby/object:Api::Type::Integer
                    name: 'initialBatchSamplePercentage'
                    description: |
                      The percentage of data needed to be labeled in the first batch.
                  - !ruby/object:Api::Type::Integer
                    name: 'followingBatchSamplePercentage'
                    description: |
                      The percentage of data needed to be labeled in each following batch (except the first batch).
            - !ruby/object:Api::Type::String
              name: 'maxDataItemCount'
              description: |
                Max number of human labeled DataItems.
            - !ruby/object:Api::Type::NestedObject
              name: 'trainingConfig'
              description: |
                CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'timeoutTrainingMilliHours'
                    description: |
                      The timeout hours for the CMLE training job, expressed in milli hours i.e. 1,000 value in this field means 1 hour.
  

    
  - !ruby/object:Api::Resource
    name: DataLabelingJob
    base_url: '{{parent}}/dataLabelingJobs'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset:
    properties:
  
      - !ruby/object:Api::Type::Integer
        name: 'labelingProgress'
        description: |
          Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this DataLabelingJob was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'inputsSchemaUri'
        description: |
          Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
      - !ruby/object:Api::Type::Integer
        name: 'labelerCount'
        description: |
          Required. Number of labelers to work on each DataItem.
      - !ruby/object:Api::Type::NestedObject
        name: 'error'
        description: |
          The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
        properties:
            - !ruby/object:Api::Type::Array
              name: 'details'
              description: |
                A list of messages that carry the error details. There is a common set of message types for APIs to use.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Integer
              name: 'code'
              description: |
                The status code, which should be an enum value of google.rpc.Code.
            - !ruby/object:Api::Type::String
              name: 'message'
              description: |
                A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
      - !ruby/object:Api::Type::String
        name: 'inputs'
        description: |
          Required. Input config parameters for the DataLabelingJob.
      - !ruby/object:Api::Type::String
        name: 'instructionUri'
        description: |
          Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this DataLabelingJob was updated most recently.
      - !ruby/object:Api::Type::NestedObject
        name: 'annotationLabels'
        description: |
          Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. Resource name of the DataLabelingJob.
      - !ruby/object:Api::Type::NestedObject
        name: 'currentSpend'
        description: |
          Represents an amount of money with its currency type.
        properties:
            - !ruby/object:Api::Type::String
              name: 'currencyCode'
              description: |
                The three-letter currency code defined in ISO 4217.
            - !ruby/object:Api::Type::Integer
              name: 'nanos'
              description: |
                Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
            - !ruby/object:Api::Type::String
              name: 'units'
              description: |
                The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
      - !ruby/object:Api::Type::Array
        name: 'specialistPools'
        description: |
          The SpecialistPools' resource names associated with this job.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          Output only. The detailed state of the job.
        values:
          - :JOB_STATE_UNSPECIFIED
          - :JOB_STATE_QUEUED
          - :JOB_STATE_PENDING
          - :JOB_STATE_RUNNING
          - :JOB_STATE_SUCCEEDED
          - :JOB_STATE_FAILED
          - :JOB_STATE_CANCELLING
          - :JOB_STATE_CANCELLED
          - :JOB_STATE_PAUSED
          - :JOB_STATE_EXPIRED
          - :JOB_STATE_UPDATING
          - :JOB_STATE_PARTIALLY_SUCCEEDED
      - !ruby/object:Api::Type::Array
        name: 'datasets'
        description: |
          Required. Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
        item_type: Api::Type::String
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::NestedObject
        name: 'activeLearningConfig'
        description: |
          Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'maxDataItemPercentage'
              description: |
                Max percent of total DataItems for human labeling.
            - !ruby/object:Api::Type::NestedObject
              name: 'sampleConfig'
              description: |
                Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.
              properties:
                  - !ruby/object:Api::Type::Enum
                    name: 'sampleStrategy'
                    description: |
                      Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch.
                    values:
                      - :SAMPLE_STRATEGY_UNSPECIFIED
                      - :UNCERTAINTY
                  - !ruby/object:Api::Type::Integer
                    name: 'initialBatchSamplePercentage'
                    description: |
                      The percentage of data needed to be labeled in the first batch.
                  - !ruby/object:Api::Type::Integer
                    name: 'followingBatchSamplePercentage'
                    description: |
                      The percentage of data needed to be labeled in each following batch (except the first batch).
            - !ruby/object:Api::Type::String
              name: 'maxDataItemCount'
              description: |
                Max number of human labeled DataItems.
            - !ruby/object:Api::Type::NestedObject
              name: 'trainingConfig'
              description: |
                CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'timeoutTrainingMilliHours'
                    description: |
                      The timeout hours for the CMLE training job, expressed in milli hours i.e. 1,000 value in this field means 1 hour.
  

    
  - !ruby/object:Api::Resource
    name: DataLabelingJob
    base_url: '{{parent}}/dataLabelingJobs'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset:
    properties:
  
      - !ruby/object:Api::Type::Integer
        name: 'labelingProgress'
        description: |
          Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this DataLabelingJob was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'inputsSchemaUri'
        description: |
          Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
      - !ruby/object:Api::Type::Integer
        name: 'labelerCount'
        description: |
          Required. Number of labelers to work on each DataItem.
      - !ruby/object:Api::Type::NestedObject
        name: 'error'
        description: |
          The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
        properties:
            - !ruby/object:Api::Type::Array
              name: 'details'
              description: |
                A list of messages that carry the error details. There is a common set of message types for APIs to use.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Integer
              name: 'code'
              description: |
                The status code, which should be an enum value of google.rpc.Code.
            - !ruby/object:Api::Type::String
              name: 'message'
              description: |
                A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
      - !ruby/object:Api::Type::String
        name: 'inputs'
        description: |
          Required. Input config parameters for the DataLabelingJob.
      - !ruby/object:Api::Type::String
        name: 'instructionUri'
        description: |
          Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this DataLabelingJob was updated most recently.
      - !ruby/object:Api::Type::NestedObject
        name: 'annotationLabels'
        description: |
          Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. Resource name of the DataLabelingJob.
      - !ruby/object:Api::Type::NestedObject
        name: 'currentSpend'
        description: |
          Represents an amount of money with its currency type.
        properties:
            - !ruby/object:Api::Type::String
              name: 'currencyCode'
              description: |
                The three-letter currency code defined in ISO 4217.
            - !ruby/object:Api::Type::Integer
              name: 'nanos'
              description: |
                Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
            - !ruby/object:Api::Type::String
              name: 'units'
              description: |
                The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
      - !ruby/object:Api::Type::Array
        name: 'specialistPools'
        description: |
          The SpecialistPools' resource names associated with this job.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          Output only. The detailed state of the job.
        values:
          - :JOB_STATE_UNSPECIFIED
          - :JOB_STATE_QUEUED
          - :JOB_STATE_PENDING
          - :JOB_STATE_RUNNING
          - :JOB_STATE_SUCCEEDED
          - :JOB_STATE_FAILED
          - :JOB_STATE_CANCELLING
          - :JOB_STATE_CANCELLED
          - :JOB_STATE_PAUSED
          - :JOB_STATE_EXPIRED
          - :JOB_STATE_UPDATING
          - :JOB_STATE_PARTIALLY_SUCCEEDED
      - !ruby/object:Api::Type::Array
        name: 'datasets'
        description: |
          Required. Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
        item_type: Api::Type::String
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::NestedObject
        name: 'activeLearningConfig'
        description: |
          Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'maxDataItemPercentage'
              description: |
                Max percent of total DataItems for human labeling.
            - !ruby/object:Api::Type::NestedObject
              name: 'sampleConfig'
              description: |
                Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.
              properties:
                  - !ruby/object:Api::Type::Enum
                    name: 'sampleStrategy'
                    description: |
                      Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch.
                    values:
                      - :SAMPLE_STRATEGY_UNSPECIFIED
                      - :UNCERTAINTY
                  - !ruby/object:Api::Type::Integer
                    name: 'initialBatchSamplePercentage'
                    description: |
                      The percentage of data needed to be labeled in the first batch.
                  - !ruby/object:Api::Type::Integer
                    name: 'followingBatchSamplePercentage'
                    description: |
                      The percentage of data needed to be labeled in each following batch (except the first batch).
            - !ruby/object:Api::Type::String
              name: 'maxDataItemCount'
              description: |
                Max number of human labeled DataItems.
            - !ruby/object:Api::Type::NestedObject
              name: 'trainingConfig'
              description: |
                CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'timeoutTrainingMilliHours'
                    description: |
                      The timeout hours for the CMLE training job, expressed in milli hours i.e. 1,000 value in this field means 1 hour.
  

    
  - !ruby/object:Api::Resource
    name: DataLabelingJob
    base_url: '{{parent}}/dataLabelingJobs'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset:
    properties:
  
      - !ruby/object:Api::Type::Integer
        name: 'labelingProgress'
        description: |
          Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this DataLabelingJob was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'inputsSchemaUri'
        description: |
          Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
      - !ruby/object:Api::Type::Integer
        name: 'labelerCount'
        description: |
          Required. Number of labelers to work on each DataItem.
      - !ruby/object:Api::Type::NestedObject
        name: 'error'
        description: |
          The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
        properties:
            - !ruby/object:Api::Type::Array
              name: 'details'
              description: |
                A list of messages that carry the error details. There is a common set of message types for APIs to use.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Integer
              name: 'code'
              description: |
                The status code, which should be an enum value of google.rpc.Code.
            - !ruby/object:Api::Type::String
              name: 'message'
              description: |
                A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
      - !ruby/object:Api::Type::String
        name: 'inputs'
        description: |
          Required. Input config parameters for the DataLabelingJob.
      - !ruby/object:Api::Type::String
        name: 'instructionUri'
        description: |
          Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this DataLabelingJob was updated most recently.
      - !ruby/object:Api::Type::NestedObject
        name: 'annotationLabels'
        description: |
          Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. Resource name of the DataLabelingJob.
      - !ruby/object:Api::Type::NestedObject
        name: 'currentSpend'
        description: |
          Represents an amount of money with its currency type.
        properties:
            - !ruby/object:Api::Type::String
              name: 'currencyCode'
              description: |
                The three-letter currency code defined in ISO 4217.
            - !ruby/object:Api::Type::Integer
              name: 'nanos'
              description: |
                Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
            - !ruby/object:Api::Type::String
              name: 'units'
              description: |
                The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
      - !ruby/object:Api::Type::Array
        name: 'specialistPools'
        description: |
          The SpecialistPools' resource names associated with this job.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          Output only. The detailed state of the job.
        values:
          - :JOB_STATE_UNSPECIFIED
          - :JOB_STATE_QUEUED
          - :JOB_STATE_PENDING
          - :JOB_STATE_RUNNING
          - :JOB_STATE_SUCCEEDED
          - :JOB_STATE_FAILED
          - :JOB_STATE_CANCELLING
          - :JOB_STATE_CANCELLED
          - :JOB_STATE_PAUSED
          - :JOB_STATE_EXPIRED
          - :JOB_STATE_UPDATING
          - :JOB_STATE_PARTIALLY_SUCCEEDED
      - !ruby/object:Api::Type::Array
        name: 'datasets'
        description: |
          Required. Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
        item_type: Api::Type::String
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each DataLabelingJob: * "aiplatform.googleapis.com/schema": output only, its value is the inputs_schema's title.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::NestedObject
        name: 'activeLearningConfig'
        description: |
          Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'maxDataItemPercentage'
              description: |
                Max percent of total DataItems for human labeling.
            - !ruby/object:Api::Type::NestedObject
              name: 'sampleConfig'
              description: |
                Active learning data sampling config. For every active learning labeling iteration, it will select a batch of data based on the sampling strategy.
              properties:
                  - !ruby/object:Api::Type::Enum
                    name: 'sampleStrategy'
                    description: |
                      Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch.
                    values:
                      - :SAMPLE_STRATEGY_UNSPECIFIED
                      - :UNCERTAINTY
                  - !ruby/object:Api::Type::Integer
                    name: 'initialBatchSamplePercentage'
                    description: |
                      The percentage of data needed to be labeled in the first batch.
                  - !ruby/object:Api::Type::Integer
                    name: 'followingBatchSamplePercentage'
                    description: |
                      The percentage of data needed to be labeled in each following batch (except the first batch).
            - !ruby/object:Api::Type::String
              name: 'maxDataItemCount'
              description: |
                Max number of human labeled DataItems.
            - !ruby/object:Api::Type::NestedObject
              name: 'trainingConfig'
              description: |
                CMLE training config. For every active learning labeling iteration, system will train a machine learning model on CMLE. The trained model will be used by data sampling algorithm to select DataItems.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'timeoutTrainingMilliHours'
                    description: |
                      The timeout hours for the CMLE training job, expressed in milli hours i.e. 1,000 value in this field means 1 hour.
  
