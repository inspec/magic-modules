# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: VertexAI
display_name: Vertex AI
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://{{region}}-aiplatform.googleapis.com/v1/
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://{{region}}-aiplatform.googleapis.com/v1beta1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
objects:
# Vertex AI Datasets
# Vertex AI Featurestores
  - !ruby/object:Api::Resource
    name: Featurestore
    base_url: projects/{{project}}/locations/{{region}}/featurestores
    create_url: projects/{{project}}/locations/{{region}}/featurestores?featurestoreId={{name}}
    self_link: 'projects/{{project}}/locations/{{region}}/featurestores/{{name}}'
    min_version: beta
    update_verb: :PATCH
    update_mask: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/vertex-ai/docs'
      api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featurestores'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
      A collection of DataItems and Annotations on them.
    parameters:
      - !ruby/object:Api::Type::String
        name: region
        description: The region of the dataset. eg us-central1
        url_param_only: true
        input: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the Featurestore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
        input: true
        url_param_only: true
        pattern: projects/{{project}}/locations/{{region}}/featurestores/{{name}}
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: Used to perform consistent read-modify-write updates. 
        output: true
      - !ruby/object:Api::Type::String
        name: 'createTime'
        output: true
        description: |
          The timestamp of when the featurestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        output: true
        description: |
          The timestamp of when the featurestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          A set of key/value label pairs to assign to this Featurestore.
      - !ruby/object:Api::Type::NestedObject
        name: 'onlineServingConfig'
        description: |
           Config for online serving resources.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'fixedNodeCount'
            required: true
            description: |
              The number of nodes for each cluster. The number of nodes will not scale automatically but can be scaled manually by providing different values when updating.
# Vertex AI Featurestore Entity Type
  - !ruby/object:Api::Resource
    name: FeaturestoreEntitytype
    base_url: '{{featurestore}}/entityTypes'
    create_url: '{{featurestore}}/entityTypes?entityTypeId={{name}}'
    self_link: '{{featurestore}}/entityTypes/{{name}}'
    min_version: beta
    update_verb: :PATCH
    update_mask: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/vertex-ai/docs'
      api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featurestores.entityTypes'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
      include_project: true
    description: |-
      An entity type is a type of object in a system that needs to be modeled and have stored information about. For example, driver is an entity type, and driver0 is an instance of an entity type driver.
    parameters:
      - !ruby/object:Api::Type::String
        name: featurestore
        description: The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}.
        url_param_only: true
        input: true
        required: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the EntityType. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
        input: true
        url_param_only: true
        pattern: '{featurestore}}/entityTypes/{{name}}'
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: Used to perform consistent read-modify-write updates. 
        output: true
      - !ruby/object:Api::Type::String
        name: 'createTime'
        output: true
        description: |
          The timestamp of when the featurestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        output: true
        description: |
          The timestamp of when the featurestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          A set of key/value label pairs to assign to this EntityType.
      - !ruby/object:Api::Type::NestedObject
        name: 'monitoringConfig'
        description: |
          The default monitoring configuration for all Features under this EntityType.

          If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: 'snapshotAnalysis'
            description: |
              Configuration of how features in Featurestore are monitored.
            properties:
              - !ruby/object:Api::Type::Boolean
                name: 'disabled'
                default_value: false
                description: |
                  The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoringInterval for Features under it.
              - !ruby/object:Api::Type::String
                name: 'monitoringInterval'
                description: |
                  Configuration of the snapshot analysis based monitoring pipeline running interval. The value is rolled up to full day.

                  A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
# Vertex ML Metadata
  - !ruby/object:Api::Resource
    name: MetadataStore
    base_url: projects/{{project}}/locations/{{region}}/metadataStores
    self_link: 'projects/{{project}}/locations/{{region}}/metadataStores/{{name}}'
    create_url: projects/{{project}}/locations/{{region}}/metadataStores?metadataStoreId={{name}}
    min_version: beta
    input: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/vertex-ai/docs'
      api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.metadataStores'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
      Instance of a metadata store. Contains a set of metadata that can be queried.
    parameters:
      - !ruby/object:Api::Type::String
        name: region
        description: The region of the Metadata Store. eg us-central1
        url_param_only: true
        input: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the MetadataStore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
        input: true
        url_param_only: true
        pattern: projects/{{project}}/locations/{{region}}/metadataStores/{{name}}
      - !ruby/object:Api::Type::String
        name: 'description'
        description: Description of the MetadataStore.
        input: true
      - !ruby/object:Api::Type::String
        name: 'createTime'
        output: true
        description: |
          The timestamp of when the MetadataStore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        output: true
        description: |
          The timestamp of when the MetadataStore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        input: true
        description: |
          Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this MetadataStore will be secured by this key.
        properties:
          - !ruby/object:Api::Type::String
            name: 'kmsKeyName'
            description: |
              Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. 
              Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
            input: true
      - !ruby/object:Api::Type::NestedObject
        name: 'state'
        output: true
        description: |
          State information of the MetadataStore.
        properties:
          - !ruby/object:Api::Type::String
            name: 'diskUtilizationBytes'
            description: |
              The disk utilization of the MetadataStore in bytes.
            output: true


    
  - !ruby/object:Api::Resource
    name: Dataset
    base_url: '{{parent}}/datasets'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A collection of DataItems and Annotations on them.
    properties:
  
      - !ruby/object:Api::Type::Array
        name: 'savedQueries'
        description: |
          All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Integer
              name: 'annotationSpecCount'
              description: |
                Output only. Number of AnnotationSpecs in the context of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'updateTime'
              description: |
                Output only. Timestamp when SavedQuery was last updated.
            - !ruby/object:Api::Type::Boolean
              name: 'supportAutomlTraining'
              description: |
                Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training.
            - !ruby/object:Api::Type::String
              name: 'metadata'
              description: |
                Some additional information about the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'problemType'
              description: |
                Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Output only. Resource name of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'createTime'
              description: |
                Output only. Timestamp when this SavedQuery was created.
            - !ruby/object:Api::Type::String
              name: 'etag'
              description: |
                Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens.
            - !ruby/object:Api::Type::String
              name: 'displayName'
              description: |
                Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters.
            - !ruby/object:Api::Type::String
              name: 'annotationFilter'
              description: |
                Output only. Filters on the Annotations in the dataset.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this Dataset was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the Dataset.
      - !ruby/object:Api::Type::String
        name: 'metadata'
        description: |
          Required. Additional information about the Dataset.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The description of the Dataset.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Dataset: * "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value is the metadata_schema's title.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::String
        name: 'metadataSchemaUri'
        description: |
          Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
      - !ruby/object:Api::Type::String
        name: 'metadataArtifact'
        description: |
          Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this Dataset was last updated.
      - !ruby/object:Api::Type::String
        name: 'dataItemCount'
        description: |
          Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.
  

    
  - !ruby/object:Api::Resource
    name: Dataset
    base_url: '{{parent}}/datasets'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A collection of DataItems and Annotations on them.
    properties:
  
      - !ruby/object:Api::Type::Array
        name: 'savedQueries'
        description: |
          All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Integer
              name: 'annotationSpecCount'
              description: |
                Output only. Number of AnnotationSpecs in the context of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'updateTime'
              description: |
                Output only. Timestamp when SavedQuery was last updated.
            - !ruby/object:Api::Type::Boolean
              name: 'supportAutomlTraining'
              description: |
                Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training.
            - !ruby/object:Api::Type::String
              name: 'metadata'
              description: |
                Some additional information about the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'problemType'
              description: |
                Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Output only. Resource name of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'createTime'
              description: |
                Output only. Timestamp when this SavedQuery was created.
            - !ruby/object:Api::Type::String
              name: 'etag'
              description: |
                Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens.
            - !ruby/object:Api::Type::String
              name: 'displayName'
              description: |
                Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters.
            - !ruby/object:Api::Type::String
              name: 'annotationFilter'
              description: |
                Output only. Filters on the Annotations in the dataset.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this Dataset was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the Dataset.
      - !ruby/object:Api::Type::String
        name: 'metadata'
        description: |
          Required. Additional information about the Dataset.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The description of the Dataset.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Dataset: * "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value is the metadata_schema's title.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::String
        name: 'metadataSchemaUri'
        description: |
          Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
      - !ruby/object:Api::Type::String
        name: 'metadataArtifact'
        description: |
          Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this Dataset was last updated.
      - !ruby/object:Api::Type::String
        name: 'dataItemCount'
        description: |
          Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.
  

    
  - !ruby/object:Api::Resource
    name: Dataset
    base_url: '{{parent}}/datasets'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A collection of DataItems and Annotations on them.
    properties:
  
      - !ruby/object:Api::Type::Array
        name: 'savedQueries'
        description: |
          All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Integer
              name: 'annotationSpecCount'
              description: |
                Output only. Number of AnnotationSpecs in the context of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'updateTime'
              description: |
                Output only. Timestamp when SavedQuery was last updated.
            - !ruby/object:Api::Type::Boolean
              name: 'supportAutomlTraining'
              description: |
                Output only. If the Annotations belonging to the SavedQuery can be used for AutoML training.
            - !ruby/object:Api::Type::String
              name: 'metadata'
              description: |
                Some additional information about the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'problemType'
              description: |
                Required. Problem type of the SavedQuery. Allowed values: * IMAGE_CLASSIFICATION_SINGLE_LABEL * IMAGE_CLASSIFICATION_MULTI_LABEL * IMAGE_BOUNDING_POLY * IMAGE_BOUNDING_BOX * TEXT_CLASSIFICATION_SINGLE_LABEL * TEXT_CLASSIFICATION_MULTI_LABEL * TEXT_EXTRACTION * TEXT_SENTIMENT * VIDEO_CLASSIFICATION * VIDEO_OBJECT_TRACKING
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Output only. Resource name of the SavedQuery.
            - !ruby/object:Api::Type::String
              name: 'createTime'
              description: |
                Output only. Timestamp when this SavedQuery was created.
            - !ruby/object:Api::Type::String
              name: 'etag'
              description: |
                Used to perform a consistent read-modify-write update. If not set, a blind "overwrite" update happens.
            - !ruby/object:Api::Type::String
              name: 'displayName'
              description: |
                Required. The user-defined name of the SavedQuery. The name can be up to 128 characters long and can consist of any UTF-8 characters.
            - !ruby/object:Api::Type::String
              name: 'annotationFilter'
              description: |
                Output only. Filters on the Annotations in the dataset.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this Dataset was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the Dataset.
      - !ruby/object:Api::Type::String
        name: 'metadata'
        description: |
          Required. Additional information about the Dataset.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The description of the Dataset.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with "aiplatform.googleapis.com/" and are immutable. Following system labels exist for each Dataset: * "aiplatform.googleapis.com/dataset_metadata_schema": output only, its value is the metadata_schema's title.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::String
        name: 'metadataSchemaUri'
        description: |
          Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
      - !ruby/object:Api::Type::String
        name: 'metadataArtifact'
        description: |
          Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this Dataset was last updated.
      - !ruby/object:Api::Type::String
        name: 'dataItemCount'
        description: |
          Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.
  

    
  - !ruby/object:Api::Resource
    name: Model
    base_url: '{{parent}}/models'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A trained machine learning Model.
    properties:
  
      - !ruby/object:Api::Type::NestedObject
        name: 'modelSourceInfo'
        description: |
          Detail description of the source information of the model.
        properties:
            - !ruby/object:Api::Type::Boolean
              name: 'copy'
              description: |
                If this Model is copy of another Model. If true then source_type pertains to the original.
            - !ruby/object:Api::Type::Enum
              name: 'sourceType'
              description: |
                Type of the model source.
              values:
                - :MODEL_SOURCE_TYPE_UNSPECIFIED
                - :AUTOML
                - :CUSTOM
                - :BQML
                - :MODEL_GARDEN
                - :GENIE
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The resource name of the Model.
      - !ruby/object:Api::Type::String
        name: 'metadata'
        description: |
          Immutable. An additional information about the Model; the schema of the metadata can be found in metadata_schema. Unset if the Model does not have any additional information.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Timestamp when this Model was most recently updated.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          The description of the Model.
      - !ruby/object:Api::Type::Array
        name: 'deployedModels'
        description: |
          Output only. The pointers to DeployedModels created from this Model. Note that Model could have been deployed to Endpoints in different Locations.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'deployedModelId'
              description: |
                Immutable. An ID of a DeployedModel in the above Endpoint.
            - !ruby/object:Api::Type::String
              name: 'endpoint'
              description: |
                Immutable. A resource name of an Endpoint.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Timestamp when this Model was uploaded into Vertex AI.
      - !ruby/object:Api::Type::NestedObject
        name: 'explanationSpec'
        description: |
          Specification of Model explanation.
        properties:
            - !ruby/object:Api::Type::NestedObject
              name: 'parameters'
              description: |
                Parameters to configure explaining for Model's predictions.
              properties:
                  - !ruby/object:Api::Type::Array
                    name: 'outputIndices'
                    description: |
                      If populated, only returns attributions that have output_index contained in output_indices. It must be an ndarray of integers, with the same shape of the output it's explaining. If not populated, returns attributions for top_k indices of outputs. If neither top_k nor output_indices is populated, returns the argmax index of the outputs. Only applicable to Models that predict multiple outputs (e,g, multi-class Models that predict multiple classes).
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'examples'
                    description: |
                      Example-based explainability that returns the nearest neighbors from the provided dataset.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'presets'
                          description: |
                            Preset configuration for example-based explanations
                          properties:
                              - !ruby/object:Api::Type::Enum
                                name: 'modality'
                                description: |
                                  The modality of the uploaded model, which automatically configures the distance measurement and feature normalization for the underlying example index and queries. If your model does not precisely fit one of these types, it is okay to choose the closest type.
                                values:
                                  - :MODALITY_UNSPECIFIED
                                  - :IMAGE
                                  - :TEXT
                                  - :TABULAR
                              - !ruby/object:Api::Type::Enum
                                name: 'query'
                                description: |
                                  Preset option controlling parameters for speed-precision trade-off when querying for examples. If omitted, defaults to `PRECISE`.
                                values:
                                  - :PRECISE
                                  - :FAST
                        - !ruby/object:Api::Type::Integer
                          name: 'neighborCount'
                          description: |
                            The number of neighbors to return when querying for examples.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'exampleGcsSource'
                          description: |
                            The Cloud Storage input instances.
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'gcsSource'
                                description: |
                                  The Google Cloud Storage location for the input content.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'uris'
                                      description: |
                                        Required. Google Cloud Storage URI(-s) to the input file(s). May contain wildcards. For more information on wildcards, see https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames.
                                      item_type: Api::Type::String
                              - !ruby/object:Api::Type::Enum
                                name: 'dataFormat'
                                description: |
                                  The format in which instances are given, if not specified, assume it's JSONL format. Currently only JSONL format is supported.
                                values:
                                  - :DATA_FORMAT_UNSPECIFIED
                                  - :JSONL
                        - !ruby/object:Api::Type::String
                          name: 'nearestNeighborSearchConfig'
                          description: |
                            The full configuration for the generated index, the semantics are the same as metadata and should match [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config).
                  - !ruby/object:Api::Type::NestedObject
                    name: 'xraiAttribution'
                    description: |
                      An explanation method that redistributes Integrated Gradients attributions to segmented regions, taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Supported only by image Models.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'smoothGradConfig'
                          description: |
                            Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'featureNoiseSigma'
                                description: |
                                  Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'noiseSigma'
                                      description: |
                                        Noise sigma per feature. No noise is added to features that are not set.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'name'
                                            description: |
                                              The name of the input feature for which noise sigma is provided. The features are defined in explanation metadata inputs.
                                          - !ruby/object:Api::Type::Integer
                                            name: 'sigma'
                                            description: |
                                              This represents the standard deviation of the Gaussian kernel that will be used to add noise to the feature prior to computing gradients. Similar to noise_sigma but represents the noise added to the current feature. Defaults to 0.1.
                              - !ruby/object:Api::Type::Integer
                                name: 'noiseSigma'
                                description: |
                                  This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. Learn more about [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization). For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature.
                              - !ruby/object:Api::Type::Integer
                                name: 'noisySampleCount'
                                description: |
                                  The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3.
                        - !ruby/object:Api::Type::Integer
                          name: 'stepCount'
                          description: |
                            Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is met within the desired error range. Valid range of its value is [1, 100], inclusively.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'blurBaselineConfig'
                          description: |
                            Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'maxBlurSigma'
                                description: |
                                  The standard deviation of the blur kernel for the blurred baseline. The same blurring parameter is used for both the height and the width dimension. If not set, the method defaults to the zero (i.e. black for images) baseline.
                  - !ruby/object:Api::Type::Integer
                    name: 'topK'
                    description: |
                      If populated, returns attributions for top K indices of outputs (defaults to 1). Only applies to Models that predicts more than one outputs (e,g, multi-class Models). When set to -1, returns explanations for all outputs.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'integratedGradientsAttribution'
                    description: |
                      An attribution method that computes the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365
                    properties:
                        - !ruby/object:Api::Type::Integer
                          name: 'stepCount'
                          description: |
                            Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is within the desired error range. Valid range of its value is [1, 100], inclusively.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'smoothGradConfig'
                          description: |
                            Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'featureNoiseSigma'
                                description: |
                                  Noise sigma by features. Noise sigma represents the standard deviation of the gaussian kernel that will be used to add noise to interpolated inputs prior to computing gradients.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'noiseSigma'
                                      description: |
                                        Noise sigma per feature. No noise is added to features that are not set.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'name'
                                            description: |
                                              The name of the input feature for which noise sigma is provided. The features are defined in explanation metadata inputs.
                                          - !ruby/object:Api::Type::Integer
                                            name: 'sigma'
                                            description: |
                                              This represents the standard deviation of the Gaussian kernel that will be used to add noise to the feature prior to computing gradients. Similar to noise_sigma but represents the noise added to the current feature. Defaults to 0.1.
                              - !ruby/object:Api::Type::Integer
                                name: 'noiseSigma'
                                description: |
                                  This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. Learn more about [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization). For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature.
                              - !ruby/object:Api::Type::Integer
                                name: 'noisySampleCount'
                                description: |
                                  The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'blurBaselineConfig'
                          description: |
                            Config for blur baseline. When enabled, a linear path from the maximally blurred image to the input image is created. Using a blurred baseline instead of zero (black image) is motivated by the BlurIG approach explained here: https://arxiv.org/abs/2004.03383
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'maxBlurSigma'
                                description: |
                                  The standard deviation of the blur kernel for the blurred baseline. The same blurring parameter is used for both the height and the width dimension. If not set, the method defaults to the zero (i.e. black for images) baseline.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'sampledShapleyAttribution'
                    description: |
                      An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features.
                    properties:
                        - !ruby/object:Api::Type::Integer
                          name: 'pathCount'
                          description: |
                            Required. The number of feature permutations to consider when approximating the Shapley values. Valid range of its value is [1, 50], inclusively.
            - !ruby/object:Api::Type::NestedObject
              name: 'metadata'
              description: |
                Metadata describing the Model's input and output for explanation.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'featureAttributionsSchemaUri'
                    description: |
                      Points to a YAML file stored on Google Cloud Storage describing the format of the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on output may be different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
                  - !ruby/object:Api::Type::String
                    name: 'latentSpaceSource'
                    description: |
                      Name of the source to generate embeddings for example based explanations.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'outputs'
                    description: |
                      Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images, keys can be any user defined string that consists of any UTF-8 characters. For custom images, keys are the name of the output field in the prediction to be explained. Currently only one key is allowed.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          Metadata of the prediction output to be explained.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'inputs'
                    description: |
                      Required. Map from feature names to feature input metadata. Keys are the name of the features. Values are the specification of the feature. An empty InputMetadata is valid. It describes a text feature which has the name specified as the key in ExplanationMetadata.inputs. The baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images, the key can be any friendly name of the feature. Once specified, featureAttributions are keyed by this key (if not grouped with another feature). For custom images, the key must match with the key in instance.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          Metadata of the input of a feature. Fields other than InputMetadata.input_baselines are applicable only for Models that are using Vertex AI-provided images for Tensorflow.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'pipelineJob'
        description: |
          Optional. This field is populated if the model is produced by a pipeline job.
      - !ruby/object:Api::Type::NestedObject
        name: 'predictSchemata'
        description: |
          Contains the schemata used in Model's predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.
        properties:
            - !ruby/object:Api::Type::String
              name: 'instanceSchemaUri'
              description: |
                Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single instance, which are used in PredictRequest.instances, ExplainRequest.instances and BatchPredictionJob.input_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
            - !ruby/object:Api::Type::String
              name: 'parametersSchemaUri'
              description: |
                Immutable. Points to a YAML file stored on Google Cloud Storage describing the parameters of prediction and explanation via PredictRequest.parameters, ExplainRequest.parameters and BatchPredictionJob.model_parameters. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no parameters are supported, then it is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
            - !ruby/object:Api::Type::String
              name: 'predictionSchemaUri'
              description: |
                Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single prediction produced by this Model, which are returned via PredictResponse.predictions, ExplainResponse.explanations, and BatchPredictionJob.output_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
      - !ruby/object:Api::Type::String
        name: 'versionUpdateTime'
        description: |
          Output only. Timestamp when this version was most recently updated.
      - !ruby/object:Api::Type::Array
        name: 'supportedExportFormats'
        description: |
          Output only. The formats in which this Model may be exported. If empty, this Model is not available for export.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Array
              name: 'exportableContents'
              description: |
                Output only. The content of this Model that may be exported.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::String
              name: 'id'
              description: |
                Output only. The ID of the export format. The possible format IDs are: * `tflite` Used for Android mobile devices. * `edgetpu-tflite` Used for [Edge TPU](https://cloud.google.com/edge-tpu/) devices. * `tf-saved-model` A tensorflow model in SavedModel format. * `tf-js` A [TensorFlow.js](https://www.tensorflow.org/js) model that can be used in the browser and in Node.js using JavaScript. * `core-ml` Used for iOS mobile devices. * `custom-trained` A Model that was uploaded or trained by custom code.
      - !ruby/object:Api::Type::NestedObject
        name: 'originalModelInfo'
        description: |
          Contains information about the original Model if this Model is a copy.
        properties:
            - !ruby/object:Api::Type::String
              name: 'model'
              description: |
                Output only. The resource name of the Model this Model is a copy of, including the revision. Format: `projects/{project}/locations/{location}/models/{model_id}@{version_id}`
      - !ruby/object:Api::Type::String
        name: 'metadataArtifact'
        description: |
          Output only. The resource name of the Artifact that was created in MetadataStore when creating the Model. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.
      - !ruby/object:Api::Type::Array
        name: 'supportedInputStorageFormats'
        description: |
          Output only. The formats this Model supports in BatchPredictionJob.input_config. If PredictSchemata.instance_schema_uri exists, the instances should be given as per that schema. The possible formats are: * `jsonl` The JSON Lines format, where each instance is a single line. Uses GcsSource. * `csv` The CSV format, where each instance is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsSource. * `tf-record` The TFRecord format, where each instance is a single record in tfrecord syntax. Uses GcsSource. * `tf-record-gzip` Similar to `tf-record`, but the file is gzipped. Uses GcsSource. * `bigquery` Each instance is a single row in BigQuery. Uses BigQuerySource. * `file-list` Each line of the file is the location of an instance to process, uses `gcs_source` field of the InputConfig object. If this Model doesn't support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'metadataSchemaUri'
        description: |
          Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Model, that is specific to it. Unset if the Model does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no additional metadata is needed, this field is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
      - !ruby/object:Api::Type::NestedObject
        name: 'containerSpec'
        description: |
          Specification of a container for serving predictions. Some fields in this message correspond to fields in the [Kubernetes Container v1 core specification](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
        properties:
            - !ruby/object:Api::Type::String
              name: 'predictRoute'
              description: |
                Immutable. HTTP path on the container to send prediction requests to. Vertex AI forwards requests sent using projects.locations.endpoints.predict to this path on the container's IP address and port. Vertex AI then returns the container's response in the API response. For example, if you set this field to `/foo`, then when Vertex AI receives a prediction request, it forwards the request body in a POST request to the `/foo` path on the port of your container specified by the first value of this `ModelContainerSpec`'s ports field. If you don't specify this field, it defaults to the following value when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/deployedModels/DEPLOYED_MODEL:predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (Vertex AI makes this value available to your container code as the [`AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
            - !ruby/object:Api::Type::String
              name: 'imageUri'
              description: |
                Required. Immutable. URI of the Docker image to be used as the custom container for serving predictions. This URI must identify an image in Artifact Registry or Container Registry. Learn more about the [container publishing requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#publishing), including permissions requirements for the Vertex AI Service Agent. The container image is ingested upon ModelService.UploadModel, stored internally, and this original path is afterwards not used. To learn about the requirements for the Docker image itself, see [Custom container requirements](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#). You can use the URI to one of Vertex AI's [pre-built container images for prediction](https://cloud.google.com/vertex-ai/docs/predictions/pre-built-containers) in this field.
            - !ruby/object:Api::Type::Array
              name: 'env'
              description: |
                Immutable. List of environment variables to set in the container. After the container starts running, code running in the container can read these environment variables. Additionally, the command and args fields can reference these variables. Later entries in this list can also reference earlier entries. For example, the following example sets the variable `VAR_2` to have the value `foo bar`: ```json [ { "name": "VAR_1", "value": "foo" }, { "name": "VAR_2", "value": "$(VAR_1) bar" } ] ``` If you switch the order of the variables in the example, then the expansion does not occur. This field corresponds to the `env` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
              item_type: !ruby/object:Api::Type::NestedObject
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'name'
                    description: |
                      Required. Name of the environment variable. Must be a valid C identifier.
                  - !ruby/object:Api::Type::String
                    name: 'value'
                    description: |
                      Required. Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not.
            - !ruby/object:Api::Type::Array
              name: 'args'
              description: |
                Immutable. Specifies arguments for the command that runs when the container starts. This overrides the container's [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd). Specify this field as an array of executable and arguments, similar to a Docker `CMD`'s "default parameters" form. If you don't specify this field but do specify the command field, then the command from the `command` field runs without any additional arguments. See the [Kubernetes documentation about how the `command` and `args` fields interact with a container's `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). If you don't specify this field and don't specify the `command` field, then the container's [`ENTRYPOINT`](https://docs.docker.com/engine/reference/builder/#cmd) and `CMD` determine what runs based on their default behavior. See the Docker documentation about [how `CMD` and `ENTRYPOINT` interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). In this field, you can reference [environment variables set by Vertex AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `args` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'command'
              description: |
                Immutable. Specifies the command that runs when the container starts. This overrides the container's [ENTRYPOINT](https://docs.docker.com/engine/reference/builder/#entrypoint). Specify this field as an array of executable and arguments, similar to a Docker `ENTRYPOINT`'s "exec" form, not its "shell" form. If you do not specify this field, then the container's `ENTRYPOINT` runs, in conjunction with the args field or the container's [`CMD`](https://docs.docker.com/engine/reference/builder/#cmd), if either exists. If this field is not specified and the container does not have an `ENTRYPOINT`, then refer to the Docker documentation about [how `CMD` and `ENTRYPOINT` interact](https://docs.docker.com/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact). If you specify this field, then you can also specify the `args` field to provide additional arguments for this command. However, if you specify this field, then the container's `CMD` is ignored. See the [Kubernetes documentation about how the `command` and `args` fields interact with a container's `ENTRYPOINT` and `CMD`](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#notes). In this field, you can reference [environment variables set by Vertex AI](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables) and environment variables set in the env field. You cannot reference environment variables set in the Docker image. In order for environment variables to be expanded, reference them by using the following syntax: $( VARIABLE_NAME) Note that this differs from Bash variable expansion, which does not use parentheses. If a variable cannot be resolved, the reference in the input string is used unchanged. To avoid variable expansion, you can escape this syntax with `$$`; for example: $$(VARIABLE_NAME) This field corresponds to the `command` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'ports'
              description: |
                Immutable. List of ports to expose from the container. Vertex AI sends any prediction requests that it receives to the first port on this list. Vertex AI also sends [liveness and health checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#liveness) to this port. If you do not specify this field, it defaults to following value: ```json [ { "containerPort": 8080 } ] ``` Vertex AI does not use ports other than the first one listed. This field corresponds to the `ports` field of the Kubernetes Containers [v1 core API](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#container-v1-core).
              item_type: !ruby/object:Api::Type::NestedObject
                properties:
                  - !ruby/object:Api::Type::Integer
                    name: 'containerPort'
                    description: |
                      The number of the port to expose on the pod's IP address. Must be a valid port number, between 1 and 65535 inclusive.
            - !ruby/object:Api::Type::String
              name: 'healthRoute'
              description: |
                Immutable. HTTP path on the container to send health checks to. Vertex AI intermittently sends GET requests to this path on the container's IP address and port to check that the container is healthy. Read more about [health checks](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#health). For example, if you set this field to `/bar`, then Vertex AI intermittently sends a GET request to the `/bar` path on the port of your container specified by the first value of this `ModelContainerSpec`'s ports field. If you don't specify this field, it defaults to the following value when you deploy this Model to an Endpoint: /v1/endpoints/ENDPOINT/deployedModels/ DEPLOYED_MODEL:predict The placeholders in this value are replaced as follows: * ENDPOINT: The last segment (following `endpoints/`)of the Endpoint.name][] field of the Endpoint where this Model has been deployed. (Vertex AI makes this value available to your container code as the [`AIP_ENDPOINT_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).) * DEPLOYED_MODEL: DeployedModel.id of the `DeployedModel`. (Vertex AI makes this value available to your container code as the [`AIP_DEPLOYED_MODEL_ID` environment variable](https://cloud.google.com/vertex-ai/docs/predictions/custom-container-requirements#aip-variables).)
      - !ruby/object:Api::Type::String
        name: 'versionId'
        description: |
          Output only. Immutable. The version ID of the model. A new version is committed when a new model version is uploaded or trained under an existing model id. It is an auto-incrementing decimal number in string representation.
      - !ruby/object:Api::Type::String
        name: 'artifactUri'
        description: |
          Immutable. The path to the directory containing the Model artifact and any of its supporting files. Not present for AutoML Models or Large Models.
      - !ruby/object:Api::Type::String
        name: 'trainingPipeline'
        description: |
          Output only. The resource name of the TrainingPipeline that uploaded this Model, if any.
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The display name of the Model. The name can be up to 128 characters long and can consist of any UTF-8 characters.
      - !ruby/object:Api::Type::Array
        name: 'supportedDeploymentResourcesTypes'
        description: |
          Output only. When this Model is deployed, its prediction resources are described by the `prediction_resources` field of the Endpoint.deployed_models object. Because not all Models support all resource configuration types, the configuration types this Model supports are listed here. If no configuration types are listed, the Model cannot be deployed to an Endpoint and does not support online predictions (PredictionService.Predict or PredictionService.Explain). Such a Model can serve predictions by using a BatchPredictionJob, if it has at least one entry each in supported_input_storage_formats and supported_output_storage_formats.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::Array
        name: 'supportedOutputStorageFormats'
        description: |
          Output only. The formats this Model supports in BatchPredictionJob.output_config. If both PredictSchemata.instance_schema_uri and PredictSchemata.prediction_schema_uri exist, the predictions are returned together with their instances. In other words, the prediction has the original instance data first, followed by the actual prediction content (as per the schema). The possible formats are: * `jsonl` The JSON Lines format, where each prediction is a single line. Uses GcsDestination. * `csv` The CSV format, where each prediction is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsDestination. * `bigquery` Each prediction is a single row in a BigQuery table, uses BigQueryDestination . If this Model doesn't support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::Array
        name: 'versionAliases'
        description: |
          User provided version aliases so that a model version can be referenced via alias (i.e. `projects/{project}/locations/{location}/models/{model_id}@{version_alias}` instead of auto-generated version id (i.e. `projects/{project}/locations/{location}/models/{model_id}@{version_id})`. The format is a-z{0,126}[a-z0-9] to distinguish from version_id. A default version alias will be created for the first version of the model, and there must be exactly one default version alias for a model.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'versionCreateTime'
        description: |
          Output only. Timestamp when this version was created.
      - !ruby/object:Api::Type::String
        name: 'versionDescription'
        description: |
          The description of this version.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize your Models. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
  
