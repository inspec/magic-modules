# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: VertexAI
display_name: Vertex AI
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://{{region}}-aiplatform.googleapis.com/v1/
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://{{region}}-aiplatform.googleapis.com/v1beta1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
objects:
# Vertex AI Datasets
  - !ruby/object:Api::Resource
    name: Dataset
    base_url: projects/{{project}}/locations/{{region}}/datasets
    self_link: '{{name}}'
    update_verb: :PATCH
    update_mask: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/vertex-ai/docs'
      api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.datasets'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
      A collection of DataItems and Annotations on them.
    parameters:
      - !ruby/object:Api::Type::String
        name: region
        description: The region of the dataset. eg us-central1
        url_param_only: true
        input: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The resource name of the Dataset. This value is set by Google.
        output: true
      - !ruby/object:Api::Type::String
        name: 'displayName'
        required: true
        description: |
          The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8 characters.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        output: true
        description: |
          The timestamp of when the dataset was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        output: true
        description: |
          The timestamp of when the dataset was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          A set of key/value label pairs to assign to this Workflow.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        input: true
        description: |
          Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.
        properties:
          - !ruby/object:Api::Type::String
            name: 'kmsKeyName'
            description: |
              Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. 
              Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
            input: true
      - !ruby/object:Api::Type::String
        name: 'metadataSchemaUri'
        required: true
        input: true 
        description: |
          Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
# Vertex AI Featurestores
  - !ruby/object:Api::Resource
    name: Featurestore
    base_url: projects/{{project}}/locations/{{region}}/featurestores
    create_url: projects/{{project}}/locations/{{region}}/featurestores?featurestoreId={{name}}
    self_link: 'projects/{{project}}/locations/{{region}}/featurestores/{{name}}'
    min_version: beta
    update_verb: :PATCH
    update_mask: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/vertex-ai/docs'
      api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featurestores'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
      A collection of DataItems and Annotations on them.
    parameters:
      - !ruby/object:Api::Type::String
        name: region
        description: The region of the dataset. eg us-central1
        url_param_only: true
        input: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the Featurestore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
        input: true
        url_param_only: true
        pattern: projects/{{project}}/locations/{{region}}/featurestores/{{name}}
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: Used to perform consistent read-modify-write updates. 
        output: true
      - !ruby/object:Api::Type::String
        name: 'createTime'
        output: true
        description: |
          The timestamp of when the featurestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        output: true
        description: |
          The timestamp of when the featurestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          A set of key/value label pairs to assign to this Featurestore.
      - !ruby/object:Api::Type::NestedObject
        name: 'onlineServingConfig'
        description: |
           Config for online serving resources.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'fixedNodeCount'
            required: true
            description: |
              The number of nodes for each cluster. The number of nodes will not scale automatically but can be scaled manually by providing different values when updating.
# Vertex AI Featurestore Entity Type
  - !ruby/object:Api::Resource
    name: FeaturestoreEntitytype
    base_url: '{{featurestore}}/entityTypes'
    create_url: '{{featurestore}}/entityTypes?entityTypeId={{name}}'
    self_link: '{{featurestore}}/entityTypes/{{name}}'
    min_version: beta
    update_verb: :PATCH
    update_mask: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/vertex-ai/docs'
      api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1beta1/projects.locations.featurestores.entityTypes'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
      include_project: true
    description: |-
      An entity type is a type of object in a system that needs to be modeled and have stored information about. For example, driver is an entity type, and driver0 is an instance of an entity type driver.
    parameters:
      - !ruby/object:Api::Type::String
        name: featurestore
        description: The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}.
        url_param_only: true
        input: true
        required: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the EntityType. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
        input: true
        url_param_only: true
        pattern: '{featurestore}}/entityTypes/{{name}}'
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: Used to perform consistent read-modify-write updates. 
        output: true
      - !ruby/object:Api::Type::String
        name: 'createTime'
        output: true
        description: |
          The timestamp of when the featurestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        output: true
        description: |
          The timestamp of when the featurestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          A set of key/value label pairs to assign to this EntityType.
      - !ruby/object:Api::Type::NestedObject
        name: 'monitoringConfig'
        description: |
          The default monitoring configuration for all Features under this EntityType.

          If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
        properties:
          - !ruby/object:Api::Type::NestedObject
            name: 'snapshotAnalysis'
            description: |
              Configuration of how features in Featurestore are monitored.
            properties:
              - !ruby/object:Api::Type::Boolean
                name: 'disabled'
                default_value: false
                description: |
                  The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoringInterval for Features under it.
              - !ruby/object:Api::Type::String
                name: 'monitoringInterval'
                description: |
                  Configuration of the snapshot analysis based monitoring pipeline running interval. The value is rolled up to full day.

                  A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
# Vertex ML Metadata
  - !ruby/object:Api::Resource
    name: MetadataStore
    base_url: projects/{{project}}/locations/{{region}}/metadataStores
    self_link: 'projects/{{project}}/locations/{{region}}/metadataStores/{{name}}'
    create_url: projects/{{project}}/locations/{{region}}/metadataStores?metadataStoreId={{name}}
    min_version: beta
    input: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/vertex-ai/docs'
      api: 'https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.metadataStores'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
      Instance of a metadata store. Contains a set of metadata that can be queried.
    parameters:
      - !ruby/object:Api::Type::String
        name: region
        description: The region of the Metadata Store. eg us-central1
        url_param_only: true
        input: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the MetadataStore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
        input: true
        url_param_only: true
        pattern: projects/{{project}}/locations/{{region}}/metadataStores/{{name}}
      - !ruby/object:Api::Type::String
        name: 'description'
        description: Description of the MetadataStore.
        input: true
      - !ruby/object:Api::Type::String
        name: 'createTime'
        output: true
        description: |
          The timestamp of when the MetadataStore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        output: true
        description: |
          The timestamp of when the MetadataStore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        input: true
        description: |
          Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this MetadataStore will be secured by this key.
        properties:
          - !ruby/object:Api::Type::String
            name: 'kmsKeyName'
            description: |
              Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. 
              Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key. The key needs to be in the same region as where the resource is created.
            input: true
      - !ruby/object:Api::Type::NestedObject
        name: 'state'
        output: true
        description: |
          State information of the MetadataStore.
        properties:
          - !ruby/object:Api::Type::String
            name: 'diskUtilizationBytes'
            description: |
              The disk utilization of the MetadataStore in bytes.
            output: true

 
    
  - !ruby/object:Api::Resource
    name: CustomJob
    base_url: '{{parent}}/customJobs'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        Represents a job that runs custom workloads such as a Docker container or a Python package. A CustomJob can have multiple worker pools and each worker pool can have its own machine and input spec. A CustomJob will be cleaned up once the job enters terminal state (failed or succeeded).
    properties:
  
      - !ruby/object:Api::Type::NestedObject
        name: 'error'
        description: |
          The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
        properties:
            - !ruby/object:Api::Type::Array
              name: 'details'
              description: |
                A list of messages that carry the error details. There is a common set of message types for APIs to use.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Integer
              name: 'code'
              description: |
                The status code, which should be an enum value of google.rpc.Code.
            - !ruby/object:Api::Type::String
              name: 'message'
              description: |
                A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
      - !ruby/object:Api::Type::NestedObject
        name: 'webAccessUris'
        description: |
          Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if job_spec.enable_web_access is `true`. The keys are names of each node in the training job; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::NestedObject
        name: 'jobSpec'
        description: |
          Represents the spec of a CustomJob.
        properties:
            - !ruby/object:Api::Type::Array
              name: 'workerPoolSpecs'
              description: |
                Required. The spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value.
              item_type: !ruby/object:Api::Type::NestedObject
                properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'containerSpec'
                    description: |
                      The spec of a Container.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'env'
                          description: |
                            Environment variables to be passed to the container. Maximum limit is 100.
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::String
                                name: 'name'
                                description: |
                                  Required. Name of the environment variable. Must be a valid C identifier.
                              - !ruby/object:Api::Type::String
                                name: 'value'
                                description: |
                                  Required. Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not.
                        - !ruby/object:Api::Type::Array
                          name: 'args'
                          description: |
                            The arguments to be passed when starting the container.
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'command'
                          description: |
                            The command to be invoked when the container is started. It overrides the entrypoint instruction in Dockerfile when provided.
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::String
                          name: 'imageUri'
                          description: |
                            Required. The URI of a container image in the Container Registry that is to be run on each worker replica.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'machineSpec'
                    description: |
                      Specification of a single machine.
                    properties:
                        - !ruby/object:Api::Type::Enum
                          name: 'acceleratorType'
                          description: |
                            Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count.
                          values:
                            - :ACCELERATOR_TYPE_UNSPECIFIED
                            - :NVIDIA_TESLA_K80
                            - :NVIDIA_TESLA_P100
                            - :NVIDIA_TESLA_V100
                            - :NVIDIA_TESLA_P4
                            - :NVIDIA_TESLA_T4
                            - :NVIDIA_TESLA_A100
                            - :NVIDIA_A100_80GB
                            - :NVIDIA_L4
                            - :TPU_V2
                            - :TPU_V3
                            - :TPU_V4_POD
                        - !ruby/object:Api::Type::String
                          name: 'machineType'
                          description: |
                            Immutable. The type of the machine. See the [list of machine types supported for prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types) See the [list of machine types supported for custom training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types). For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required.
                        - !ruby/object:Api::Type::Integer
                          name: 'acceleratorCount'
                          description: |
                            The number of accelerators to attach to the machine.
                  - !ruby/object:Api::Type::String
                    name: 'replicaCount'
                    description: |
                      Optional. The number of worker replicas to use for this worker pool.
                  - !ruby/object:Api::Type::Array
                    name: 'nfsMounts'
                    description: |
                      Optional. List of NFS mount spec.
                    item_type: !ruby/object:Api::Type::NestedObject
                      properties:
                        - !ruby/object:Api::Type::String
                          name: 'path'
                          description: |
                            Required. Source path exported from NFS server. Has to start with '/', and combined with the ip address, it indicates the source mount path in the form of `server:path`
                        - !ruby/object:Api::Type::String
                          name: 'mountPoint'
                          description: |
                            Required. Destination mount path. The NFS will be mounted for the user under /mnt/nfs/
                        - !ruby/object:Api::Type::String
                          name: 'server'
                          description: |
                            Required. IP address of the NFS server.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'pythonPackageSpec'
                    description: |
                      The spec of a Python packaged code.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'packageUris'
                          description: |
                            Required. The Google Cloud Storage location of the Python package files which are the training program and its dependent packages. The maximum number of package URIs is 100.
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'env'
                          description: |
                            Environment variables to be passed to the python module. Maximum limit is 100.
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::String
                                name: 'name'
                                description: |
                                  Required. Name of the environment variable. Must be a valid C identifier.
                              - !ruby/object:Api::Type::String
                                name: 'value'
                                description: |
                                  Required. Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not.
                        - !ruby/object:Api::Type::String
                          name: 'executorImageUri'
                          description: |
                            Required. The URI of a container image in Artifact Registry that will run the provided Python package. Vertex AI provides a wide range of executor images with pre-installed packages to meet users' various use cases. See the list of [pre-built containers for training](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). You must use an image from this list.
                        - !ruby/object:Api::Type::Array
                          name: 'args'
                          description: |
                            Command line arguments to be passed to the Python task.
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::String
                          name: 'pythonModule'
                          description: |
                            Required. The Python module name to run after installing the packages.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'diskSpec'
                    description: |
                      Represents the spec of disk options.
                    properties:
                        - !ruby/object:Api::Type::String
                          name: 'bootDiskType'
                          description: |
                            Type of the boot disk (default is "pd-ssd"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or "pd-standard" (Persistent Disk Hard Disk Drive).
                        - !ruby/object:Api::Type::Integer
                          name: 'bootDiskSizeGb'
                          description: |
                            Size in GB of the boot disk (default is 100GB).
            - !ruby/object:Api::Type::Boolean
              name: 'enableWebAccess'
              description: |
                Optional. Whether you want Vertex AI to enable [interactive shell access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
            - !ruby/object:Api::Type::String
              name: 'tensorboard'
              description: |
                Optional. The name of a Vertex AI Tensorboard resource to which this CustomJob will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
            - !ruby/object:Api::Type::String
              name: 'experiment'
              description: |
                Optional. The Experiment associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}`
            - !ruby/object:Api::Type::String
              name: 'experimentRun'
              description: |
                Optional. The Experiment Run associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}`
            - !ruby/object:Api::Type::NestedObject
              name: 'scheduling'
              description: |
                All parameters related to queuing and scheduling of custom jobs.
              properties:
                  - !ruby/object:Api::Type::Boolean
                    name: 'disableRetries'
                    description: |
                      Optional. Indicates if the job should retry for internal errors after the job starts running. If true, overrides `Scheduling.restart_job_on_worker_restart` to false.
                  - !ruby/object:Api::Type::String
                    name: 'timeout'
                    description: |
                      The maximum job running time. The default is 7 days.
                  - !ruby/object:Api::Type::Boolean
                    name: 'restartJobOnWorkerRestart'
                    description: |
                      Restarts the entire CustomJob if a worker gets restarted. This feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job.
            - !ruby/object:Api::Type::Boolean
              name: 'enableDashboardAccess'
              description: |
                Optional. Whether you want Vertex AI to enable access to the customized dashboard in training chief container. If set to `true`, you can access the dashboard at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
            - !ruby/object:Api::Type::String
              name: 'serviceAccount'
              description: |
                Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) for the CustomJob's project is used.
            - !ruby/object:Api::Type::NestedObject
              name: 'baseOutputDirectory'
              description: |
                The Google Cloud Storage location where the output is to be written to.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'outputUriPrefix'
                    description: |
                      Required. Google Cloud Storage URI to output directory. If the uri doesn't end with '/', a '/' will be automatically appended. The directory is created if it doesn't exist.
            - !ruby/object:Api::Type::Array
              name: 'reservedIpRanges'
              description: |
                Optional. A list of names for the reserved ip ranges under the VPC network that can be used for this job. If set, we will deploy the job within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].
              item_type: Api::Type::String
            - !ruby/object:Api::Type::String
              name: 'network'
              description: |
                Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the job is not peered with any network.
      - !ruby/object:Api::Type::String
        name: 'startTime'
        description: |
          Output only. Time when the CustomJob for the first time entered the `JOB_STATE_RUNNING` state.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize CustomJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Time when the CustomJob was created.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Time when the CustomJob was most recently updated.
      - !ruby/object:Api::Type::String
        name: 'endTime'
        description: |
          Output only. Time when the CustomJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          Output only. The detailed state of the job.
        values:
          - :JOB_STATE_UNSPECIFIED
          - :JOB_STATE_QUEUED
          - :JOB_STATE_PENDING
          - :JOB_STATE_RUNNING
          - :JOB_STATE_SUCCEEDED
          - :JOB_STATE_FAILED
          - :JOB_STATE_CANCELLING
          - :JOB_STATE_CANCELLED
          - :JOB_STATE_PAUSED
          - :JOB_STATE_EXPIRED
          - :JOB_STATE_UPDATING
          - :JOB_STATE_PARTIALLY_SUCCEEDED
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The display name of the CustomJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. Resource name of a CustomJob.
  

    
  - !ruby/object:Api::Resource
    name: CustomJob
    base_url: '{{parent}}/customJobs'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        Represents a job that runs custom workloads such as a Docker container or a Python package. A CustomJob can have multiple worker pools and each worker pool can have its own machine and input spec. A CustomJob will be cleaned up once the job enters terminal state (failed or succeeded).
    properties:
  
      - !ruby/object:Api::Type::NestedObject
        name: 'error'
        description: |
          The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
        properties:
            - !ruby/object:Api::Type::Array
              name: 'details'
              description: |
                A list of messages that carry the error details. There is a common set of message types for APIs to use.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Integer
              name: 'code'
              description: |
                The status code, which should be an enum value of google.rpc.Code.
            - !ruby/object:Api::Type::String
              name: 'message'
              description: |
                A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
      - !ruby/object:Api::Type::NestedObject
        name: 'webAccessUris'
        description: |
          Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if job_spec.enable_web_access is `true`. The keys are names of each node in the training job; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::NestedObject
        name: 'jobSpec'
        description: |
          Represents the spec of a CustomJob.
        properties:
            - !ruby/object:Api::Type::Array
              name: 'workerPoolSpecs'
              description: |
                Required. The spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value.
              item_type: !ruby/object:Api::Type::NestedObject
                properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'containerSpec'
                    description: |
                      The spec of a Container.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'env'
                          description: |
                            Environment variables to be passed to the container. Maximum limit is 100.
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::String
                                name: 'name'
                                description: |
                                  Required. Name of the environment variable. Must be a valid C identifier.
                              - !ruby/object:Api::Type::String
                                name: 'value'
                                description: |
                                  Required. Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not.
                        - !ruby/object:Api::Type::Array
                          name: 'args'
                          description: |
                            The arguments to be passed when starting the container.
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'command'
                          description: |
                            The command to be invoked when the container is started. It overrides the entrypoint instruction in Dockerfile when provided.
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::String
                          name: 'imageUri'
                          description: |
                            Required. The URI of a container image in the Container Registry that is to be run on each worker replica.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'machineSpec'
                    description: |
                      Specification of a single machine.
                    properties:
                        - !ruby/object:Api::Type::Enum
                          name: 'acceleratorType'
                          description: |
                            Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count.
                          values:
                            - :ACCELERATOR_TYPE_UNSPECIFIED
                            - :NVIDIA_TESLA_K80
                            - :NVIDIA_TESLA_P100
                            - :NVIDIA_TESLA_V100
                            - :NVIDIA_TESLA_P4
                            - :NVIDIA_TESLA_T4
                            - :NVIDIA_TESLA_A100
                            - :NVIDIA_A100_80GB
                            - :NVIDIA_L4
                            - :TPU_V2
                            - :TPU_V3
                            - :TPU_V4_POD
                        - !ruby/object:Api::Type::String
                          name: 'machineType'
                          description: |
                            Immutable. The type of the machine. See the [list of machine types supported for prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types) See the [list of machine types supported for custom training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types). For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required.
                        - !ruby/object:Api::Type::Integer
                          name: 'acceleratorCount'
                          description: |
                            The number of accelerators to attach to the machine.
                  - !ruby/object:Api::Type::String
                    name: 'replicaCount'
                    description: |
                      Optional. The number of worker replicas to use for this worker pool.
                  - !ruby/object:Api::Type::Array
                    name: 'nfsMounts'
                    description: |
                      Optional. List of NFS mount spec.
                    item_type: !ruby/object:Api::Type::NestedObject
                      properties:
                        - !ruby/object:Api::Type::String
                          name: 'path'
                          description: |
                            Required. Source path exported from NFS server. Has to start with '/', and combined with the ip address, it indicates the source mount path in the form of `server:path`
                        - !ruby/object:Api::Type::String
                          name: 'mountPoint'
                          description: |
                            Required. Destination mount path. The NFS will be mounted for the user under /mnt/nfs/
                        - !ruby/object:Api::Type::String
                          name: 'server'
                          description: |
                            Required. IP address of the NFS server.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'pythonPackageSpec'
                    description: |
                      The spec of a Python packaged code.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'packageUris'
                          description: |
                            Required. The Google Cloud Storage location of the Python package files which are the training program and its dependent packages. The maximum number of package URIs is 100.
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'env'
                          description: |
                            Environment variables to be passed to the python module. Maximum limit is 100.
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::String
                                name: 'name'
                                description: |
                                  Required. Name of the environment variable. Must be a valid C identifier.
                              - !ruby/object:Api::Type::String
                                name: 'value'
                                description: |
                                  Required. Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not.
                        - !ruby/object:Api::Type::String
                          name: 'executorImageUri'
                          description: |
                            Required. The URI of a container image in Artifact Registry that will run the provided Python package. Vertex AI provides a wide range of executor images with pre-installed packages to meet users' various use cases. See the list of [pre-built containers for training](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). You must use an image from this list.
                        - !ruby/object:Api::Type::Array
                          name: 'args'
                          description: |
                            Command line arguments to be passed to the Python task.
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::String
                          name: 'pythonModule'
                          description: |
                            Required. The Python module name to run after installing the packages.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'diskSpec'
                    description: |
                      Represents the spec of disk options.
                    properties:
                        - !ruby/object:Api::Type::String
                          name: 'bootDiskType'
                          description: |
                            Type of the boot disk (default is "pd-ssd"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or "pd-standard" (Persistent Disk Hard Disk Drive).
                        - !ruby/object:Api::Type::Integer
                          name: 'bootDiskSizeGb'
                          description: |
                            Size in GB of the boot disk (default is 100GB).
            - !ruby/object:Api::Type::Boolean
              name: 'enableWebAccess'
              description: |
                Optional. Whether you want Vertex AI to enable [interactive shell access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
            - !ruby/object:Api::Type::String
              name: 'tensorboard'
              description: |
                Optional. The name of a Vertex AI Tensorboard resource to which this CustomJob will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
            - !ruby/object:Api::Type::String
              name: 'experiment'
              description: |
                Optional. The Experiment associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}`
            - !ruby/object:Api::Type::String
              name: 'experimentRun'
              description: |
                Optional. The Experiment Run associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}`
            - !ruby/object:Api::Type::NestedObject
              name: 'scheduling'
              description: |
                All parameters related to queuing and scheduling of custom jobs.
              properties:
                  - !ruby/object:Api::Type::Boolean
                    name: 'disableRetries'
                    description: |
                      Optional. Indicates if the job should retry for internal errors after the job starts running. If true, overrides `Scheduling.restart_job_on_worker_restart` to false.
                  - !ruby/object:Api::Type::String
                    name: 'timeout'
                    description: |
                      The maximum job running time. The default is 7 days.
                  - !ruby/object:Api::Type::Boolean
                    name: 'restartJobOnWorkerRestart'
                    description: |
                      Restarts the entire CustomJob if a worker gets restarted. This feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job.
            - !ruby/object:Api::Type::Boolean
              name: 'enableDashboardAccess'
              description: |
                Optional. Whether you want Vertex AI to enable access to the customized dashboard in training chief container. If set to `true`, you can access the dashboard at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
            - !ruby/object:Api::Type::String
              name: 'serviceAccount'
              description: |
                Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) for the CustomJob's project is used.
            - !ruby/object:Api::Type::NestedObject
              name: 'baseOutputDirectory'
              description: |
                The Google Cloud Storage location where the output is to be written to.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'outputUriPrefix'
                    description: |
                      Required. Google Cloud Storage URI to output directory. If the uri doesn't end with '/', a '/' will be automatically appended. The directory is created if it doesn't exist.
            - !ruby/object:Api::Type::Array
              name: 'reservedIpRanges'
              description: |
                Optional. A list of names for the reserved ip ranges under the VPC network that can be used for this job. If set, we will deploy the job within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].
              item_type: Api::Type::String
            - !ruby/object:Api::Type::String
              name: 'network'
              description: |
                Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the job is not peered with any network.
      - !ruby/object:Api::Type::String
        name: 'startTime'
        description: |
          Output only. Time when the CustomJob for the first time entered the `JOB_STATE_RUNNING` state.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize CustomJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Time when the CustomJob was created.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Time when the CustomJob was most recently updated.
      - !ruby/object:Api::Type::String
        name: 'endTime'
        description: |
          Output only. Time when the CustomJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          Output only. The detailed state of the job.
        values:
          - :JOB_STATE_UNSPECIFIED
          - :JOB_STATE_QUEUED
          - :JOB_STATE_PENDING
          - :JOB_STATE_RUNNING
          - :JOB_STATE_SUCCEEDED
          - :JOB_STATE_FAILED
          - :JOB_STATE_CANCELLING
          - :JOB_STATE_CANCELLED
          - :JOB_STATE_PAUSED
          - :JOB_STATE_EXPIRED
          - :JOB_STATE_UPDATING
          - :JOB_STATE_PARTIALLY_SUCCEEDED
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The display name of the CustomJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. Resource name of a CustomJob.
  

    
  - !ruby/object:Api::Resource
    name: CustomJob
    base_url: '{{parent}}/customJobs'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/vertex-ai/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        Represents a job that runs custom workloads such as a Docker container or a Python package. A CustomJob can have multiple worker pools and each worker pool can have its own machine and input spec. A CustomJob will be cleaned up once the job enters terminal state (failed or succeeded).
    properties:
  
      - !ruby/object:Api::Type::NestedObject
        name: 'error'
        description: |
          The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
        properties:
            - !ruby/object:Api::Type::Array
              name: 'details'
              description: |
                A list of messages that carry the error details. There is a common set of message types for APIs to use.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Integer
              name: 'code'
              description: |
                The status code, which should be an enum value of google.rpc.Code.
            - !ruby/object:Api::Type::String
              name: 'message'
              description: |
                A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
      - !ruby/object:Api::Type::NestedObject
        name: 'webAccessUris'
        description: |
          Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if job_spec.enable_web_access is `true`. The keys are names of each node in the training job; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::NestedObject
        name: 'jobSpec'
        description: |
          Represents the spec of a CustomJob.
        properties:
            - !ruby/object:Api::Type::Array
              name: 'workerPoolSpecs'
              description: |
                Required. The spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value.
              item_type: !ruby/object:Api::Type::NestedObject
                properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'containerSpec'
                    description: |
                      The spec of a Container.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'env'
                          description: |
                            Environment variables to be passed to the container. Maximum limit is 100.
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::String
                                name: 'name'
                                description: |
                                  Required. Name of the environment variable. Must be a valid C identifier.
                              - !ruby/object:Api::Type::String
                                name: 'value'
                                description: |
                                  Required. Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not.
                        - !ruby/object:Api::Type::Array
                          name: 'args'
                          description: |
                            The arguments to be passed when starting the container.
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'command'
                          description: |
                            The command to be invoked when the container is started. It overrides the entrypoint instruction in Dockerfile when provided.
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::String
                          name: 'imageUri'
                          description: |
                            Required. The URI of a container image in the Container Registry that is to be run on each worker replica.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'machineSpec'
                    description: |
                      Specification of a single machine.
                    properties:
                        - !ruby/object:Api::Type::Enum
                          name: 'acceleratorType'
                          description: |
                            Immutable. The type of accelerator(s) that may be attached to the machine as per accelerator_count.
                          values:
                            - :ACCELERATOR_TYPE_UNSPECIFIED
                            - :NVIDIA_TESLA_K80
                            - :NVIDIA_TESLA_P100
                            - :NVIDIA_TESLA_V100
                            - :NVIDIA_TESLA_P4
                            - :NVIDIA_TESLA_T4
                            - :NVIDIA_TESLA_A100
                            - :NVIDIA_A100_80GB
                            - :NVIDIA_L4
                            - :TPU_V2
                            - :TPU_V3
                            - :TPU_V4_POD
                        - !ruby/object:Api::Type::String
                          name: 'machineType'
                          description: |
                            Immutable. The type of the machine. See the [list of machine types supported for prediction](https://cloud.google.com/vertex-ai/docs/predictions/configure-compute#machine-types) See the [list of machine types supported for custom training](https://cloud.google.com/vertex-ai/docs/training/configure-compute#machine-types). For DeployedModel this field is optional, and the default value is `n1-standard-2`. For BatchPredictionJob or as part of WorkerPoolSpec this field is required.
                        - !ruby/object:Api::Type::Integer
                          name: 'acceleratorCount'
                          description: |
                            The number of accelerators to attach to the machine.
                  - !ruby/object:Api::Type::String
                    name: 'replicaCount'
                    description: |
                      Optional. The number of worker replicas to use for this worker pool.
                  - !ruby/object:Api::Type::Array
                    name: 'nfsMounts'
                    description: |
                      Optional. List of NFS mount spec.
                    item_type: !ruby/object:Api::Type::NestedObject
                      properties:
                        - !ruby/object:Api::Type::String
                          name: 'path'
                          description: |
                            Required. Source path exported from NFS server. Has to start with '/', and combined with the ip address, it indicates the source mount path in the form of `server:path`
                        - !ruby/object:Api::Type::String
                          name: 'mountPoint'
                          description: |
                            Required. Destination mount path. The NFS will be mounted for the user under /mnt/nfs/
                        - !ruby/object:Api::Type::String
                          name: 'server'
                          description: |
                            Required. IP address of the NFS server.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'pythonPackageSpec'
                    description: |
                      The spec of a Python packaged code.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'packageUris'
                          description: |
                            Required. The Google Cloud Storage location of the Python package files which are the training program and its dependent packages. The maximum number of package URIs is 100.
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'env'
                          description: |
                            Environment variables to be passed to the python module. Maximum limit is 100.
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::String
                                name: 'name'
                                description: |
                                  Required. Name of the environment variable. Must be a valid C identifier.
                              - !ruby/object:Api::Type::String
                                name: 'value'
                                description: |
                                  Required. Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not.
                        - !ruby/object:Api::Type::String
                          name: 'executorImageUri'
                          description: |
                            Required. The URI of a container image in Artifact Registry that will run the provided Python package. Vertex AI provides a wide range of executor images with pre-installed packages to meet users' various use cases. See the list of [pre-built containers for training](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). You must use an image from this list.
                        - !ruby/object:Api::Type::Array
                          name: 'args'
                          description: |
                            Command line arguments to be passed to the Python task.
                          item_type: Api::Type::String
                        - !ruby/object:Api::Type::String
                          name: 'pythonModule'
                          description: |
                            Required. The Python module name to run after installing the packages.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'diskSpec'
                    description: |
                      Represents the spec of disk options.
                    properties:
                        - !ruby/object:Api::Type::String
                          name: 'bootDiskType'
                          description: |
                            Type of the boot disk (default is "pd-ssd"). Valid values: "pd-ssd" (Persistent Disk Solid State Drive) or "pd-standard" (Persistent Disk Hard Disk Drive).
                        - !ruby/object:Api::Type::Integer
                          name: 'bootDiskSizeGb'
                          description: |
                            Size in GB of the boot disk (default is 100GB).
            - !ruby/object:Api::Type::Boolean
              name: 'enableWebAccess'
              description: |
                Optional. Whether you want Vertex AI to enable [interactive shell access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
            - !ruby/object:Api::Type::String
              name: 'tensorboard'
              description: |
                Optional. The name of a Vertex AI Tensorboard resource to which this CustomJob will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
            - !ruby/object:Api::Type::String
              name: 'experiment'
              description: |
                Optional. The Experiment associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}`
            - !ruby/object:Api::Type::String
              name: 'experimentRun'
              description: |
                Optional. The Experiment Run associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}`
            - !ruby/object:Api::Type::NestedObject
              name: 'scheduling'
              description: |
                All parameters related to queuing and scheduling of custom jobs.
              properties:
                  - !ruby/object:Api::Type::Boolean
                    name: 'disableRetries'
                    description: |
                      Optional. Indicates if the job should retry for internal errors after the job starts running. If true, overrides `Scheduling.restart_job_on_worker_restart` to false.
                  - !ruby/object:Api::Type::String
                    name: 'timeout'
                    description: |
                      The maximum job running time. The default is 7 days.
                  - !ruby/object:Api::Type::Boolean
                    name: 'restartJobOnWorkerRestart'
                    description: |
                      Restarts the entire CustomJob if a worker gets restarted. This feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job.
            - !ruby/object:Api::Type::Boolean
              name: 'enableDashboardAccess'
              description: |
                Optional. Whether you want Vertex AI to enable access to the customized dashboard in training chief container. If set to `true`, you can access the dashboard at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
            - !ruby/object:Api::Type::String
              name: 'serviceAccount'
              description: |
                Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) for the CustomJob's project is used.
            - !ruby/object:Api::Type::NestedObject
              name: 'baseOutputDirectory'
              description: |
                The Google Cloud Storage location where the output is to be written to.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'outputUriPrefix'
                    description: |
                      Required. Google Cloud Storage URI to output directory. If the uri doesn't end with '/', a '/' will be automatically appended. The directory is created if it doesn't exist.
            - !ruby/object:Api::Type::Array
              name: 'reservedIpRanges'
              description: |
                Optional. A list of names for the reserved ip ranges under the VPC network that can be used for this job. If set, we will deploy the job within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].
              item_type: Api::Type::String
            - !ruby/object:Api::Type::String
              name: 'network'
              description: |
                Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the job is not peered with any network.
      - !ruby/object:Api::Type::String
        name: 'startTime'
        description: |
          Output only. Time when the CustomJob for the first time entered the `JOB_STATE_RUNNING` state.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          The labels with user-defined metadata to organize CustomJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
        properties:
              - !ruby/object:Api::Type::String
                name: 'additionalProperties'
                description: |
                
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionSpec'
        description: |
          Represents a customer-managed encryption key spec that can be applied to a top-level resource.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Required. The Cloud KMS resource identifier of the customer managed encryption key used to protect a resource. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. The key needs to be in the same region as where the compute resource is created.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. Time when the CustomJob was created.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. Time when the CustomJob was most recently updated.
      - !ruby/object:Api::Type::String
        name: 'endTime'
        description: |
          Output only. Time when the CustomJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          Output only. The detailed state of the job.
        values:
          - :JOB_STATE_UNSPECIFIED
          - :JOB_STATE_QUEUED
          - :JOB_STATE_PENDING
          - :JOB_STATE_RUNNING
          - :JOB_STATE_SUCCEEDED
          - :JOB_STATE_FAILED
          - :JOB_STATE_CANCELLING
          - :JOB_STATE_CANCELLED
          - :JOB_STATE_PAUSED
          - :JOB_STATE_EXPIRED
          - :JOB_STATE_UPDATING
          - :JOB_STATE_PARTIALLY_SUCCEEDED
      - !ruby/object:Api::Type::String
        name: 'displayName'
        description: |
          Required. The display name of the CustomJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. Resource name of a CustomJob.
  
