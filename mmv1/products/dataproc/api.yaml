# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: Dataproc
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://dataproc.googleapis.com/v1/
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://dataproc.googleapis.com/v1beta2/
scopes:
  - https://www.googleapis.com/auth/cloud-identity
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Cloud Dataproc API
    url: https://console.cloud.google.com/apis/library/dataproc.googleapis.com
objects:
  - !ruby/object:Api::Resource
    name: 'AutoscalingPolicy'
    base_url: "projects/{{project}}/locations/{{location}}/autoscalingPolicies"
    self_link: "projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{id}}"
    collection_url_key: 'policies'
    description: |
      Describes an autoscaling policy for Dataproc cluster autoscaler.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'location'
        url_param_only: true
        input: true
        default_value: global
        description: |
          The  location where the autoscaling policy should reside.
          The default value is `global`.
    properties:
      - !ruby/object:Api::Type::String
        name: 'id'
        required: true
        description: |
          The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
          and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
          3 and 50 characters.
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The "resource name" of the autoscaling policy.
      - !ruby/object:Api::Type::NestedObject
        name: 'workerConfig'
        description: |
          Describes how the autoscaler will operate for primary workers.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'minInstances'
            default_value: 2
            description: |
              Minimum number of instances for this group. Bounds: [2, maxInstances]. Defaults to 2.
          - !ruby/object:Api::Type::Integer
            name: 'maxInstances'
            required: true
            description: |
              Maximum number of instances for this group.
          - !ruby/object:Api::Type::Integer
            name: 'weight'
            default_value: 1
            description: |
              Weight for the instance group, which is used to determine the fraction of total workers
              in the cluster from this instance group. For example, if primary workers have weight 2,
              and secondary workers have weight 1, the cluster will have approximately 2 primary workers
              for each secondary worker.

              The cluster may not reach the specified balance if constrained by min/max bounds or other
              autoscaling settings. For example, if maxInstances for secondary workers is 0, then only
              primary workers will be added. The cluster can also be out of balance when created.

              If weight is not set on any instance group, the cluster will default to equal weight for
              all groups: the cluster will attempt to maintain an equal number of workers in each group
              within the configured size bounds for each group. If weight is set for one group only,
              the cluster will default to zero weight on the unset group. For example if weight is set
              only on primary workers, the cluster will use primary workers only and no secondary workers.
      - !ruby/object:Api::Type::NestedObject
        name: 'secondaryWorkerConfig'
        description: |
          Describes how the autoscaler will operate for secondary workers.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'minInstances'
            at_least_one_of:
              - secondary_worker_config.0.min_instances
              - secondary_worker_config.0.max_instances
              - secondary_worker_config.0.weight
            default_value: 0
            description: |
              Minimum number of instances for this group. Bounds: [0, maxInstances]. Defaults to 0.
          - !ruby/object:Api::Type::Integer
            name: 'maxInstances'
            at_least_one_of:
              - secondary_worker_config.0.min_instances
              - secondary_worker_config.0.max_instances
              - secondary_worker_config.0.weight
            default_value: 0
            description: |
              Maximum number of instances for this group. Note that by default, clusters will not use
              secondary workers. Required for secondary workers if the minimum secondary instances is set.
              Bounds: [minInstances, ). Defaults to 0.
          - !ruby/object:Api::Type::Integer
            name: 'weight'
            at_least_one_of:
              - secondary_worker_config.0.min_instances
              - secondary_worker_config.0.max_instances
              - secondary_worker_config.0.weight
            default_value: 1
            description: |
              Weight for the instance group, which is used to determine the fraction of total workers
              in the cluster from this instance group. For example, if primary workers have weight 2,
              and secondary workers have weight 1, the cluster will have approximately 2 primary workers
              for each secondary worker.

              The cluster may not reach the specified balance if constrained by min/max bounds or other
              autoscaling settings. For example, if maxInstances for secondary workers is 0, then only
              primary workers will be added. The cluster can also be out of balance when created.

              If weight is not set on any instance group, the cluster will default to equal weight for
              all groups: the cluster will attempt to maintain an equal number of workers in each group
              within the configured size bounds for each group. If weight is set for one group only,
              the cluster will default to zero weight on the unset group. For example if weight is set
              only on primary workers, the cluster will use primary workers only and no secondary workers.
      - !ruby/object:Api::Type::NestedObject
        name: 'basicAlgorithm'
        description: |
          Basic algorithm for autoscaling.
        properties:
          - !ruby/object:Api::Type::String
            name: 'cooldownPeriod'
            default_value: "120s"
            description: |
              Duration between scaling events. A scaling period starts after the
              update operation from the previous event has completed.

              Bounds: [2m, 1d]. Default: 2m.
          - !ruby/object:Api::Type::NestedObject
            name: 'yarnConfig'
            required: true
            description: |
              YARN autoscaling configuration.
            properties:
              - !ruby/object:Api::Type::String
                name: 'gracefulDecommissionTimeout'
                required: true
                description: |
                  Timeout for YARN graceful decommissioning of Node Managers. Specifies the
                  duration to wait for jobs to complete before forcefully removing workers
                  (and potentially interrupting jobs). Only applicable to downscaling operations.

                  Bounds: [0s, 1d].
              - !ruby/object:Api::Type::Double
                name: 'scaleUpFactor'
                required: true
                description: |
                  Fraction of average pending memory in the last cooldown period for which to
                  add workers. A scale-up factor of 1.0 will result in scaling up so that there
                  is no pending memory remaining after the update (more aggressive scaling).
                  A scale-up factor closer to 0 will result in a smaller magnitude of scaling up
                  (less aggressive scaling).

                  Bounds: [0.0, 1.0].
              - !ruby/object:Api::Type::Double
                name: 'scaleDownFactor'
                required: true
                description: |
                  Fraction of average pending memory in the last cooldown period for which to
                  remove workers. A scale-down factor of 1 will result in scaling down so that there
                  is no available memory remaining after the update (more aggressive scaling).
                  A scale-down factor of 0 disables removing workers, which can be beneficial for
                  autoscaling a single job.

                  Bounds: [0.0, 1.0].
              - !ruby/object:Api::Type::Double
                name: 'scaleUpMinWorkerFraction'
                default_value: 0.0
                description: |
                  Minimum scale-up threshold as a fraction of total cluster size before scaling
                  occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler
                  must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of
                  0 means the autoscaler will scale up on any recommended change.

                  Bounds: [0.0, 1.0]. Default: 0.0.
              - !ruby/object:Api::Type::Double
                name: 'scaleDownMinWorkerFraction'
                default_value: 0.0
                description: |
                  Minimum scale-down threshold as a fraction of total cluster size before scaling occurs.
                  For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must
                  recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0
                  means the autoscaler will scale down on any recommended change.

                  Bounds: [0.0, 1.0]. Default: 0.0.
  - !ruby/object:Api::Resource
    name: 'Cluster'
    base_url: "projects/{{project}}/regions/{{region}}/clusters"
    self_link: "projects/{{project}}/regions/{{region}}/clusters/{{clusterName}}"
    description: |
      Describes an autoscaling policy for Dataproc cluster autoscaler.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'region'
        url_param_only: true
        input: true
        description: |
          The region in which the cluster and associated nodes will be created in.
    properties:
      - !ruby/object:Api::Type::String
        name: 'clusterName'
        required: true
        description: |
          The name of the cluster, unique within the project and region.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          Labels to apply to this cluster.  A list of key->value pairs.
      - !ruby/object:Api::Type::NestedObject
        name: 'config'
        description: |
          Configuration for the cluster
        properties:
          - !ruby/object:Api::Type::String
            name: 'configBucket'
            description: |
              The Cloud Storage staging bucket used to stage files, such as Hadoop jars,
              between client machines and the cluster.
          - !ruby/object:Api::Type::NestedObject
            name: 'gceClusterConfig'
            description: |
              Common config settings for resources of Google Compute Engine cluster instances,
              applicable to all instances in the cluster.
            properties:
              - !ruby/object:Api::Type::String
                name: 'zoneUri'
                description: |
                  The zone where the Compute Engine cluster will be located
              - !ruby/object:Api::Type::String
                name: 'networkUri'
                description: |
                  The Compute Engine network to be used for machine communications
              - !ruby/object:Api::Type::String
                name: 'subnetworkUri'
                description: |
                  The Compute Engine subnetwork to be used for machine communications
              - !ruby/object:Api::Type::Boolean
                name: 'internalIpOnly'
                description: |
                  If true, all instances int he cluster will only have internal IP addresses
              - !ruby/object:Api::Type::Array
                name: 'serviceAccountScopes'
                item_type: Api::Type::String
                description: |
                  The URIs of service account scopes to be included in Compute Engine instances
                  The following base set of scopes is always included:

                  https://www.googleapis.com/auth/cloud.useraccounts.readonly

                  https://www.googleapis.com/auth/devstorage.read_write

                  https://www.googleapis.com/auth/logging.write
              - !ruby/object:Api::Type::Array
                name: 'tags'
                item_type: Api::Type::String
                description: |
                  The Compute Engine tags to add to all instances
              - !ruby/object:Api::Type::KeyValuePairs
                name: 'metadata'
                description: |
                  The map of metadata entries to add to all instances
          - !ruby/object:Api::Type::NestedObject
            name: 'masterConfig'
            description: |
              The config settings for Compute Engine resources in an instance group, such as a
              master or worker group.
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'numInstances'
                description: |
                  The number of VM instances in the instance group. For master instance groups,
                  must be set to 1.
              - !ruby/object:Api::Type::Array
                name: 'instanceNames'
                output: true
                item_type: Api::Type::String
                description: |
                  The list of instance names.
              - !ruby/object:Api::Type::String
                name: 'imageUri'
                description: |
                  The Compute Engine image resource used for cluster instances.
              - !ruby/object:Api::Type::String
                name: 'machineTypeUri'
                description: |
                  The Compute Engine machine type used for cluster instances
              - !ruby/object:Api::Type::NestedObject
                name: 'diskConfig'
                description: |
                  Disk option config settings
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'bootDiskType'
                    description: |
                      Type of the boot disk. Valid values are "pd-ssd" or "pd-standard"
                  - !ruby/object:Api::Type::Integer
                    name: 'bootDiskSizeGb'
                    description: |
                      Size in GB of the boot disk.
                  - !ruby/object:Api::Type::Integer
                    name: 'numLocalSsds'
                    description: |
                      Number of attached SSDs, from 0 to 4.
              - !ruby/object:Api::Type::Boolean
                name: 'isPreemptible'
                output: true
                description: |
                  Specifies if this instance group contains preemptible instances.
              - !ruby/object:Api::Type::Enum
                name: 'preemptibility'
                description: |
                  Specifies the preemptibility of the instance group.
                  The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.
                  The default value for secondary instances is PREEMPTIBLE.
                values:
                - :PREEMPTIBILITY_UNSPECIFIED
                - :NON_PREEMPTIBLE
                - :PREEMPTIBLE
              - !ruby/object:Api::Type::NestedObject
                name: 'managedGroupConfig'
                output: true
                description: |
                  The config for Compute Engine Instance Group Manager that manages this group.
                  This is only used for preemptible instance groups.
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'instanceTemplateName'
                    description: |
                      The name of the Instance Template used for the Managed Instance Group.
                  - !ruby/object:Api::Type::String
                    name: instanceGroupManagerName
                    description: |
                      The name of the Instance Group Manager for this group
          - !ruby/object:Api::Type::NestedObject
            name: 'workerConfig'
            description: |
              The config settings for Compute Engine resources in an instance group, such as a
              master or worker group.
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'numInstances'
                description: |
                  The number of VM instances in the instance group. For master instance groups,
                  must be set to 1.
              - !ruby/object:Api::Type::Array
                name: 'instanceNames'
                output: true
                item_type: Api::Type::String
                description: |
                  The list of instance names.
              - !ruby/object:Api::Type::String
                name: 'imageUri'
                description: |
                  The Compute Engine image resource used for cluster instances.
              - !ruby/object:Api::Type::String
                name: 'machineTypeUri'
                description: |
                  The Compute Engine machine type used for cluster instances
              - !ruby/object:Api::Type::NestedObject
                name: 'diskConfig'
                description: |
                  Disk option config settings
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'bootDiskType'
                    description: |
                      Type of the boot disk. Valid values are "pd-ssd" or "pd-standard"
                  - !ruby/object:Api::Type::Integer
                    name: 'bootDiskSizeGb'
                    description: |
                      Size in GB of the boot disk.
                  - !ruby/object:Api::Type::Integer
                    name: 'numLocalSsds'
                    description: |
                      Number of attached SSDs, from 0 to 4.
              - !ruby/object:Api::Type::Boolean
                name: 'isPreemptible'
                output: true
                description: |
                  Specifies if this instance group contains preemptible instances.
              - !ruby/object:Api::Type::Enum
                name: 'preemptibility'
                description: |
                  Specifies the preemptibility of the instance group.
                  The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.
                  The default value for secondary instances is PREEMPTIBLE.
                values:
                - :PREEMPTIBILITY_UNSPECIFIED
                - :NON_PREEMPTIBLE
                - :PREEMPTIBLE
              - !ruby/object:Api::Type::NestedObject
                name: 'managedGroupConfig'
                output: true
                description: |
                  The config for Compute Engine Instance Group Manager that manages this group.
                  This is only used for preemptible instance groups.
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'instanceTemplateName'
                    description: |
                      The name of the Instance Template used for the Managed Instance Group.
                  - !ruby/object:Api::Type::String
                    name: instanceGroupManagerName
                    description: |
                      The name of the Instance Group Manager for this group
          - !ruby/object:Api::Type::NestedObject
            name: 'secondaryWorkerConfig'
            description: |
              The config settings for Compute Engine resources in an instance group, such as a
              master or worker group.
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'numInstances'
                description: |
                  The number of VM instances in the instance group. For master instance groups,
                  must be set to 1.
              - !ruby/object:Api::Type::Array
                name: 'instanceNames'
                output: true
                item_type: Api::Type::String
                description: |
                  The list of instance names.
              - !ruby/object:Api::Type::String
                name: 'imageUri'
                description: |
                  The Compute Engine image resource used for cluster instances.
              - !ruby/object:Api::Type::String
                name: 'machineTypeUri'
                description: |
                  The Compute Engine machine type used for cluster instances
              - !ruby/object:Api::Type::NestedObject
                name: 'diskConfig'
                description: |
                  Disk option config settings
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'bootDiskType'
                    description: |
                      Type of the boot disk. Valid values are "pd-ssd" or "pd-standard"
                  - !ruby/object:Api::Type::Integer
                    name: 'bootDiskSizeGb'
                    description: |
                      Size in GB of the boot disk.
                  - !ruby/object:Api::Type::Integer
                    name: 'numLocalSsds'
                    description: |
                      Number of attached SSDs, from 0 to 4.
              - !ruby/object:Api::Type::Boolean
                name: 'isPreemptible'
                output: true
                description: |
                  Specifies if this instance group contains preemptible instances.
              - !ruby/object:Api::Type::Enum
                name: 'preemptibility'
                description: |
                  Specifies the preemptibility of the instance group.
                  The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.
                  The default value for secondary instances is PREEMPTIBLE.
                values:
                - :PREEMPTIBILITY_UNSPECIFIED
                - :NON_PREEMPTIBLE
                - :PREEMPTIBLE
              - !ruby/object:Api::Type::NestedObject
                name: 'managedGroupConfig'
                output: true
                description: |
                  The config for Compute Engine Instance Group Manager that manages this group.
                  This is only used for preemptible instance groups.
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'instanceTemplateName'
                    description: |
                      The name of the Instance Template used for the Managed Instance Group.
                  - !ruby/object:Api::Type::String
                    name: instanceGroupManagerName
                    description: |
                      The name of the Instance Group Manager for this group
          - !ruby/object:Api::Type::NestedObject
            name: 'softwareConfig'
            description: |
              Specifies the selection and config of software inside the cluster
            properties:
              - !ruby/object:Api::Type::String
                name: 'imageVersion'
                description: |
                  The version of software inside the cluster. It must be one of the supported Cloud Dataproc
                  Versions, such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview"
                  version.
              - !ruby/object:Api::Type::KeyValuePairs
                name: 'properties'
                description: |
                  The properties to set on daemon config files.
                  Property keys are specified in the prefix:property format, for example `core:hadoop.tmp.dir`
              - !ruby/object:Api::Type::Enum
                name: 'optionalComponents'
                description: |
                  The set of optional components to activate on the cluster.

                  Possible values include: COMPONENT_UNSPECIFIED, ANACONDA, HIVE_WEBHCAT, JUPYTER, ZEPPELIN, HBASE, SOLR, and RANGER
                values:
                - :COMPONENT_UNSPECIFIED
                - :ANACONDA
                - :HBASE
                - :RANGER
                - :SOLR
                - :HIVE_WEBHCAT
                - :JUPYTER
                - :ZEPPELIN
          - !ruby/object:Api::Type::Array
            name: 'initializationActions'
            description: |
              Specifies an executable to run on a fully configured node and a timeout period for executable completion.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'executableFile'
                  description: |
                    Cloud Storage URI of the executable file
                - !ruby/object:Api::Type::String
                  name: 'executionTimeout'
                  description: |
                    Amount of time executable has to complete
          - !ruby/object:Api::Type::NestedObject
            name: 'encryptionConfig'
            description: |
              Encryption settings for the cluster.
            properties:
              - !ruby/object:Api::Type::String
                name: 'gcePdKmsKeyName'
                description: |
                  The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
          - !ruby/object:Api::Type::NestedObject
            name: 'securityConfig'
            description: |
              Kerberos config holder.
            properties:
              - !ruby/object:Api::Type::NestedObject
                name: 'kerberosConfig'
                description: |
                  Kerberos related configuration.
                properties:
                  - !ruby/object:Api::Type::Boolean
                    name: 'enableKerberos'
                    description: |
                      Flag to indicate whether to Kerberize the cluster.
                  - !ruby/object:Api::Type::String
                    name: 'rootprincipalPasswordUri'
                    description: |
                      The cloud Storage URI of a KMS encrypted file containing the root principal password.
                  - !ruby/object:Api::Type::String
                    name: 'kmsKeyUri'
                    description: |
                      The uri of the KMS key used to encrypt various sensitive files.
                  - !ruby/object:Api::Type::String
                    name: 'keystoreUri'
                    description: |
                      The Cloud Storage URI of the keystore file used for SSL encryption.
                  - !ruby/object:Api::Type::String
                    name: 'truststoreUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore.
                  - !ruby/object:Api::Type::String
                    name: 'keyPasswordUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key.
                  - !ruby/object:Api::Type::String
                    name: 'truststorePasswordUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore.
                  - !ruby/object:Api::Type::String
                    name: 'crossRealmTrustRealm'
                    description: |
                      The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
                  - !ruby/object:Api::Type::String
                    name: 'crossRealmTrustAdminServer'
                    description: |
                      The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
                  - !ruby/object:Api::Type::String
                    name: 'crossRealmTrustSharedPasswordUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster
                      Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
                  - !ruby/object:Api::Type::String
                    name: 'kdcDbKeyUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
                  - !ruby/object:Api::Type::String
                    name: 'tgtLifetimeHours'
                    description: |
                      The lifetime of the ticket granting ticket, in hours.
                  - !ruby/object:Api::Type::String
                    name: 'realm'
                    description: |
                      The name of the on-cluster Kerberos realm.


    
  - !ruby/object:Api::Resource
    name: ProjectRegionCluster
    base_url: 'projects/{{projectId}}/regions/{{region}}/clusters'
    self_link: 'projects/{{projectId}}/regions/{{region}}/clusters/{{clusterName}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/dataproc/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        Describes the identifying information, config, and status of a Dataproc cluster
    properties:
  
      - !ruby/object:Api::Type::String
        name: 'projectId'
        description: |
          Required. The Google Cloud Platform project ID that the cluster belongs to.
      - !ruby/object:Api::Type::String
        name: 'clusterName'
        description: |
          Required. The cluster name, which must be unique within a project. The name must start with a lowercase letter, and can contain up to 51 lowercase letters, numbers, and hyphens. It cannot end with a hyphen. The name of a deleted cluster can be reused.
      - !ruby/object:Api::Type::String
        name: 'config'
        description: |
          Optional. The cluster config for a cluster of Compute Engine Instances. Note that Dataproc may set default values, and values may change when clusters are updated.Exactly one of ClusterConfig or VirtualClusterConfig must be specified.
      - !ruby/object:Api::Type::String
        name: 'virtualClusterConfig'
        description: |
          Optional. The virtual cluster config is used when creating a Dataproc cluster that does not directly control the underlying compute resources, for example, when creating a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-overview). Dataproc may set default values, and values may change when clusters are updated. Exactly one of config or virtual_cluster_config must be specified.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::String
        name: 'status'
        description: |
          Output only. Cluster status.
      - !ruby/object:Api::Type::Array
        name: 'statusHistory'
        description: |
          Output only. The previous cluster status.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'clusterUuid'
        description: |
          Output only. A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.
      - !ruby/object:Api::Type::String
        name: 'metrics'
        description: |
          Output only. Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.
  


    
  - !ruby/object:Api::Resource
    name: ProjectRegionCluster
    base_url: 'projects/{{projectId}}/regions/{{region}}/clusters'
    self_link: 'projects/{{projectId}}/regions/{{region}}/clusters/{{clusterName}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/dataproc/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        Describes the identifying information, config, and status of a Dataproc cluster
    properties:
  
      - !ruby/object:Api::Type::String
        name: 'projectId'
        description: |
          Required. The Google Cloud Platform project ID that the cluster belongs to.
      - !ruby/object:Api::Type::String
        name: 'clusterName'
        description: |
          Required. The cluster name, which must be unique within a project. The name must start with a lowercase letter, and can contain up to 51 lowercase letters, numbers, and hyphens. It cannot end with a hyphen. The name of a deleted cluster can be reused.
      - !ruby/object:Api::Type::String
        name: 'config'
        description: |
          Optional. The cluster config for a cluster of Compute Engine Instances. Note that Dataproc may set default values, and values may change when clusters are updated.Exactly one of ClusterConfig or VirtualClusterConfig must be specified.
      - !ruby/object:Api::Type::String
        name: 'virtualClusterConfig'
        description: |
          Optional. The virtual cluster config is used when creating a Dataproc cluster that does not directly control the underlying compute resources, for example, when creating a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-overview). Dataproc may set default values, and values may change when clusters are updated. Exactly one of config or virtual_cluster_config must be specified.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::String
        name: 'status'
        description: |
          Output only. Cluster status.
      - !ruby/object:Api::Type::Array
        name: 'statusHistory'
        description: |
          Output only. The previous cluster status.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'clusterUuid'
        description: |
          Output only. A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.
      - !ruby/object:Api::Type::String
        name: 'metrics'
        description: |
          Output only. Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.
  


    
  - !ruby/object:Api::Resource
    name: ProjectRegionJob
    base_url: 'projects/{{projectId}}/regions/{{region}}/jobs'
    self_link: 'projects/{{projectId}}/regions/{{region}}/jobs/{{jobId}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/dataproc/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A Dataproc job resource.
    properties:
  
      - !ruby/object:Api::Type::NestedObject
        name: 'reference'
        description: |
          Encapsulates the full scoping used to reference a job.
        properties:
            - !ruby/object:Api::Type::String
              name: 'projectId'
              description: |
                Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
            - !ruby/object:Api::Type::String
              name: 'jobId'
              description: |
                Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
      - !ruby/object:Api::Type::NestedObject
        name: 'placement'
        description: |
          Dataproc job config.
        properties:
            - !ruby/object:Api::Type::String
              name: 'clusterName'
              description: |
                Required. The name of the cluster where the job will be submitted.
            - !ruby/object:Api::Type::String
              name: 'clusterUuid'
              description: |
                Output only. A cluster UUID generated by the Dataproc service when the job is submitted.
            - !ruby/object:Api::Type::NestedObject
              name: 'clusterLabels'
              description: |
                Optional. Cluster labels to identify a cluster where the job will be submitted.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
      - !ruby/object:Api::Type::NestedObject
        name: 'hadoopJob'
        description: |
          A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
        properties:
            - !ruby/object:Api::Type::String
              name: 'mainJarFileUri'
              description: |
                The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
            - !ruby/object:Api::Type::String
              name: 'mainClass'
              description: |
                The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
            - !ruby/object:Api::Type::Array
              name: 'args'
              description: |
                Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'fileUris'
              description: |
                Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'archiveUris'
              description: |
                Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
      - !ruby/object:Api::Type::NestedObject
        name: 'sparkJob'
        description: |
          A Dataproc job for running Apache Spark (https://spark.apache.org/) applications on YARN.
        properties:
            - !ruby/object:Api::Type::String
              name: 'mainJarFileUri'
              description: |
                The HCFS URI of the jar file that contains the main class.
            - !ruby/object:Api::Type::String
              name: 'mainClass'
              description: |
                The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in SparkJob.jar_file_uris.
            - !ruby/object:Api::Type::Array
              name: 'args'
              description: |
                Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'fileUris'
              description: |
                Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'archiveUris'
              description: |
                Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
      - !ruby/object:Api::Type::NestedObject
        name: 'pysparkJob'
        description: |
          A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
        properties:
            - !ruby/object:Api::Type::String
              name: 'mainPythonFileUri'
              description: |
                Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.
            - !ruby/object:Api::Type::Array
              name: 'args'
              description: |
                Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'pythonFileUris'
              description: |
                Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'fileUris'
              description: |
                Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'archiveUris'
              description: |
                Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
      - !ruby/object:Api::Type::NestedObject
        name: 'hiveJob'
        description: |
          A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
        properties:
            - !ruby/object:Api::Type::String
              name: 'queryFileUri'
              description: |
                The HCFS URI of the script that contains Hive queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'queryList'
              description: |
                A list of queries to run on a cluster.
              properties:
                  - !ruby/object:Api::Type::Array
                    name: 'queries'
                    description: |
                      Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::Boolean
              name: 'continueOnFailure'
              description: |
                Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'scriptVariables'
              description: |
                Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
              item_type: Api::Type::String
      - !ruby/object:Api::Type::NestedObject
        name: 'pigJob'
        description: |
          A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
        properties:
            - !ruby/object:Api::Type::String
              name: 'queryFileUri'
              description: |
                The HCFS URI of the script that contains the Pig queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'queryList'
              description: |
                A list of queries to run on a cluster.
              properties:
                  - !ruby/object:Api::Type::Array
                    name: 'queries'
                    description: |
                      Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::Boolean
              name: 'continueOnFailure'
              description: |
                Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'scriptVariables'
              description: |
                Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
      - !ruby/object:Api::Type::NestedObject
        name: 'sparkRJob'
        description: |
          A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
        properties:
            - !ruby/object:Api::Type::String
              name: 'mainRFileUri'
              description: |
                Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.
            - !ruby/object:Api::Type::Array
              name: 'args'
              description: |
                Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'fileUris'
              description: |
                Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'archiveUris'
              description: |
                Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
      - !ruby/object:Api::Type::NestedObject
        name: 'sparkSqlJob'
        description: |
          A Dataproc job for running Apache Spark SQL (https://spark.apache.org/sql/) queries.
        properties:
            - !ruby/object:Api::Type::String
              name: 'queryFileUri'
              description: |
                The HCFS URI of the script that contains SQL queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'queryList'
              description: |
                A list of queries to run on a cluster.
              properties:
                  - !ruby/object:Api::Type::Array
                    name: 'queries'
                    description: |
                      Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'scriptVariables'
              description: |
                Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API might be overwritten.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
      - !ruby/object:Api::Type::NestedObject
        name: 'prestoJob'
        description: |
          A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.
        properties:
            - !ruby/object:Api::Type::String
              name: 'queryFileUri'
              description: |
                The HCFS URI of the script that contains SQL queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'queryList'
              description: |
                A list of queries to run on a cluster.
              properties:
                  - !ruby/object:Api::Type::Array
                    name: 'queries'
                    description: |
                      Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::Boolean
              name: 'continueOnFailure'
              description: |
                Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
            - !ruby/object:Api::Type::String
              name: 'outputFormat'
              description: |
                Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
            - !ruby/object:Api::Type::Array
              name: 'clientTags'
              description: |
                Optional. Presto client tags to attach to this query
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
      - !ruby/object:Api::Type::NestedObject
        name: 'trinoJob'
        description: |
          A Dataproc job for running Trino (https://trino.io/) queries. IMPORTANT: The Dataproc Trino Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/trino) must be enabled when the cluster is created to submit a Trino job to the cluster.
        properties:
            - !ruby/object:Api::Type::String
              name: 'queryFileUri'
              description: |
                The HCFS URI of the script that contains SQL queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'queryList'
              description: |
                A list of queries to run on a cluster.
              properties:
                  - !ruby/object:Api::Type::Array
                    name: 'queries'
                    description: |
                      Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::Boolean
              name: 'continueOnFailure'
              description: |
                Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
            - !ruby/object:Api::Type::String
              name: 'outputFormat'
              description: |
                Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats
            - !ruby/object:Api::Type::Array
              name: 'clientTags'
              description: |
                Optional. Trino client tags to attach to this query
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values. Used to set Trino session properties (https://trino.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Trino CLI
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
      - !ruby/object:Api::Type::NestedObject
        name: 'flinkJob'
        description: |
          A Dataproc job for running Apache Flink applications on YARN.
        properties:
            - !ruby/object:Api::Type::String
              name: 'mainJarFileUri'
              description: |
                The HCFS URI of the jar file that contains the main class.
            - !ruby/object:Api::Type::String
              name: 'mainClass'
              description: |
                The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jarFileUris.
            - !ruby/object:Api::Type::Array
              name: 'args'
              description: |
                Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Flink driver and tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::String
              name: 'savepointUri'
              description: |
                Optional. HCFS URI of the savepoint, which contains the last saved progress for starting the current job.
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure Flink. Properties that conflict with values set by the Dataproc API might beoverwritten. Can include properties set in/etc/flink/conf/flink-defaults.conf and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
      - !ruby/object:Api::Type::NestedObject
        name: 'status'
        description: |
          Dataproc job status.
        properties:
            - !ruby/object:Api::Type::Enum
              name: 'state'
              description: |
                Output only. A state message specifying the overall job state.
              values:
                - :STATE_UNSPECIFIED
                - :PENDING
                - :SETUP_DONE
                - :RUNNING
                - :CANCEL_PENDING
                - :CANCEL_STARTED
                - :CANCELLED
                - :DONE
                - :ERROR
                - :ATTEMPT_FAILURE
            - !ruby/object:Api::Type::String
              name: 'details'
              description: |
                Optional. Output only. Job state details, such as an error description if the state is ERROR.
            - !ruby/object:Api::Type::String
              name: 'stateStartTime'
              description: |
                Output only. The time when this state was entered.
            - !ruby/object:Api::Type::Enum
              name: 'substate'
              description: |
                Output only. Additional state information, which includes status reported by the agent.
              values:
                - :UNSPECIFIED
                - :SUBMITTED
                - :QUEUED
                - :STALE_STATUS
      - !ruby/object:Api::Type::Array
        name: 'statusHistory'
        description: |
          Output only. The previous job status.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Enum
              name: 'state'
              description: |
                Output only. A state message specifying the overall job state.
              values:
                - :STATE_UNSPECIFIED
                - :PENDING
                - :SETUP_DONE
                - :RUNNING
                - :CANCEL_PENDING
                - :CANCEL_STARTED
                - :CANCELLED
                - :DONE
                - :ERROR
                - :ATTEMPT_FAILURE
            - !ruby/object:Api::Type::String
              name: 'details'
              description: |
                Optional. Output only. Job state details, such as an error description if the state is ERROR.
            - !ruby/object:Api::Type::String
              name: 'stateStartTime'
              description: |
                Output only. The time when this state was entered.
            - !ruby/object:Api::Type::Enum
              name: 'substate'
              description: |
                Output only. Additional state information, which includes status reported by the agent.
              values:
                - :UNSPECIFIED
                - :SUBMITTED
                - :QUEUED
                - :STALE_STATUS
      - !ruby/object:Api::Type::Array
        name: 'yarnApplications'
        description: |
          Output only. The collection of YARN applications spun up by this job.Beta Feature: This report is available for testing purposes only. It might be changed before final release.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Required. The application name.
            - !ruby/object:Api::Type::Enum
              name: 'state'
              description: |
                Required. The application state.
              values:
                - :STATE_UNSPECIFIED
                - :NEW
                - :NEW_SAVING
                - :SUBMITTED
                - :ACCEPTED
                - :RUNNING
                - :FINISHED
                - :FAILED
                - :KILLED
            - !ruby/object:Api::Type::Integer
              name: 'progress'
              description: |
                Required. The numerical progress of the application, from 1 to 100.
            - !ruby/object:Api::Type::String
              name: 'trackingUrl'
              description: |
                Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.
      - !ruby/object:Api::Type::String
        name: 'driverOutputResourceUri'
        description: |
          Output only. A URI pointing to the location of the stdout of the job's driver program.
      - !ruby/object:Api::Type::String
        name: 'driverControlFilesUri'
        description: |
          Output only. If present, the location of miscellaneous control files which can be used as part of job setup and handling. If not present, control files might be placed in the same location as driver_output_uri.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          Optional. The labels to associate with this job. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a job.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::NestedObject
        name: 'scheduling'
        description: |
          Job scheduling options.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'maxFailuresPerHour'
              description: |
                Optional. Maximum number of times per hour a driver can be restarted as a result of driver exiting with non-zero code before job is reported failed.A job might be reported as thrashing if the driver exits with a non-zero code four times within a 10-minute window.Maximum value is 10.Note: This restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
            - !ruby/object:Api::Type::Integer
              name: 'maxFailuresTotal'
              description: |
                Optional. Maximum total number of times a driver can be restarted as a result of the driver exiting with a non-zero code. After the maximum number is reached, the job will be reported as failed.Maximum value is 240.Note: Currently, this restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
      - !ruby/object:Api::Type::String
        name: 'jobUuid'
        description: |
          Output only. A UUID that uniquely identifies a job within the project over time. This is in contrast to a user-settable reference.job_id that might be reused over time.
      - !ruby/object:Api::Type::Boolean
        name: 'done'
        description: |
          Output only. Indicates whether the job is completed. If the value is false, the job is still in progress. If true, the job is completed, and status.state field will indicate if it was successful, failed, or cancelled.
      - !ruby/object:Api::Type::NestedObject
        name: 'driverSchedulingConfig'
        description: |
          Driver scheduling configuration.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'memoryMb'
              description: |
                Required. The amount of memory in MB the driver is requesting.
            - !ruby/object:Api::Type::Integer
              name: 'vcores'
              description: |
                Required. The number of vCPUs the driver is requesting.
  
