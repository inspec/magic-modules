# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: Dataproc
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://dataproc.googleapis.com/v1/
  - !ruby/object:Api::Product::Version
    name: beta
    base_url: https://dataproc.googleapis.com/v1beta2/
scopes:
  - https://www.googleapis.com/auth/cloud-identity
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Cloud Dataproc API
    url: https://console.cloud.google.com/apis/library/dataproc.googleapis.com
objects:
  - !ruby/object:Api::Resource
    name: 'AutoscalingPolicy'
    base_url: "projects/{{project}}/locations/{{location}}/autoscalingPolicies"
    self_link: "projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{id}}"
    collection_url_key: 'policies'
    description: |
      Describes an autoscaling policy for Dataproc cluster autoscaler.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'location'
        url_param_only: true
        input: true
        default_value: global
        description: |
          The  location where the autoscaling policy should reside.
          The default value is `global`.
    properties:
      - !ruby/object:Api::Type::String
        name: 'id'
        required: true
        description: |
          The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
          and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
          3 and 50 characters.
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The "resource name" of the autoscaling policy.
      - !ruby/object:Api::Type::NestedObject
        name: 'workerConfig'
        description: |
          Describes how the autoscaler will operate for primary workers.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'minInstances'
            default_value: 2
            description: |
              Minimum number of instances for this group. Bounds: [2, maxInstances]. Defaults to 2.
          - !ruby/object:Api::Type::Integer
            name: 'maxInstances'
            required: true
            description: |
              Maximum number of instances for this group.
          - !ruby/object:Api::Type::Integer
            name: 'weight'
            default_value: 1
            description: |
              Weight for the instance group, which is used to determine the fraction of total workers
              in the cluster from this instance group. For example, if primary workers have weight 2,
              and secondary workers have weight 1, the cluster will have approximately 2 primary workers
              for each secondary worker.

              The cluster may not reach the specified balance if constrained by min/max bounds or other
              autoscaling settings. For example, if maxInstances for secondary workers is 0, then only
              primary workers will be added. The cluster can also be out of balance when created.

              If weight is not set on any instance group, the cluster will default to equal weight for
              all groups: the cluster will attempt to maintain an equal number of workers in each group
              within the configured size bounds for each group. If weight is set for one group only,
              the cluster will default to zero weight on the unset group. For example if weight is set
              only on primary workers, the cluster will use primary workers only and no secondary workers.
      - !ruby/object:Api::Type::NestedObject
        name: 'secondaryWorkerConfig'
        description: |
          Describes how the autoscaler will operate for secondary workers.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'minInstances'
            at_least_one_of:
              - secondary_worker_config.0.min_instances
              - secondary_worker_config.0.max_instances
              - secondary_worker_config.0.weight
            default_value: 0
            description: |
              Minimum number of instances for this group. Bounds: [0, maxInstances]. Defaults to 0.
          - !ruby/object:Api::Type::Integer
            name: 'maxInstances'
            at_least_one_of:
              - secondary_worker_config.0.min_instances
              - secondary_worker_config.0.max_instances
              - secondary_worker_config.0.weight
            default_value: 0
            description: |
              Maximum number of instances for this group. Note that by default, clusters will not use
              secondary workers. Required for secondary workers if the minimum secondary instances is set.
              Bounds: [minInstances, ). Defaults to 0.
          - !ruby/object:Api::Type::Integer
            name: 'weight'
            at_least_one_of:
              - secondary_worker_config.0.min_instances
              - secondary_worker_config.0.max_instances
              - secondary_worker_config.0.weight
            default_value: 1
            description: |
              Weight for the instance group, which is used to determine the fraction of total workers
              in the cluster from this instance group. For example, if primary workers have weight 2,
              and secondary workers have weight 1, the cluster will have approximately 2 primary workers
              for each secondary worker.

              The cluster may not reach the specified balance if constrained by min/max bounds or other
              autoscaling settings. For example, if maxInstances for secondary workers is 0, then only
              primary workers will be added. The cluster can also be out of balance when created.

              If weight is not set on any instance group, the cluster will default to equal weight for
              all groups: the cluster will attempt to maintain an equal number of workers in each group
              within the configured size bounds for each group. If weight is set for one group only,
              the cluster will default to zero weight on the unset group. For example if weight is set
              only on primary workers, the cluster will use primary workers only and no secondary workers.
      - !ruby/object:Api::Type::NestedObject
        name: 'basicAlgorithm'
        description: |
          Basic algorithm for autoscaling.
        properties:
          - !ruby/object:Api::Type::String
            name: 'cooldownPeriod'
            default_value: "120s"
            description: |
              Duration between scaling events. A scaling period starts after the
              update operation from the previous event has completed.

              Bounds: [2m, 1d]. Default: 2m.
          - !ruby/object:Api::Type::NestedObject
            name: 'yarnConfig'
            required: true
            description: |
              YARN autoscaling configuration.
            properties:
              - !ruby/object:Api::Type::String
                name: 'gracefulDecommissionTimeout'
                required: true
                description: |
                  Timeout for YARN graceful decommissioning of Node Managers. Specifies the
                  duration to wait for jobs to complete before forcefully removing workers
                  (and potentially interrupting jobs). Only applicable to downscaling operations.

                  Bounds: [0s, 1d].
              - !ruby/object:Api::Type::Double
                name: 'scaleUpFactor'
                required: true
                description: |
                  Fraction of average pending memory in the last cooldown period for which to
                  add workers. A scale-up factor of 1.0 will result in scaling up so that there
                  is no pending memory remaining after the update (more aggressive scaling).
                  A scale-up factor closer to 0 will result in a smaller magnitude of scaling up
                  (less aggressive scaling).

                  Bounds: [0.0, 1.0].
              - !ruby/object:Api::Type::Double
                name: 'scaleDownFactor'
                required: true
                description: |
                  Fraction of average pending memory in the last cooldown period for which to
                  remove workers. A scale-down factor of 1 will result in scaling down so that there
                  is no available memory remaining after the update (more aggressive scaling).
                  A scale-down factor of 0 disables removing workers, which can be beneficial for
                  autoscaling a single job.

                  Bounds: [0.0, 1.0].
              - !ruby/object:Api::Type::Double
                name: 'scaleUpMinWorkerFraction'
                default_value: 0.0
                description: |
                  Minimum scale-up threshold as a fraction of total cluster size before scaling
                  occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler
                  must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of
                  0 means the autoscaler will scale up on any recommended change.

                  Bounds: [0.0, 1.0]. Default: 0.0.
              - !ruby/object:Api::Type::Double
                name: 'scaleDownMinWorkerFraction'
                default_value: 0.0
                description: |
                  Minimum scale-down threshold as a fraction of total cluster size before scaling occurs.
                  For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must
                  recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0
                  means the autoscaler will scale down on any recommended change.

                  Bounds: [0.0, 1.0]. Default: 0.0.
  - !ruby/object:Api::Resource
    name: 'Cluster'
    base_url: "projects/{{project}}/regions/{{region}}/clusters"
    self_link: "projects/{{project}}/regions/{{region}}/clusters/{{clusterName}}"
    description: |
      Describes an autoscaling policy for Dataproc cluster autoscaler.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'region'
        url_param_only: true
        input: true
        description: |
          The region in which the cluster and associated nodes will be created in.
    properties:
      - !ruby/object:Api::Type::String
        name: 'clusterName'
        required: true
        description: |
          The name of the cluster, unique within the project and region.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          Labels to apply to this cluster.  A list of key->value pairs.
      - !ruby/object:Api::Type::NestedObject
        name: 'config'
        description: |
          Configuration for the cluster
        properties:
          - !ruby/object:Api::Type::String
            name: 'configBucket'
            description: |
              The Cloud Storage staging bucket used to stage files, such as Hadoop jars,
              between client machines and the cluster.
          - !ruby/object:Api::Type::NestedObject
            name: 'gceClusterConfig'
            description: |
              Common config settings for resources of Google Compute Engine cluster instances,
              applicable to all instances in the cluster.
            properties:
              - !ruby/object:Api::Type::String
                name: 'zoneUri'
                description: |
                  The zone where the Compute Engine cluster will be located
              - !ruby/object:Api::Type::String
                name: 'networkUri'
                description: |
                  The Compute Engine network to be used for machine communications
              - !ruby/object:Api::Type::String
                name: 'subnetworkUri'
                description: |
                  The Compute Engine subnetwork to be used for machine communications
              - !ruby/object:Api::Type::Boolean
                name: 'internalIpOnly'
                description: |
                  If true, all instances int he cluster will only have internal IP addresses
              - !ruby/object:Api::Type::Array
                name: 'serviceAccountScopes'
                item_type: Api::Type::String
                description: |
                  The URIs of service account scopes to be included in Compute Engine instances
                  The following base set of scopes is always included:

                  https://www.googleapis.com/auth/cloud.useraccounts.readonly

                  https://www.googleapis.com/auth/devstorage.read_write

                  https://www.googleapis.com/auth/logging.write
              - !ruby/object:Api::Type::Array
                name: 'tags'
                item_type: Api::Type::String
                description: |
                  The Compute Engine tags to add to all instances
              - !ruby/object:Api::Type::KeyValuePairs
                name: 'metadata'
                description: |
                  The map of metadata entries to add to all instances
          - !ruby/object:Api::Type::NestedObject
            name: 'masterConfig'
            description: |
              The config settings for Compute Engine resources in an instance group, such as a
              master or worker group.
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'numInstances'
                description: |
                  The number of VM instances in the instance group. For master instance groups,
                  must be set to 1.
              - !ruby/object:Api::Type::Array
                name: 'instanceNames'
                output: true
                item_type: Api::Type::String
                description: |
                  The list of instance names.
              - !ruby/object:Api::Type::String
                name: 'imageUri'
                description: |
                  The Compute Engine image resource used for cluster instances.
              - !ruby/object:Api::Type::String
                name: 'machineTypeUri'
                description: |
                  The Compute Engine machine type used for cluster instances
              - !ruby/object:Api::Type::NestedObject
                name: 'diskConfig'
                description: |
                  Disk option config settings
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'bootDiskType'
                    description: |
                      Type of the boot disk. Valid values are "pd-ssd" or "pd-standard"
                  - !ruby/object:Api::Type::Integer
                    name: 'bootDiskSizeGb'
                    description: |
                      Size in GB of the boot disk.
                  - !ruby/object:Api::Type::Integer
                    name: 'numLocalSsds'
                    description: |
                      Number of attached SSDs, from 0 to 4.
              - !ruby/object:Api::Type::Boolean
                name: 'isPreemptible'
                output: true
                description: |
                  Specifies if this instance group contains preemptible instances.
              - !ruby/object:Api::Type::Enum
                name: 'preemptibility'
                description: |
                  Specifies the preemptibility of the instance group.
                  The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.
                  The default value for secondary instances is PREEMPTIBLE.
                values:
                - :PREEMPTIBILITY_UNSPECIFIED
                - :NON_PREEMPTIBLE
                - :PREEMPTIBLE
              - !ruby/object:Api::Type::NestedObject
                name: 'managedGroupConfig'
                output: true
                description: |
                  The config for Compute Engine Instance Group Manager that manages this group.
                  This is only used for preemptible instance groups.
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'instanceTemplateName'
                    description: |
                      The name of the Instance Template used for the Managed Instance Group.
                  - !ruby/object:Api::Type::String
                    name: instanceGroupManagerName
                    description: |
                      The name of the Instance Group Manager for this group
          - !ruby/object:Api::Type::NestedObject
            name: 'workerConfig'
            description: |
              The config settings for Compute Engine resources in an instance group, such as a
              master or worker group.
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'numInstances'
                description: |
                  The number of VM instances in the instance group. For master instance groups,
                  must be set to 1.
              - !ruby/object:Api::Type::Array
                name: 'instanceNames'
                output: true
                item_type: Api::Type::String
                description: |
                  The list of instance names.
              - !ruby/object:Api::Type::String
                name: 'imageUri'
                description: |
                  The Compute Engine image resource used for cluster instances.
              - !ruby/object:Api::Type::String
                name: 'machineTypeUri'
                description: |
                  The Compute Engine machine type used for cluster instances
              - !ruby/object:Api::Type::NestedObject
                name: 'diskConfig'
                description: |
                  Disk option config settings
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'bootDiskType'
                    description: |
                      Type of the boot disk. Valid values are "pd-ssd" or "pd-standard"
                  - !ruby/object:Api::Type::Integer
                    name: 'bootDiskSizeGb'
                    description: |
                      Size in GB of the boot disk.
                  - !ruby/object:Api::Type::Integer
                    name: 'numLocalSsds'
                    description: |
                      Number of attached SSDs, from 0 to 4.
              - !ruby/object:Api::Type::Boolean
                name: 'isPreemptible'
                output: true
                description: |
                  Specifies if this instance group contains preemptible instances.
              - !ruby/object:Api::Type::Enum
                name: 'preemptibility'
                description: |
                  Specifies the preemptibility of the instance group.
                  The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.
                  The default value for secondary instances is PREEMPTIBLE.
                values:
                - :PREEMPTIBILITY_UNSPECIFIED
                - :NON_PREEMPTIBLE
                - :PREEMPTIBLE
              - !ruby/object:Api::Type::NestedObject
                name: 'managedGroupConfig'
                output: true
                description: |
                  The config for Compute Engine Instance Group Manager that manages this group.
                  This is only used for preemptible instance groups.
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'instanceTemplateName'
                    description: |
                      The name of the Instance Template used for the Managed Instance Group.
                  - !ruby/object:Api::Type::String
                    name: instanceGroupManagerName
                    description: |
                      The name of the Instance Group Manager for this group
          - !ruby/object:Api::Type::NestedObject
            name: 'secondaryWorkerConfig'
            description: |
              The config settings for Compute Engine resources in an instance group, such as a
              master or worker group.
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'numInstances'
                description: |
                  The number of VM instances in the instance group. For master instance groups,
                  must be set to 1.
              - !ruby/object:Api::Type::Array
                name: 'instanceNames'
                output: true
                item_type: Api::Type::String
                description: |
                  The list of instance names.
              - !ruby/object:Api::Type::String
                name: 'imageUri'
                description: |
                  The Compute Engine image resource used for cluster instances.
              - !ruby/object:Api::Type::String
                name: 'machineTypeUri'
                description: |
                  The Compute Engine machine type used for cluster instances
              - !ruby/object:Api::Type::NestedObject
                name: 'diskConfig'
                description: |
                  Disk option config settings
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'bootDiskType'
                    description: |
                      Type of the boot disk. Valid values are "pd-ssd" or "pd-standard"
                  - !ruby/object:Api::Type::Integer
                    name: 'bootDiskSizeGb'
                    description: |
                      Size in GB of the boot disk.
                  - !ruby/object:Api::Type::Integer
                    name: 'numLocalSsds'
                    description: |
                      Number of attached SSDs, from 0 to 4.
              - !ruby/object:Api::Type::Boolean
                name: 'isPreemptible'
                output: true
                description: |
                  Specifies if this instance group contains preemptible instances.
              - !ruby/object:Api::Type::Enum
                name: 'preemptibility'
                description: |
                  Specifies the preemptibility of the instance group.
                  The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.
                  The default value for secondary instances is PREEMPTIBLE.
                values:
                - :PREEMPTIBILITY_UNSPECIFIED
                - :NON_PREEMPTIBLE
                - :PREEMPTIBLE
              - !ruby/object:Api::Type::NestedObject
                name: 'managedGroupConfig'
                output: true
                description: |
                  The config for Compute Engine Instance Group Manager that manages this group.
                  This is only used for preemptible instance groups.
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'instanceTemplateName'
                    description: |
                      The name of the Instance Template used for the Managed Instance Group.
                  - !ruby/object:Api::Type::String
                    name: instanceGroupManagerName
                    description: |
                      The name of the Instance Group Manager for this group
          - !ruby/object:Api::Type::NestedObject
            name: 'softwareConfig'
            description: |
              Specifies the selection and config of software inside the cluster
            properties:
              - !ruby/object:Api::Type::String
                name: 'imageVersion'
                description: |
                  The version of software inside the cluster. It must be one of the supported Cloud Dataproc
                  Versions, such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview"
                  version.
              - !ruby/object:Api::Type::KeyValuePairs
                name: 'properties'
                description: |
                  The properties to set on daemon config files.
                  Property keys are specified in the prefix:property format, for example `core:hadoop.tmp.dir`
              - !ruby/object:Api::Type::Enum
                name: 'optionalComponents'
                description: |
                  The set of optional components to activate on the cluster.

                  Possible values include: COMPONENT_UNSPECIFIED, ANACONDA, HIVE_WEBHCAT, JUPYTER, ZEPPELIN, HBASE, SOLR, and RANGER
                values:
                - :COMPONENT_UNSPECIFIED
                - :ANACONDA
                - :HBASE
                - :RANGER
                - :SOLR
                - :HIVE_WEBHCAT
                - :JUPYTER
                - :ZEPPELIN
          - !ruby/object:Api::Type::Array
            name: 'initializationActions'
            description: |
              Specifies an executable to run on a fully configured node and a timeout period for executable completion.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'executableFile'
                  description: |
                    Cloud Storage URI of the executable file
                - !ruby/object:Api::Type::String
                  name: 'executionTimeout'
                  description: |
                    Amount of time executable has to complete
          - !ruby/object:Api::Type::NestedObject
            name: 'encryptionConfig'
            description: |
              Encryption settings for the cluster.
            properties:
              - !ruby/object:Api::Type::String
                name: 'gcePdKmsKeyName'
                description: |
                  The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
          - !ruby/object:Api::Type::NestedObject
            name: 'securityConfig'
            description: |
              Kerberos config holder.
            properties:
              - !ruby/object:Api::Type::NestedObject
                name: 'kerberosConfig'
                description: |
                  Kerberos related configuration.
                properties:
                  - !ruby/object:Api::Type::Boolean
                    name: 'enableKerberos'
                    description: |
                      Flag to indicate whether to Kerberize the cluster.
                  - !ruby/object:Api::Type::String
                    name: 'rootprincipalPasswordUri'
                    description: |
                      The cloud Storage URI of a KMS encrypted file containing the root principal password.
                  - !ruby/object:Api::Type::String
                    name: 'kmsKeyUri'
                    description: |
                      The uri of the KMS key used to encrypt various sensitive files.
                  - !ruby/object:Api::Type::String
                    name: 'keystoreUri'
                    description: |
                      The Cloud Storage URI of the keystore file used for SSL encryption.
                  - !ruby/object:Api::Type::String
                    name: 'truststoreUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore.
                  - !ruby/object:Api::Type::String
                    name: 'keyPasswordUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key.
                  - !ruby/object:Api::Type::String
                    name: 'truststorePasswordUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore.
                  - !ruby/object:Api::Type::String
                    name: 'crossRealmTrustRealm'
                    description: |
                      The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
                  - !ruby/object:Api::Type::String
                    name: 'crossRealmTrustAdminServer'
                    description: |
                      The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
                  - !ruby/object:Api::Type::String
                    name: 'crossRealmTrustSharedPasswordUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster
                      Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
                  - !ruby/object:Api::Type::String
                    name: 'kdcDbKeyUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
                  - !ruby/object:Api::Type::String
                    name: 'tgtLifetimeHours'
                    description: |
                      The lifetime of the ticket granting ticket, in hours.
                  - !ruby/object:Api::Type::String
                    name: 'realm'
                    description: |
                      The name of the on-cluster Kerberos realm.


    
  - !ruby/object:Api::Resource
    name: ProjectRegionCluster
    base_url: 'projects/{{projectId}}/regions/{{region}}/clusters'
    self_link: 'projects/{{projectId}}/regions/{{region}}/clusters/{{clusterName}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/dataproc/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        Describes the identifying information, config, and status of a Dataproc cluster
    properties:
  
      - !ruby/object:Api::Type::String
        name: 'projectId'
        description: |
          Required. The Google Cloud Platform project ID that the cluster belongs to.
      - !ruby/object:Api::Type::String
        name: 'clusterName'
        description: |
          Required. The cluster name, which must be unique within a project. The name must start with a lowercase letter, and can contain up to 51 lowercase letters, numbers, and hyphens. It cannot end with a hyphen. The name of a deleted cluster can be reused.
      - !ruby/object:Api::Type::String
        name: 'config'
        description: |
          Optional. The cluster config for a cluster of Compute Engine Instances. Note that Dataproc may set default values, and values may change when clusters are updated.Exactly one of ClusterConfig or VirtualClusterConfig must be specified.
      - !ruby/object:Api::Type::String
        name: 'virtualClusterConfig'
        description: |
          Optional. The virtual cluster config is used when creating a Dataproc cluster that does not directly control the underlying compute resources, for example, when creating a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-overview). Dataproc may set default values, and values may change when clusters are updated. Exactly one of config or virtual_cluster_config must be specified.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::String
        name: 'status'
        description: |
          Output only. Cluster status.
      - !ruby/object:Api::Type::Array
        name: 'statusHistory'
        description: |
          Output only. The previous cluster status.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'clusterUuid'
        description: |
          Output only. A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.
      - !ruby/object:Api::Type::String
        name: 'metrics'
        description: |
          Output only. Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.
  


    
  - !ruby/object:Api::Resource
    name: ProjectRegionCluster
    base_url: 'projects/{{projectId}}/regions/{{region}}/clusters'
    self_link: 'projects/{{projectId}}/regions/{{region}}/clusters/{{clusterName}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/dataproc/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        Describes the identifying information, config, and status of a Dataproc cluster
    properties:
  
      - !ruby/object:Api::Type::String
        name: 'projectId'
        description: |
          Required. The Google Cloud Platform project ID that the cluster belongs to.
      - !ruby/object:Api::Type::String
        name: 'clusterName'
        description: |
          Required. The cluster name, which must be unique within a project. The name must start with a lowercase letter, and can contain up to 51 lowercase letters, numbers, and hyphens. It cannot end with a hyphen. The name of a deleted cluster can be reused.
      - !ruby/object:Api::Type::String
        name: 'config'
        description: |
          Optional. The cluster config for a cluster of Compute Engine Instances. Note that Dataproc may set default values, and values may change when clusters are updated.Exactly one of ClusterConfig or VirtualClusterConfig must be specified.
      - !ruby/object:Api::Type::String
        name: 'virtualClusterConfig'
        description: |
          Optional. The virtual cluster config is used when creating a Dataproc cluster that does not directly control the underlying compute resources, for example, when creating a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-overview). Dataproc may set default values, and values may change when clusters are updated. Exactly one of config or virtual_cluster_config must be specified.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::String
        name: 'status'
        description: |
          Output only. Cluster status.
      - !ruby/object:Api::Type::Array
        name: 'statusHistory'
        description: |
          Output only. The previous cluster status.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'clusterUuid'
        description: |
          Output only. A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.
      - !ruby/object:Api::Type::String
        name: 'metrics'
        description: |
          Output only. Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.
  


    
  - !ruby/object:Api::Resource
    name: ProjectLocationWorkflowTemplate
    base_url: '{{+parent}}/workflowTemplates'
    self_link: '{{+name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/dataproc/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A Dataproc workflow template resource.
    properties:
  
      - !ruby/object:Api::Type::String
        name: 'id'
        description: |
          
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
      - !ruby/object:Api::Type::Integer
        name: 'version'
        description: |
          Optional. Used to perform a consistent read-modify-write.This field should be left blank for a CreateWorkflowTemplate request. It is required for an UpdateWorkflowTemplate request, and must match the current server version. A typical update template flow would fetch the current template with a GetWorkflowTemplate request, which will return the current template with the version field filled in with the current server version. The user updates other fields in the template, then returns it as part of the UpdateWorkflowTemplate request.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. The time template was created.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. The time template was last updated.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::NestedObject
        name: 'placement'
        description: |
          Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
        properties:
            - !ruby/object:Api::Type::NestedObject
              name: 'managedCluster'
              description: |
                Cluster that is managed by the workflow.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'clusterName'
                    description: |
                      Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'config'
                    description: |
                      The cluster config.
                    properties:
                        - !ruby/object:Api::Type::String
                          name: 'configBucket'
                          description: |
                            Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
                        - !ruby/object:Api::Type::String
                          name: 'tempBucket'
                          description: |
                            Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'gceClusterConfig'
                          description: |
                            Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'zoneUri'
                                description: |
                                  Optional. The Compute Engine zone where the Dataproc cluster will be located. If omitted, the service will pick a zone in the cluster's Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] [zone]
                              - !ruby/object:Api::Type::String
                                name: 'networkUri'
                                description: |
                                  Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default projects/[project_id]/global/networks/default default
                              - !ruby/object:Api::Type::String
                                name: 'subnetworkUri'
                                description: |
                                  Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/[region]/subnetworks/sub0 projects/[project_id]/regions/[region]/subnetworks/sub0 sub0
                              - !ruby/object:Api::Type::Boolean
                                name: 'internalIpOnly'
                                description: |
                                  Optional. This setting applies to subnetwork-enabled networks. It is set to true by default in clusters created with image versions 2.2.x.When set to true: All cluster VMs have internal IP addresses. Google Private Access (https://cloud.google.com/vpc/docs/private-google-access) must be enabled to access Dataproc and other Google Cloud APIs. Off-cluster dependencies must be configured to be accessible without external IP addresses.When set to false: Cluster VMs are not restricted to internal IP addresses. Ephemeral external IP addresses are assigned to each cluster VM.
                              - !ruby/object:Api::Type::Enum
                                name: 'privateIpv6GoogleAccess'
                                description: |
                                  Optional. The type of IPv6 access for a cluster.
                                values:
                                  - :PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED
                                  - :INHERIT_FROM_SUBNETWORK
                                  - :OUTBOUND
                                  - :BIDIRECTIONAL
                              - !ruby/object:Api::Type::String
                                name: 'serviceAccount'
                                description: |
                                  Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
                              - !ruby/object:Api::Type::Array
                                name: 'serviceAccountScopes'
                                description: |
                                  Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'tags'
                                description: |
                                  The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::NestedObject
                                name: 'metadata'
                                description: |
                                  Optional. The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
                                properties:
                                  - !ruby/object:Api::Type::String
                                    name: 'additionalProperties'
                                    description: |
                                      
                              - !ruby/object:Api::Type::NestedObject
                                name: 'reservationAffinity'
                                description: |
                                  Reservation Affinity for consuming Zonal reservation.
                                properties:
                                    - !ruby/object:Api::Type::Enum
                                      name: 'consumeReservationType'
                                      description: |
                                        Optional. Type of reservation to consume
                                      values:
                                        - :TYPE_UNSPECIFIED
                                        - :NO_RESERVATION
                                        - :ANY_RESERVATION
                                        - :SPECIFIC_RESERVATION
                                    - !ruby/object:Api::Type::String
                                      name: 'key'
                                      description: |
                                        Optional. Corresponds to the label key of reservation resource.
                                    - !ruby/object:Api::Type::Array
                                      name: 'values'
                                      description: |
                                        Optional. Corresponds to the label values of reservation resource.
                                      item_type: Api::Type::String
                              - !ruby/object:Api::Type::NestedObject
                                name: 'nodeGroupAffinity'
                                description: |
                                  Node Group Affinity for clusters using sole-tenant node groups. The Dataproc NodeGroupAffinity resource is not related to the Dataproc NodeGroup resource.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'nodeGroupUri'
                                      description: |
                                        Required. The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 node-group-1
                              - !ruby/object:Api::Type::NestedObject
                                name: 'shieldedInstanceConfig'
                                description: |
                                  Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
                                properties:
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableSecureBoot'
                                      description: |
                                        Optional. Defines whether instances have Secure Boot enabled.
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableVtpm'
                                      description: |
                                        Optional. Defines whether instances have the vTPM enabled.
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableIntegrityMonitoring'
                                      description: |
                                        Optional. Defines whether instances have integrity monitoring enabled.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'confidentialInstanceConfig'
                                description: |
                                  Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)
                                properties:
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableConfidentialCompute'
                                      description: |
                                        Optional. Defines whether the instance should have confidential compute enabled.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'masterConfig'
                          description: |
                            The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'numInstances'
                                description: |
                                  Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                              - !ruby/object:Api::Type::Array
                                name: 'instanceNames'
                                description: |
                                  Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'instanceReferences'
                                description: |
                                  Output only. List of references to Compute Engine instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceName'
                                      description: |
                                        The user-friendly name of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceId'
                                      description: |
                                        The unique identifier of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicKey'
                                      description: |
                                        The public RSA key used for sharing data with this instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicEciesKey'
                                      description: |
                                        The public ECIES key used for sharing data with this instance.
                              - !ruby/object:Api::Type::String
                                name: 'imageUri'
                                description: |
                                  Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                              - !ruby/object:Api::Type::String
                                name: 'machineTypeUri'
                                description: |
                                  Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'diskConfig'
                                description: |
                                  Specifies the config of disk options for a group of VM instances.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'bootDiskType'
                                      description: |
                                        Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'bootDiskSizeGb'
                                      description: |
                                        Optional. Size in GB of the boot disk (default is 500GB).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'numLocalSsds'
                                      description: |
                                        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                    - !ruby/object:Api::Type::String
                                      name: 'localSsdInterface'
                                      description: |
                                        Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                              - !ruby/object:Api::Type::Boolean
                                name: 'isPreemptible'
                                description: |
                                  Output only. Specifies that this instance group contains preemptible instances.
                              - !ruby/object:Api::Type::Enum
                                name: 'preemptibility'
                                description: |
                                  Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                values:
                                  - :PREEMPTIBILITY_UNSPECIFIED
                                  - :NON_PREEMPTIBLE
                                  - :PREEMPTIBLE
                                  - :SPOT
                              - !ruby/object:Api::Type::NestedObject
                                name: 'managedGroupConfig'
                                description: |
                                  Specifies the resources used to actively manage an instance group.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceTemplateName'
                                      description: |
                                        Output only. The name of the Instance Template used for the Managed Instance Group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerName'
                                      description: |
                                        Output only. The name of the Instance Group Manager for this group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerUri'
                                      description: |
                                        Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                              - !ruby/object:Api::Type::Array
                                name: 'accelerators'
                                description: |
                                  Optional. The Compute Engine accelerator configuration for these instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'acceleratorTypeUri'
                                      description: |
                                        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'acceleratorCount'
                                      description: |
                                        The number of the accelerator cards of this type exposed to this instance.
                              - !ruby/object:Api::Type::String
                                name: 'minCpuPlatform'
                                description: |
                                  Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                              - !ruby/object:Api::Type::Integer
                                name: 'minNumInstances'
                                description: |
                                  Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'instanceFlexibilityPolicy'
                                description: |
                                  Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionList'
                                      description: |
                                        Optional. List of instance selection options that the group will use when creating new VMs.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'machineTypes'
                                            description: |
                                              Optional. Full machine-type names, e.g. "n1-standard-16".
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Integer
                                            name: 'rank'
                                            description: |
                                              Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionResults'
                                      description: |
                                        Output only. A list of instance selection results in the group.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'machineType'
                                            description: |
                                              Output only. Full machine-type names, e.g. "n1-standard-16".
                                          - !ruby/object:Api::Type::Integer
                                            name: 'vmCount'
                                            description: |
                                              Output only. Number of VM provisioned with the machine_type.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'startupConfig'
                                description: |
                                  Configuration to handle the startup of instances during cluster create and update process.
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'requiredRegistrationFraction'
                                      description: |
                                        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'workerConfig'
                          description: |
                            The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'numInstances'
                                description: |
                                  Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                              - !ruby/object:Api::Type::Array
                                name: 'instanceNames'
                                description: |
                                  Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'instanceReferences'
                                description: |
                                  Output only. List of references to Compute Engine instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceName'
                                      description: |
                                        The user-friendly name of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceId'
                                      description: |
                                        The unique identifier of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicKey'
                                      description: |
                                        The public RSA key used for sharing data with this instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicEciesKey'
                                      description: |
                                        The public ECIES key used for sharing data with this instance.
                              - !ruby/object:Api::Type::String
                                name: 'imageUri'
                                description: |
                                  Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                              - !ruby/object:Api::Type::String
                                name: 'machineTypeUri'
                                description: |
                                  Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'diskConfig'
                                description: |
                                  Specifies the config of disk options for a group of VM instances.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'bootDiskType'
                                      description: |
                                        Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'bootDiskSizeGb'
                                      description: |
                                        Optional. Size in GB of the boot disk (default is 500GB).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'numLocalSsds'
                                      description: |
                                        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                    - !ruby/object:Api::Type::String
                                      name: 'localSsdInterface'
                                      description: |
                                        Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                              - !ruby/object:Api::Type::Boolean
                                name: 'isPreemptible'
                                description: |
                                  Output only. Specifies that this instance group contains preemptible instances.
                              - !ruby/object:Api::Type::Enum
                                name: 'preemptibility'
                                description: |
                                  Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                values:
                                  - :PREEMPTIBILITY_UNSPECIFIED
                                  - :NON_PREEMPTIBLE
                                  - :PREEMPTIBLE
                                  - :SPOT
                              - !ruby/object:Api::Type::NestedObject
                                name: 'managedGroupConfig'
                                description: |
                                  Specifies the resources used to actively manage an instance group.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceTemplateName'
                                      description: |
                                        Output only. The name of the Instance Template used for the Managed Instance Group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerName'
                                      description: |
                                        Output only. The name of the Instance Group Manager for this group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerUri'
                                      description: |
                                        Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                              - !ruby/object:Api::Type::Array
                                name: 'accelerators'
                                description: |
                                  Optional. The Compute Engine accelerator configuration for these instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'acceleratorTypeUri'
                                      description: |
                                        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'acceleratorCount'
                                      description: |
                                        The number of the accelerator cards of this type exposed to this instance.
                              - !ruby/object:Api::Type::String
                                name: 'minCpuPlatform'
                                description: |
                                  Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                              - !ruby/object:Api::Type::Integer
                                name: 'minNumInstances'
                                description: |
                                  Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'instanceFlexibilityPolicy'
                                description: |
                                  Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionList'
                                      description: |
                                        Optional. List of instance selection options that the group will use when creating new VMs.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'machineTypes'
                                            description: |
                                              Optional. Full machine-type names, e.g. "n1-standard-16".
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Integer
                                            name: 'rank'
                                            description: |
                                              Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionResults'
                                      description: |
                                        Output only. A list of instance selection results in the group.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'machineType'
                                            description: |
                                              Output only. Full machine-type names, e.g. "n1-standard-16".
                                          - !ruby/object:Api::Type::Integer
                                            name: 'vmCount'
                                            description: |
                                              Output only. Number of VM provisioned with the machine_type.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'startupConfig'
                                description: |
                                  Configuration to handle the startup of instances during cluster create and update process.
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'requiredRegistrationFraction'
                                      description: |
                                        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'secondaryWorkerConfig'
                          description: |
                            The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'numInstances'
                                description: |
                                  Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                              - !ruby/object:Api::Type::Array
                                name: 'instanceNames'
                                description: |
                                  Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'instanceReferences'
                                description: |
                                  Output only. List of references to Compute Engine instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceName'
                                      description: |
                                        The user-friendly name of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceId'
                                      description: |
                                        The unique identifier of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicKey'
                                      description: |
                                        The public RSA key used for sharing data with this instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicEciesKey'
                                      description: |
                                        The public ECIES key used for sharing data with this instance.
                              - !ruby/object:Api::Type::String
                                name: 'imageUri'
                                description: |
                                  Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                              - !ruby/object:Api::Type::String
                                name: 'machineTypeUri'
                                description: |
                                  Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'diskConfig'
                                description: |
                                  Specifies the config of disk options for a group of VM instances.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'bootDiskType'
                                      description: |
                                        Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'bootDiskSizeGb'
                                      description: |
                                        Optional. Size in GB of the boot disk (default is 500GB).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'numLocalSsds'
                                      description: |
                                        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                    - !ruby/object:Api::Type::String
                                      name: 'localSsdInterface'
                                      description: |
                                        Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                              - !ruby/object:Api::Type::Boolean
                                name: 'isPreemptible'
                                description: |
                                  Output only. Specifies that this instance group contains preemptible instances.
                              - !ruby/object:Api::Type::Enum
                                name: 'preemptibility'
                                description: |
                                  Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                values:
                                  - :PREEMPTIBILITY_UNSPECIFIED
                                  - :NON_PREEMPTIBLE
                                  - :PREEMPTIBLE
                                  - :SPOT
                              - !ruby/object:Api::Type::NestedObject
                                name: 'managedGroupConfig'
                                description: |
                                  Specifies the resources used to actively manage an instance group.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceTemplateName'
                                      description: |
                                        Output only. The name of the Instance Template used for the Managed Instance Group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerName'
                                      description: |
                                        Output only. The name of the Instance Group Manager for this group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerUri'
                                      description: |
                                        Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                              - !ruby/object:Api::Type::Array
                                name: 'accelerators'
                                description: |
                                  Optional. The Compute Engine accelerator configuration for these instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'acceleratorTypeUri'
                                      description: |
                                        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'acceleratorCount'
                                      description: |
                                        The number of the accelerator cards of this type exposed to this instance.
                              - !ruby/object:Api::Type::String
                                name: 'minCpuPlatform'
                                description: |
                                  Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                              - !ruby/object:Api::Type::Integer
                                name: 'minNumInstances'
                                description: |
                                  Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'instanceFlexibilityPolicy'
                                description: |
                                  Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionList'
                                      description: |
                                        Optional. List of instance selection options that the group will use when creating new VMs.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'machineTypes'
                                            description: |
                                              Optional. Full machine-type names, e.g. "n1-standard-16".
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Integer
                                            name: 'rank'
                                            description: |
                                              Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionResults'
                                      description: |
                                        Output only. A list of instance selection results in the group.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'machineType'
                                            description: |
                                              Output only. Full machine-type names, e.g. "n1-standard-16".
                                          - !ruby/object:Api::Type::Integer
                                            name: 'vmCount'
                                            description: |
                                              Output only. Number of VM provisioned with the machine_type.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'startupConfig'
                                description: |
                                  Configuration to handle the startup of instances during cluster create and update process.
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'requiredRegistrationFraction'
                                      description: |
                                        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'softwareConfig'
                          description: |
                            Specifies the selection and config of software inside the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'imageVersion'
                                description: |
                                  Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'properties'
                                description: |
                                  Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
                                properties:
                                  - !ruby/object:Api::Type::String
                                    name: 'additionalProperties'
                                    description: |
                                      
                              - !ruby/object:Api::Type::Array
                                name: 'optionalComponents'
                                description: |
                                  Optional. The set of components to activate on the cluster.
                                item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'initializationActions'
                          description: |
                            Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi 
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::String
                                name: 'executableFile'
                                description: |
                                  Required. Cloud Storage URI of executable file.
                              - !ruby/object:Api::Type::String
                                name: 'executionTimeout'
                                description: |
                                  Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'encryptionConfig'
                          description: |
                            Encryption settings for the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'gcePdKmsKeyName'
                                description: |
                                  Optional. The Cloud KMS key resource name to use for persistent disk encryption for all instances in the cluster. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.
                              - !ruby/object:Api::Type::String
                                name: 'kmsKey'
                                description: |
                                  Optional. The Cloud KMS key resource name to use for cluster persistent disk and job argument encryption. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.When this key resource name is provided, the following job arguments of the following job types submitted to the cluster are encrypted using CMEK: FlinkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/FlinkJob) HadoopJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/HadoopJob) SparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkJob) SparkRJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkRJob) PySparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/PySparkJob) SparkSqlJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkSqlJob) scriptVariables and queryList.queries HiveJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/HiveJob) scriptVariables and queryList.queries PigJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PigJob) scriptVariables and queryList.queries PrestoJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PrestoJob) scriptVariables and queryList.queries
                        - !ruby/object:Api::Type::NestedObject
                          name: 'autoscalingConfig'
                          description: |
                            Autoscaling Policy config associated with the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'policyUri'
                                description: |
                                  Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'securityConfig'
                          description: |
                            Security related configuration, including encryption, Kerberos, etc.
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'kerberosConfig'
                                description: |
                                  Specifies Kerberos related configuration.
                                properties:
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableKerberos'
                                      description: |
                                        Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
                                    - !ruby/object:Api::Type::String
                                      name: 'rootPrincipalPasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
                                    - !ruby/object:Api::Type::String
                                      name: 'kmsKeyUri'
                                      description: |
                                        Optional. The URI of the KMS key used to encrypt sensitive files.
                                    - !ruby/object:Api::Type::String
                                      name: 'keystoreUri'
                                      description: |
                                        Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
                                    - !ruby/object:Api::Type::String
                                      name: 'truststoreUri'
                                      description: |
                                        Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
                                    - !ruby/object:Api::Type::String
                                      name: 'keystorePasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
                                    - !ruby/object:Api::Type::String
                                      name: 'keyPasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
                                    - !ruby/object:Api::Type::String
                                      name: 'truststorePasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustRealm'
                                      description: |
                                        Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustKdc'
                                      description: |
                                        Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustAdminServer'
                                      description: |
                                        Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustSharedPasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
                                    - !ruby/object:Api::Type::String
                                      name: 'kdcDbKeyUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'tgtLifetimeHours'
                                      description: |
                                        Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
                                    - !ruby/object:Api::Type::String
                                      name: 'realm'
                                      description: |
                                        Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'identityConfig'
                                description: |
                                  Identity related configuration, including service account based secure multi-tenancy user mappings.
                                properties:
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'userServiceAccountMapping'
                                      description: |
                                        Required. Map of user to service account.
                                      properties:
                                        - !ruby/object:Api::Type::String
                                          name: 'additionalProperties'
                                          description: |
                                            
                        - !ruby/object:Api::Type::NestedObject
                          name: 'lifecycleConfig'
                          description: |
                            Specifies the cluster auto-delete schedule configuration.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'idleDeleteTtl'
                                description: |
                                  Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                              - !ruby/object:Api::Type::String
                                name: 'autoDeleteTime'
                                description: |
                                  Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                              - !ruby/object:Api::Type::String
                                name: 'autoDeleteTtl'
                                description: |
                                  Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                              - !ruby/object:Api::Type::String
                                name: 'idleStartTime'
                                description: |
                                  Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'endpointConfig'
                          description: |
                            Endpoint config for this cluster
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'httpPorts'
                                description: |
                                  Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.
                                properties:
                                  - !ruby/object:Api::Type::String
                                    name: 'additionalProperties'
                                    description: |
                                      
                              - !ruby/object:Api::Type::Boolean
                                name: 'enableHttpPortAccess'
                                description: |
                                  Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'metastoreConfig'
                          description: |
                            Specifies a Metastore configuration.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'dataprocMetastoreService'
                                description: |
                                  Required. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]
                        - !ruby/object:Api::Type::NestedObject
                          name: 'gkeClusterConfig'
                          description: |
                            The cluster's GKE config.
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'namespacedGkeDeploymentTarget'
                                description: |
                                  Deprecated. Used only for the deprecated beta. A full, namespace-isolated deployment target for an existing GKE cluster.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'targetGkeCluster'
                                      description: |
                                        Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
                                    - !ruby/object:Api::Type::String
                                      name: 'clusterNamespace'
                                      description: |
                                        Optional. A namespace within the GKE cluster to deploy into.
                              - !ruby/object:Api::Type::String
                                name: 'gkeClusterTarget'
                                description: |
                                  Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
                              - !ruby/object:Api::Type::Array
                                name: 'nodePoolTarget'
                                description: |
                                  Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'nodePool'
                                      description: |
                                        Required. The target GKE node pool. Format: 'projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'
                                    - !ruby/object:Api::Type::Array
                                      name: 'roles'
                                      description: |
                                        Required. The roles associated with the GKE node pool.
                                      item_type: Api::Type::String
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'nodePoolConfig'
                                      description: |
                                        The configuration of a GKE node pool used by a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/concepts/jobs/dataproc-gke#create-a-dataproc-on-gke-cluster).
                                      properties:
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'config'
                                            description: |
                                              Parameters that describe cluster nodes.
                                            properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'machineType'
                                                  description: |
                                                    Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'localSsdCount'
                                                  description: |
                                                    Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
                                                - !ruby/object:Api::Type::Boolean
                                                  name: 'preemptible'
                                                  description: |
                                                    Optional. Whether the nodes are created as legacy preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
                                                - !ruby/object:Api::Type::Array
                                                  name: 'accelerators'
                                                  description: |
                                                    Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
                                                  item_type: !ruby/object:Api::Type::NestedObject
                                                    properties:
                                                      - !ruby/object:Api::Type::String
                                                        name: 'acceleratorCount'
                                                        description: |
                                                          The number of accelerator cards exposed to an instance.
                                                      - !ruby/object:Api::Type::String
                                                        name: 'acceleratorType'
                                                        description: |
                                                          The accelerator type resource namename (see GPUs on Compute Engine).
                                                      - !ruby/object:Api::Type::String
                                                        name: 'gpuPartitionSize'
                                                        description: |
                                                          Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
                                                - !ruby/object:Api::Type::String
                                                  name: 'minCpuPlatform'
                                                  description: |
                                                    Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as "Intel Haswell"` or Intel Sandy Bridge".
                                                - !ruby/object:Api::Type::String
                                                  name: 'bootDiskKmsKey'
                                                  description: |
                                                    Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}
                                                - !ruby/object:Api::Type::Boolean
                                                  name: 'spot'
                                                  description: |
                                                    Optional. Whether the nodes are created as Spot VM instances (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
                                          - !ruby/object:Api::Type::Array
                                            name: 'locations'
                                            description: |
                                              Optional. The list of Compute Engine zones (https://cloud.google.com/compute/docs/zones#available) where node pool nodes associated with a Dataproc on GKE virtual cluster will be located.Note: All node pools associated with a virtual cluster must be located in the same region as the virtual cluster, and they must be located in the same zone within that region.If a location is not specified during node pool creation, Dataproc on GKE will choose the zone.
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'autoscaling'
                                            description: |
                                              GkeNodePoolAutoscaling contains information the cluster autoscaler needs to adjust the size of the node pool to the current cluster usage.
                                            properties:
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'minNodeCount'
                                                  description: |
                                                    The minimum number of nodes in the node pool. Must be >= 0 and <= max_node_count.
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'maxNodeCount'
                                                  description: |
                                                    The maximum number of nodes in the node pool. Must be >= min_node_count, and must be > 0. Note: Quota must be sufficient to scale up the cluster.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'dataprocMetricConfig'
                          description: |
                            Dataproc metric config.
                          properties:
                              - !ruby/object:Api::Type::Array
                                name: 'metrics'
                                description: |
                                  Required. Metrics sources to enable.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::Enum
                                      name: 'metricSource'
                                      description: |
                                        Required. A standard set of metrics is collected unless metricOverrides are specified for the metric source (see Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) for more information).
                                      values:
                                        - :METRIC_SOURCE_UNSPECIFIED
                                        - :MONITORING_AGENT_DEFAULTS
                                        - :HDFS
                                        - :SPARK
                                        - :YARN
                                        - :SPARK_HISTORY_SERVER
                                        - :HIVESERVER2
                                        - :HIVEMETASTORE
                                        - :FLINK
                                    - !ruby/object:Api::Type::Array
                                      name: 'metricOverrides'
                                      description: |
                                        Optional. Specify one or more Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) to collect for the metric course (for the SPARK metric source (any Spark metric (https://spark.apache.org/docs/latest/monitoring.html#metrics) can be specified).Provide metrics in the following format: METRIC_SOURCE: INSTANCE:GROUP:METRIC Use camelcase as appropriate.Examples: yarn:ResourceManager:QueueMetrics:AppsCompleted spark:driver:DAGScheduler:job.allJobs sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed hiveserver2:JVM:Memory:NonHeapMemoryUsage.used Notes: Only the specified overridden metrics are collected for the metric source. For example, if one or more spark:executive metrics are listed as metric overrides, other SPARK metrics are not collected. The collection of the metrics for other enabled custom metric sources is unaffected. For example, if both SPARK andd YARN metric sources are enabled, and overrides are provided for Spark metrics only, all YARN metrics are collected.
                                      item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'auxiliaryNodeGroups'
                          description: |
                            Optional. The node group settings.
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'nodeGroup'
                                description: |
                                  Dataproc Node Group. The Dataproc NodeGroup resource is not related to the Dataproc NodeGroupAffinity resource.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'name'
                                      description: |
                                        The Node group resource name (https://aip.dev/122).
                                    - !ruby/object:Api::Type::Array
                                      name: 'roles'
                                      description: |
                                        Required. Node group roles.
                                      item_type: Api::Type::String
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'nodeGroupConfig'
                                      description: |
                                        The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                                      properties:
                                          - !ruby/object:Api::Type::Integer
                                            name: 'numInstances'
                                            description: |
                                              Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                                          - !ruby/object:Api::Type::Array
                                            name: 'instanceNames'
                                            description: |
                                              Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Array
                                            name: 'instanceReferences'
                                            description: |
                                              Output only. List of references to Compute Engine instances.
                                            item_type: !ruby/object:Api::Type::NestedObject
                                              properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceName'
                                                  description: |
                                                    The user-friendly name of the Compute Engine instance.
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceId'
                                                  description: |
                                                    The unique identifier of the Compute Engine instance.
                                                - !ruby/object:Api::Type::String
                                                  name: 'publicKey'
                                                  description: |
                                                    The public RSA key used for sharing data with this instance.
                                                - !ruby/object:Api::Type::String
                                                  name: 'publicEciesKey'
                                                  description: |
                                                    The public ECIES key used for sharing data with this instance.
                                          - !ruby/object:Api::Type::String
                                            name: 'imageUri'
                                            description: |
                                              Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                                          - !ruby/object:Api::Type::String
                                            name: 'machineTypeUri'
                                            description: |
                                              Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'diskConfig'
                                            description: |
                                              Specifies the config of disk options for a group of VM instances.
                                            properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'bootDiskType'
                                                  description: |
                                                    Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'bootDiskSizeGb'
                                                  description: |
                                                    Optional. Size in GB of the boot disk (default is 500GB).
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'numLocalSsds'
                                                  description: |
                                                    Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                                - !ruby/object:Api::Type::String
                                                  name: 'localSsdInterface'
                                                  description: |
                                                    Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                                          - !ruby/object:Api::Type::Boolean
                                            name: 'isPreemptible'
                                            description: |
                                              Output only. Specifies that this instance group contains preemptible instances.
                                          - !ruby/object:Api::Type::Enum
                                            name: 'preemptibility'
                                            description: |
                                              Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                            values:
                                              - :PREEMPTIBILITY_UNSPECIFIED
                                              - :NON_PREEMPTIBLE
                                              - :PREEMPTIBLE
                                              - :SPOT
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'managedGroupConfig'
                                            description: |
                                              Specifies the resources used to actively manage an instance group.
                                            properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceTemplateName'
                                                  description: |
                                                    Output only. The name of the Instance Template used for the Managed Instance Group.
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceGroupManagerName'
                                                  description: |
                                                    Output only. The name of the Instance Group Manager for this group.
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceGroupManagerUri'
                                                  description: |
                                                    Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                                          - !ruby/object:Api::Type::Array
                                            name: 'accelerators'
                                            description: |
                                              Optional. The Compute Engine accelerator configuration for these instances.
                                            item_type: !ruby/object:Api::Type::NestedObject
                                              properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'acceleratorTypeUri'
                                                  description: |
                                                    Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'acceleratorCount'
                                                  description: |
                                                    The number of the accelerator cards of this type exposed to this instance.
                                          - !ruby/object:Api::Type::String
                                            name: 'minCpuPlatform'
                                            description: |
                                              Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                                          - !ruby/object:Api::Type::Integer
                                            name: 'minNumInstances'
                                            description: |
                                              Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'instanceFlexibilityPolicy'
                                            description: |
                                              Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                            properties:
                                                - !ruby/object:Api::Type::Array
                                                  name: 'instanceSelectionList'
                                                  description: |
                                                    Optional. List of instance selection options that the group will use when creating new VMs.
                                                  item_type: !ruby/object:Api::Type::NestedObject
                                                    properties:
                                                      - !ruby/object:Api::Type::Array
                                                        name: 'machineTypes'
                                                        description: |
                                                          Optional. Full machine-type names, e.g. "n1-standard-16".
                                                        item_type: Api::Type::String
                                                      - !ruby/object:Api::Type::Integer
                                                        name: 'rank'
                                                        description: |
                                                          Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                                - !ruby/object:Api::Type::Array
                                                  name: 'instanceSelectionResults'
                                                  description: |
                                                    Output only. A list of instance selection results in the group.
                                                  item_type: !ruby/object:Api::Type::NestedObject
                                                    properties:
                                                      - !ruby/object:Api::Type::String
                                                        name: 'machineType'
                                                        description: |
                                                          Output only. Full machine-type names, e.g. "n1-standard-16".
                                                      - !ruby/object:Api::Type::Integer
                                                        name: 'vmCount'
                                                        description: |
                                                          Output only. Number of VM provisioned with the machine_type.
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'startupConfig'
                                            description: |
                                              Configuration to handle the startup of instances during cluster create and update process.
                                            properties:
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'requiredRegistrationFraction'
                                                  description: |
                                                    Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'labels'
                                      description: |
                                        Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labelsn.
                                      properties:
                                        - !ruby/object:Api::Type::String
                                          name: 'additionalProperties'
                                          description: |
                                            
                              - !ruby/object:Api::Type::String
                                name: 'nodeGroupId'
                                description: |
                                  Optional. A node group ID. Generated if not specified.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'labels'
                    description: |
                      Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
            - !ruby/object:Api::Type::NestedObject
              name: 'clusterSelector'
              description: |
                A selector that chooses target cluster for jobs based on metadata.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'zone'
                    description: |
                      Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'clusterLabels'
                    description: |
                      Required. The cluster labels. Cluster must have all labels to match.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
      - !ruby/object:Api::Type::Array
        name: 'jobs'
        description: |
          Required. The Directed Acyclic Graph of Jobs to submit.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'stepId'
              description: |
                Required. The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
            - !ruby/object:Api::Type::NestedObject
              name: 'hadoopJob'
              description: |
                A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainJarFileUri'
                    description: |
                      The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
                  - !ruby/object:Api::Type::String
                    name: 'mainClass'
                    description: |
                      The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkJob'
              description: |
                A Dataproc job for running Apache Spark (https://spark.apache.org/) applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainJarFileUri'
                    description: |
                      The HCFS URI of the jar file that contains the main class.
                  - !ruby/object:Api::Type::String
                    name: 'mainClass'
                    description: |
                      The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in SparkJob.jar_file_uris.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'pysparkJob'
              description: |
                A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainPythonFileUri'
                    description: |
                      Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'pythonFileUris'
                    description: |
                      Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'hiveJob'
              description: |
                A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains Hive queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'scriptVariables'
                    description: |
                      Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'pigJob'
              description: |
                A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains the Pig queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'scriptVariables'
                    description: |
                      Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkRJob'
              description: |
                A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainRFileUri'
                    description: |
                      Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkSqlJob'
              description: |
                A Dataproc job for running Apache Spark SQL (https://spark.apache.org/sql/) queries.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains SQL queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'scriptVariables'
                    description: |
                      Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API might be overwritten.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'prestoJob'
              description: |
                A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains SQL queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::String
                    name: 'outputFormat'
                    description: |
                      Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
                  - !ruby/object:Api::Type::Array
                    name: 'clientTags'
                    description: |
                      Optional. Presto client tags to attach to this query
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'trinoJob'
              description: |
                A Dataproc job for running Trino (https://trino.io/) queries. IMPORTANT: The Dataproc Trino Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/trino) must be enabled when the cluster is created to submit a Trino job to the cluster.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains SQL queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::String
                    name: 'outputFormat'
                    description: |
                      Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats
                  - !ruby/object:Api::Type::Array
                    name: 'clientTags'
                    description: |
                      Optional. Trino client tags to attach to this query
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values. Used to set Trino session properties (https://trino.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Trino CLI
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'flinkJob'
              description: |
                A Dataproc job for running Apache Flink applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainJarFileUri'
                    description: |
                      The HCFS URI of the jar file that contains the main class.
                  - !ruby/object:Api::Type::String
                    name: 'mainClass'
                    description: |
                      The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jarFileUris.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Flink driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::String
                    name: 'savepointUri'
                    description: |
                      Optional. HCFS URI of the savepoint, which contains the last saved progress for starting the current job.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Flink. Properties that conflict with values set by the Dataproc API might beoverwritten. Can include properties set in/etc/flink/conf/flink-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'labels'
              description: |
                Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'scheduling'
              description: |
                Job scheduling options.
              properties:
                  - !ruby/object:Api::Type::Integer
                    name: 'maxFailuresPerHour'
                    description: |
                      Optional. Maximum number of times per hour a driver can be restarted as a result of driver exiting with non-zero code before job is reported failed.A job might be reported as thrashing if the driver exits with a non-zero code four times within a 10-minute window.Maximum value is 10.Note: This restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
                  - !ruby/object:Api::Type::Integer
                    name: 'maxFailuresTotal'
                    description: |
                      Optional. Maximum total number of times a driver can be restarted as a result of the driver exiting with a non-zero code. After the maximum number is reached, the job will be reported as failed.Maximum value is 240.Note: Currently, this restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
            - !ruby/object:Api::Type::Array
              name: 'prerequisiteStepIds'
              description: |
                Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
              item_type: Api::Type::String
      - !ruby/object:Api::Type::Array
        name: 'parameters'
        description: |
          Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.
            - !ruby/object:Api::Type::Array
              name: 'fields'
              description: |
                Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels'key' placement.clusterSelector.clusterLabels'key' placement.managedCluster.labels'key' placement.clusterSelector.clusterLabels'key' jobs'step-id'.labels'key' Jobs in the jobs list can be referenced by step-id: jobs'step-id'.hadoopJob.mainJarFileUri jobs'step-id'.hiveJob.queryFileUri jobs'step-id'.pySparkJob.mainPythonFileUri jobs'step-id'.hadoopJob.jarFileUris0 jobs'step-id'.hadoopJob.archiveUris0 jobs'step-id'.hadoopJob.fileUris0 jobs'step-id'.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs'step-id'.sparkJob.args0 Other examples: jobs'step-id'.hadoopJob.properties'key' jobs'step-id'.hadoopJob.args0 jobs'step-id'.hiveJob.scriptVariables'key' jobs'step-id'.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs'step-id'.sparkJob.args
              item_type: Api::Type::String
            - !ruby/object:Api::Type::String
              name: 'description'
              description: |
                Optional. Brief description of the parameter. Must not exceed 1024 characters.
            - !ruby/object:Api::Type::NestedObject
              name: 'validation'
              description: |
                Configuration for parameter validation.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'regex'
                    description: |
                      Validation based on regular expressions.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'regexes'
                          description: |
                            Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'values'
                    description: |
                      Validation based on a list of allowed values.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'values'
                          description: |
                            Required. List of allowed values for the parameter.
                          item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'dagTimeout'
        description: |
          Optional. Timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10 minutes ("600s") to 24 hours ("86400s"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a managed cluster, the cluster is deleted.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionConfig'
        description: |
          Encryption settings for encrypting workflow template job arguments.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKey'
              description: |
                Optional. The Cloud KMS key name to use for encrypting workflow template job arguments.When this this key is provided, the following workflow template job arguments (https://cloud.google.com/dataproc/docs/concepts/workflows/use-workflows#adding_jobs_to_a_template), if present, are CMEK encrypted (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_workflow_template_data): FlinkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/FlinkJob) HadoopJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/HadoopJob) SparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkJob) SparkRJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkRJob) PySparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/PySparkJob) SparkSqlJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkSqlJob) scriptVariables and queryList.queries HiveJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/HiveJob) scriptVariables and queryList.queries PigJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PigJob) scriptVariables and queryList.queries PrestoJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PrestoJob) scriptVariables and queryList.queries
  


    
  - !ruby/object:Api::Resource
    name: ProjectLocationWorkflowTemplate
    base_url: '{{+parent}}/workflowTemplates'
    self_link: '{{+name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/dataproc/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A Dataproc workflow template resource.
    properties:
  
      - !ruby/object:Api::Type::String
        name: 'id'
        description: |
          
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
      - !ruby/object:Api::Type::Integer
        name: 'version'
        description: |
          Optional. Used to perform a consistent read-modify-write.This field should be left blank for a CreateWorkflowTemplate request. It is required for an UpdateWorkflowTemplate request, and must match the current server version. A typical update template flow would fetch the current template with a GetWorkflowTemplate request, which will return the current template with the version field filled in with the current server version. The user updates other fields in the template, then returns it as part of the UpdateWorkflowTemplate request.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. The time template was created.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. The time template was last updated.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::NestedObject
        name: 'placement'
        description: |
          Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
        properties:
            - !ruby/object:Api::Type::NestedObject
              name: 'managedCluster'
              description: |
                Cluster that is managed by the workflow.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'clusterName'
                    description: |
                      Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'config'
                    description: |
                      The cluster config.
                    properties:
                        - !ruby/object:Api::Type::String
                          name: 'configBucket'
                          description: |
                            Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
                        - !ruby/object:Api::Type::String
                          name: 'tempBucket'
                          description: |
                            Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'gceClusterConfig'
                          description: |
                            Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'zoneUri'
                                description: |
                                  Optional. The Compute Engine zone where the Dataproc cluster will be located. If omitted, the service will pick a zone in the cluster's Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] [zone]
                              - !ruby/object:Api::Type::String
                                name: 'networkUri'
                                description: |
                                  Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default projects/[project_id]/global/networks/default default
                              - !ruby/object:Api::Type::String
                                name: 'subnetworkUri'
                                description: |
                                  Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/[region]/subnetworks/sub0 projects/[project_id]/regions/[region]/subnetworks/sub0 sub0
                              - !ruby/object:Api::Type::Boolean
                                name: 'internalIpOnly'
                                description: |
                                  Optional. This setting applies to subnetwork-enabled networks. It is set to true by default in clusters created with image versions 2.2.x.When set to true: All cluster VMs have internal IP addresses. Google Private Access (https://cloud.google.com/vpc/docs/private-google-access) must be enabled to access Dataproc and other Google Cloud APIs. Off-cluster dependencies must be configured to be accessible without external IP addresses.When set to false: Cluster VMs are not restricted to internal IP addresses. Ephemeral external IP addresses are assigned to each cluster VM.
                              - !ruby/object:Api::Type::Enum
                                name: 'privateIpv6GoogleAccess'
                                description: |
                                  Optional. The type of IPv6 access for a cluster.
                                values:
                                  - :PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED
                                  - :INHERIT_FROM_SUBNETWORK
                                  - :OUTBOUND
                                  - :BIDIRECTIONAL
                              - !ruby/object:Api::Type::String
                                name: 'serviceAccount'
                                description: |
                                  Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
                              - !ruby/object:Api::Type::Array
                                name: 'serviceAccountScopes'
                                description: |
                                  Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'tags'
                                description: |
                                  The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::NestedObject
                                name: 'metadata'
                                description: |
                                  Optional. The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
                                properties:
                                  - !ruby/object:Api::Type::String
                                    name: 'additionalProperties'
                                    description: |
                                      
                              - !ruby/object:Api::Type::NestedObject
                                name: 'reservationAffinity'
                                description: |
                                  Reservation Affinity for consuming Zonal reservation.
                                properties:
                                    - !ruby/object:Api::Type::Enum
                                      name: 'consumeReservationType'
                                      description: |
                                        Optional. Type of reservation to consume
                                      values:
                                        - :TYPE_UNSPECIFIED
                                        - :NO_RESERVATION
                                        - :ANY_RESERVATION
                                        - :SPECIFIC_RESERVATION
                                    - !ruby/object:Api::Type::String
                                      name: 'key'
                                      description: |
                                        Optional. Corresponds to the label key of reservation resource.
                                    - !ruby/object:Api::Type::Array
                                      name: 'values'
                                      description: |
                                        Optional. Corresponds to the label values of reservation resource.
                                      item_type: Api::Type::String
                              - !ruby/object:Api::Type::NestedObject
                                name: 'nodeGroupAffinity'
                                description: |
                                  Node Group Affinity for clusters using sole-tenant node groups. The Dataproc NodeGroupAffinity resource is not related to the Dataproc NodeGroup resource.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'nodeGroupUri'
                                      description: |
                                        Required. The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 node-group-1
                              - !ruby/object:Api::Type::NestedObject
                                name: 'shieldedInstanceConfig'
                                description: |
                                  Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
                                properties:
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableSecureBoot'
                                      description: |
                                        Optional. Defines whether instances have Secure Boot enabled.
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableVtpm'
                                      description: |
                                        Optional. Defines whether instances have the vTPM enabled.
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableIntegrityMonitoring'
                                      description: |
                                        Optional. Defines whether instances have integrity monitoring enabled.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'confidentialInstanceConfig'
                                description: |
                                  Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)
                                properties:
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableConfidentialCompute'
                                      description: |
                                        Optional. Defines whether the instance should have confidential compute enabled.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'masterConfig'
                          description: |
                            The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'numInstances'
                                description: |
                                  Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                              - !ruby/object:Api::Type::Array
                                name: 'instanceNames'
                                description: |
                                  Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'instanceReferences'
                                description: |
                                  Output only. List of references to Compute Engine instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceName'
                                      description: |
                                        The user-friendly name of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceId'
                                      description: |
                                        The unique identifier of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicKey'
                                      description: |
                                        The public RSA key used for sharing data with this instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicEciesKey'
                                      description: |
                                        The public ECIES key used for sharing data with this instance.
                              - !ruby/object:Api::Type::String
                                name: 'imageUri'
                                description: |
                                  Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                              - !ruby/object:Api::Type::String
                                name: 'machineTypeUri'
                                description: |
                                  Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'diskConfig'
                                description: |
                                  Specifies the config of disk options for a group of VM instances.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'bootDiskType'
                                      description: |
                                        Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'bootDiskSizeGb'
                                      description: |
                                        Optional. Size in GB of the boot disk (default is 500GB).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'numLocalSsds'
                                      description: |
                                        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                    - !ruby/object:Api::Type::String
                                      name: 'localSsdInterface'
                                      description: |
                                        Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                              - !ruby/object:Api::Type::Boolean
                                name: 'isPreemptible'
                                description: |
                                  Output only. Specifies that this instance group contains preemptible instances.
                              - !ruby/object:Api::Type::Enum
                                name: 'preemptibility'
                                description: |
                                  Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                values:
                                  - :PREEMPTIBILITY_UNSPECIFIED
                                  - :NON_PREEMPTIBLE
                                  - :PREEMPTIBLE
                                  - :SPOT
                              - !ruby/object:Api::Type::NestedObject
                                name: 'managedGroupConfig'
                                description: |
                                  Specifies the resources used to actively manage an instance group.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceTemplateName'
                                      description: |
                                        Output only. The name of the Instance Template used for the Managed Instance Group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerName'
                                      description: |
                                        Output only. The name of the Instance Group Manager for this group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerUri'
                                      description: |
                                        Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                              - !ruby/object:Api::Type::Array
                                name: 'accelerators'
                                description: |
                                  Optional. The Compute Engine accelerator configuration for these instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'acceleratorTypeUri'
                                      description: |
                                        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'acceleratorCount'
                                      description: |
                                        The number of the accelerator cards of this type exposed to this instance.
                              - !ruby/object:Api::Type::String
                                name: 'minCpuPlatform'
                                description: |
                                  Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                              - !ruby/object:Api::Type::Integer
                                name: 'minNumInstances'
                                description: |
                                  Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'instanceFlexibilityPolicy'
                                description: |
                                  Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionList'
                                      description: |
                                        Optional. List of instance selection options that the group will use when creating new VMs.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'machineTypes'
                                            description: |
                                              Optional. Full machine-type names, e.g. "n1-standard-16".
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Integer
                                            name: 'rank'
                                            description: |
                                              Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionResults'
                                      description: |
                                        Output only. A list of instance selection results in the group.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'machineType'
                                            description: |
                                              Output only. Full machine-type names, e.g. "n1-standard-16".
                                          - !ruby/object:Api::Type::Integer
                                            name: 'vmCount'
                                            description: |
                                              Output only. Number of VM provisioned with the machine_type.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'startupConfig'
                                description: |
                                  Configuration to handle the startup of instances during cluster create and update process.
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'requiredRegistrationFraction'
                                      description: |
                                        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'workerConfig'
                          description: |
                            The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'numInstances'
                                description: |
                                  Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                              - !ruby/object:Api::Type::Array
                                name: 'instanceNames'
                                description: |
                                  Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'instanceReferences'
                                description: |
                                  Output only. List of references to Compute Engine instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceName'
                                      description: |
                                        The user-friendly name of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceId'
                                      description: |
                                        The unique identifier of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicKey'
                                      description: |
                                        The public RSA key used for sharing data with this instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicEciesKey'
                                      description: |
                                        The public ECIES key used for sharing data with this instance.
                              - !ruby/object:Api::Type::String
                                name: 'imageUri'
                                description: |
                                  Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                              - !ruby/object:Api::Type::String
                                name: 'machineTypeUri'
                                description: |
                                  Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'diskConfig'
                                description: |
                                  Specifies the config of disk options for a group of VM instances.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'bootDiskType'
                                      description: |
                                        Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'bootDiskSizeGb'
                                      description: |
                                        Optional. Size in GB of the boot disk (default is 500GB).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'numLocalSsds'
                                      description: |
                                        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                    - !ruby/object:Api::Type::String
                                      name: 'localSsdInterface'
                                      description: |
                                        Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                              - !ruby/object:Api::Type::Boolean
                                name: 'isPreemptible'
                                description: |
                                  Output only. Specifies that this instance group contains preemptible instances.
                              - !ruby/object:Api::Type::Enum
                                name: 'preemptibility'
                                description: |
                                  Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                values:
                                  - :PREEMPTIBILITY_UNSPECIFIED
                                  - :NON_PREEMPTIBLE
                                  - :PREEMPTIBLE
                                  - :SPOT
                              - !ruby/object:Api::Type::NestedObject
                                name: 'managedGroupConfig'
                                description: |
                                  Specifies the resources used to actively manage an instance group.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceTemplateName'
                                      description: |
                                        Output only. The name of the Instance Template used for the Managed Instance Group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerName'
                                      description: |
                                        Output only. The name of the Instance Group Manager for this group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerUri'
                                      description: |
                                        Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                              - !ruby/object:Api::Type::Array
                                name: 'accelerators'
                                description: |
                                  Optional. The Compute Engine accelerator configuration for these instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'acceleratorTypeUri'
                                      description: |
                                        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'acceleratorCount'
                                      description: |
                                        The number of the accelerator cards of this type exposed to this instance.
                              - !ruby/object:Api::Type::String
                                name: 'minCpuPlatform'
                                description: |
                                  Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                              - !ruby/object:Api::Type::Integer
                                name: 'minNumInstances'
                                description: |
                                  Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'instanceFlexibilityPolicy'
                                description: |
                                  Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionList'
                                      description: |
                                        Optional. List of instance selection options that the group will use when creating new VMs.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'machineTypes'
                                            description: |
                                              Optional. Full machine-type names, e.g. "n1-standard-16".
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Integer
                                            name: 'rank'
                                            description: |
                                              Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionResults'
                                      description: |
                                        Output only. A list of instance selection results in the group.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'machineType'
                                            description: |
                                              Output only. Full machine-type names, e.g. "n1-standard-16".
                                          - !ruby/object:Api::Type::Integer
                                            name: 'vmCount'
                                            description: |
                                              Output only. Number of VM provisioned with the machine_type.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'startupConfig'
                                description: |
                                  Configuration to handle the startup of instances during cluster create and update process.
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'requiredRegistrationFraction'
                                      description: |
                                        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'secondaryWorkerConfig'
                          description: |
                            The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'numInstances'
                                description: |
                                  Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                              - !ruby/object:Api::Type::Array
                                name: 'instanceNames'
                                description: |
                                  Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'instanceReferences'
                                description: |
                                  Output only. List of references to Compute Engine instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceName'
                                      description: |
                                        The user-friendly name of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceId'
                                      description: |
                                        The unique identifier of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicKey'
                                      description: |
                                        The public RSA key used for sharing data with this instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicEciesKey'
                                      description: |
                                        The public ECIES key used for sharing data with this instance.
                              - !ruby/object:Api::Type::String
                                name: 'imageUri'
                                description: |
                                  Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                              - !ruby/object:Api::Type::String
                                name: 'machineTypeUri'
                                description: |
                                  Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'diskConfig'
                                description: |
                                  Specifies the config of disk options for a group of VM instances.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'bootDiskType'
                                      description: |
                                        Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'bootDiskSizeGb'
                                      description: |
                                        Optional. Size in GB of the boot disk (default is 500GB).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'numLocalSsds'
                                      description: |
                                        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                    - !ruby/object:Api::Type::String
                                      name: 'localSsdInterface'
                                      description: |
                                        Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                              - !ruby/object:Api::Type::Boolean
                                name: 'isPreemptible'
                                description: |
                                  Output only. Specifies that this instance group contains preemptible instances.
                              - !ruby/object:Api::Type::Enum
                                name: 'preemptibility'
                                description: |
                                  Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                values:
                                  - :PREEMPTIBILITY_UNSPECIFIED
                                  - :NON_PREEMPTIBLE
                                  - :PREEMPTIBLE
                                  - :SPOT
                              - !ruby/object:Api::Type::NestedObject
                                name: 'managedGroupConfig'
                                description: |
                                  Specifies the resources used to actively manage an instance group.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceTemplateName'
                                      description: |
                                        Output only. The name of the Instance Template used for the Managed Instance Group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerName'
                                      description: |
                                        Output only. The name of the Instance Group Manager for this group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerUri'
                                      description: |
                                        Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                              - !ruby/object:Api::Type::Array
                                name: 'accelerators'
                                description: |
                                  Optional. The Compute Engine accelerator configuration for these instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'acceleratorTypeUri'
                                      description: |
                                        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'acceleratorCount'
                                      description: |
                                        The number of the accelerator cards of this type exposed to this instance.
                              - !ruby/object:Api::Type::String
                                name: 'minCpuPlatform'
                                description: |
                                  Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                              - !ruby/object:Api::Type::Integer
                                name: 'minNumInstances'
                                description: |
                                  Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'instanceFlexibilityPolicy'
                                description: |
                                  Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionList'
                                      description: |
                                        Optional. List of instance selection options that the group will use when creating new VMs.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'machineTypes'
                                            description: |
                                              Optional. Full machine-type names, e.g. "n1-standard-16".
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Integer
                                            name: 'rank'
                                            description: |
                                              Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionResults'
                                      description: |
                                        Output only. A list of instance selection results in the group.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'machineType'
                                            description: |
                                              Output only. Full machine-type names, e.g. "n1-standard-16".
                                          - !ruby/object:Api::Type::Integer
                                            name: 'vmCount'
                                            description: |
                                              Output only. Number of VM provisioned with the machine_type.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'startupConfig'
                                description: |
                                  Configuration to handle the startup of instances during cluster create and update process.
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'requiredRegistrationFraction'
                                      description: |
                                        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'softwareConfig'
                          description: |
                            Specifies the selection and config of software inside the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'imageVersion'
                                description: |
                                  Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'properties'
                                description: |
                                  Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
                                properties:
                                  - !ruby/object:Api::Type::String
                                    name: 'additionalProperties'
                                    description: |
                                      
                              - !ruby/object:Api::Type::Array
                                name: 'optionalComponents'
                                description: |
                                  Optional. The set of components to activate on the cluster.
                                item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'initializationActions'
                          description: |
                            Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi 
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::String
                                name: 'executableFile'
                                description: |
                                  Required. Cloud Storage URI of executable file.
                              - !ruby/object:Api::Type::String
                                name: 'executionTimeout'
                                description: |
                                  Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'encryptionConfig'
                          description: |
                            Encryption settings for the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'gcePdKmsKeyName'
                                description: |
                                  Optional. The Cloud KMS key resource name to use for persistent disk encryption for all instances in the cluster. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.
                              - !ruby/object:Api::Type::String
                                name: 'kmsKey'
                                description: |
                                  Optional. The Cloud KMS key resource name to use for cluster persistent disk and job argument encryption. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.When this key resource name is provided, the following job arguments of the following job types submitted to the cluster are encrypted using CMEK: FlinkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/FlinkJob) HadoopJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/HadoopJob) SparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkJob) SparkRJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkRJob) PySparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/PySparkJob) SparkSqlJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkSqlJob) scriptVariables and queryList.queries HiveJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/HiveJob) scriptVariables and queryList.queries PigJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PigJob) scriptVariables and queryList.queries PrestoJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PrestoJob) scriptVariables and queryList.queries
                        - !ruby/object:Api::Type::NestedObject
                          name: 'autoscalingConfig'
                          description: |
                            Autoscaling Policy config associated with the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'policyUri'
                                description: |
                                  Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'securityConfig'
                          description: |
                            Security related configuration, including encryption, Kerberos, etc.
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'kerberosConfig'
                                description: |
                                  Specifies Kerberos related configuration.
                                properties:
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableKerberos'
                                      description: |
                                        Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
                                    - !ruby/object:Api::Type::String
                                      name: 'rootPrincipalPasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
                                    - !ruby/object:Api::Type::String
                                      name: 'kmsKeyUri'
                                      description: |
                                        Optional. The URI of the KMS key used to encrypt sensitive files.
                                    - !ruby/object:Api::Type::String
                                      name: 'keystoreUri'
                                      description: |
                                        Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
                                    - !ruby/object:Api::Type::String
                                      name: 'truststoreUri'
                                      description: |
                                        Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
                                    - !ruby/object:Api::Type::String
                                      name: 'keystorePasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
                                    - !ruby/object:Api::Type::String
                                      name: 'keyPasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
                                    - !ruby/object:Api::Type::String
                                      name: 'truststorePasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustRealm'
                                      description: |
                                        Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustKdc'
                                      description: |
                                        Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustAdminServer'
                                      description: |
                                        Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustSharedPasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
                                    - !ruby/object:Api::Type::String
                                      name: 'kdcDbKeyUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'tgtLifetimeHours'
                                      description: |
                                        Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
                                    - !ruby/object:Api::Type::String
                                      name: 'realm'
                                      description: |
                                        Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'identityConfig'
                                description: |
                                  Identity related configuration, including service account based secure multi-tenancy user mappings.
                                properties:
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'userServiceAccountMapping'
                                      description: |
                                        Required. Map of user to service account.
                                      properties:
                                        - !ruby/object:Api::Type::String
                                          name: 'additionalProperties'
                                          description: |
                                            
                        - !ruby/object:Api::Type::NestedObject
                          name: 'lifecycleConfig'
                          description: |
                            Specifies the cluster auto-delete schedule configuration.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'idleDeleteTtl'
                                description: |
                                  Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                              - !ruby/object:Api::Type::String
                                name: 'autoDeleteTime'
                                description: |
                                  Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                              - !ruby/object:Api::Type::String
                                name: 'autoDeleteTtl'
                                description: |
                                  Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                              - !ruby/object:Api::Type::String
                                name: 'idleStartTime'
                                description: |
                                  Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'endpointConfig'
                          description: |
                            Endpoint config for this cluster
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'httpPorts'
                                description: |
                                  Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.
                                properties:
                                  - !ruby/object:Api::Type::String
                                    name: 'additionalProperties'
                                    description: |
                                      
                              - !ruby/object:Api::Type::Boolean
                                name: 'enableHttpPortAccess'
                                description: |
                                  Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'metastoreConfig'
                          description: |
                            Specifies a Metastore configuration.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'dataprocMetastoreService'
                                description: |
                                  Required. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]
                        - !ruby/object:Api::Type::NestedObject
                          name: 'gkeClusterConfig'
                          description: |
                            The cluster's GKE config.
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'namespacedGkeDeploymentTarget'
                                description: |
                                  Deprecated. Used only for the deprecated beta. A full, namespace-isolated deployment target for an existing GKE cluster.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'targetGkeCluster'
                                      description: |
                                        Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
                                    - !ruby/object:Api::Type::String
                                      name: 'clusterNamespace'
                                      description: |
                                        Optional. A namespace within the GKE cluster to deploy into.
                              - !ruby/object:Api::Type::String
                                name: 'gkeClusterTarget'
                                description: |
                                  Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
                              - !ruby/object:Api::Type::Array
                                name: 'nodePoolTarget'
                                description: |
                                  Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'nodePool'
                                      description: |
                                        Required. The target GKE node pool. Format: 'projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'
                                    - !ruby/object:Api::Type::Array
                                      name: 'roles'
                                      description: |
                                        Required. The roles associated with the GKE node pool.
                                      item_type: Api::Type::String
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'nodePoolConfig'
                                      description: |
                                        The configuration of a GKE node pool used by a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/concepts/jobs/dataproc-gke#create-a-dataproc-on-gke-cluster).
                                      properties:
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'config'
                                            description: |
                                              Parameters that describe cluster nodes.
                                            properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'machineType'
                                                  description: |
                                                    Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'localSsdCount'
                                                  description: |
                                                    Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
                                                - !ruby/object:Api::Type::Boolean
                                                  name: 'preemptible'
                                                  description: |
                                                    Optional. Whether the nodes are created as legacy preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
                                                - !ruby/object:Api::Type::Array
                                                  name: 'accelerators'
                                                  description: |
                                                    Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
                                                  item_type: !ruby/object:Api::Type::NestedObject
                                                    properties:
                                                      - !ruby/object:Api::Type::String
                                                        name: 'acceleratorCount'
                                                        description: |
                                                          The number of accelerator cards exposed to an instance.
                                                      - !ruby/object:Api::Type::String
                                                        name: 'acceleratorType'
                                                        description: |
                                                          The accelerator type resource namename (see GPUs on Compute Engine).
                                                      - !ruby/object:Api::Type::String
                                                        name: 'gpuPartitionSize'
                                                        description: |
                                                          Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
                                                - !ruby/object:Api::Type::String
                                                  name: 'minCpuPlatform'
                                                  description: |
                                                    Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as "Intel Haswell"` or Intel Sandy Bridge".
                                                - !ruby/object:Api::Type::String
                                                  name: 'bootDiskKmsKey'
                                                  description: |
                                                    Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}
                                                - !ruby/object:Api::Type::Boolean
                                                  name: 'spot'
                                                  description: |
                                                    Optional. Whether the nodes are created as Spot VM instances (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
                                          - !ruby/object:Api::Type::Array
                                            name: 'locations'
                                            description: |
                                              Optional. The list of Compute Engine zones (https://cloud.google.com/compute/docs/zones#available) where node pool nodes associated with a Dataproc on GKE virtual cluster will be located.Note: All node pools associated with a virtual cluster must be located in the same region as the virtual cluster, and they must be located in the same zone within that region.If a location is not specified during node pool creation, Dataproc on GKE will choose the zone.
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'autoscaling'
                                            description: |
                                              GkeNodePoolAutoscaling contains information the cluster autoscaler needs to adjust the size of the node pool to the current cluster usage.
                                            properties:
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'minNodeCount'
                                                  description: |
                                                    The minimum number of nodes in the node pool. Must be >= 0 and <= max_node_count.
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'maxNodeCount'
                                                  description: |
                                                    The maximum number of nodes in the node pool. Must be >= min_node_count, and must be > 0. Note: Quota must be sufficient to scale up the cluster.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'dataprocMetricConfig'
                          description: |
                            Dataproc metric config.
                          properties:
                              - !ruby/object:Api::Type::Array
                                name: 'metrics'
                                description: |
                                  Required. Metrics sources to enable.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::Enum
                                      name: 'metricSource'
                                      description: |
                                        Required. A standard set of metrics is collected unless metricOverrides are specified for the metric source (see Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) for more information).
                                      values:
                                        - :METRIC_SOURCE_UNSPECIFIED
                                        - :MONITORING_AGENT_DEFAULTS
                                        - :HDFS
                                        - :SPARK
                                        - :YARN
                                        - :SPARK_HISTORY_SERVER
                                        - :HIVESERVER2
                                        - :HIVEMETASTORE
                                        - :FLINK
                                    - !ruby/object:Api::Type::Array
                                      name: 'metricOverrides'
                                      description: |
                                        Optional. Specify one or more Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) to collect for the metric course (for the SPARK metric source (any Spark metric (https://spark.apache.org/docs/latest/monitoring.html#metrics) can be specified).Provide metrics in the following format: METRIC_SOURCE: INSTANCE:GROUP:METRIC Use camelcase as appropriate.Examples: yarn:ResourceManager:QueueMetrics:AppsCompleted spark:driver:DAGScheduler:job.allJobs sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed hiveserver2:JVM:Memory:NonHeapMemoryUsage.used Notes: Only the specified overridden metrics are collected for the metric source. For example, if one or more spark:executive metrics are listed as metric overrides, other SPARK metrics are not collected. The collection of the metrics for other enabled custom metric sources is unaffected. For example, if both SPARK andd YARN metric sources are enabled, and overrides are provided for Spark metrics only, all YARN metrics are collected.
                                      item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'auxiliaryNodeGroups'
                          description: |
                            Optional. The node group settings.
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'nodeGroup'
                                description: |
                                  Dataproc Node Group. The Dataproc NodeGroup resource is not related to the Dataproc NodeGroupAffinity resource.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'name'
                                      description: |
                                        The Node group resource name (https://aip.dev/122).
                                    - !ruby/object:Api::Type::Array
                                      name: 'roles'
                                      description: |
                                        Required. Node group roles.
                                      item_type: Api::Type::String
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'nodeGroupConfig'
                                      description: |
                                        The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                                      properties:
                                          - !ruby/object:Api::Type::Integer
                                            name: 'numInstances'
                                            description: |
                                              Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                                          - !ruby/object:Api::Type::Array
                                            name: 'instanceNames'
                                            description: |
                                              Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Array
                                            name: 'instanceReferences'
                                            description: |
                                              Output only. List of references to Compute Engine instances.
                                            item_type: !ruby/object:Api::Type::NestedObject
                                              properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceName'
                                                  description: |
                                                    The user-friendly name of the Compute Engine instance.
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceId'
                                                  description: |
                                                    The unique identifier of the Compute Engine instance.
                                                - !ruby/object:Api::Type::String
                                                  name: 'publicKey'
                                                  description: |
                                                    The public RSA key used for sharing data with this instance.
                                                - !ruby/object:Api::Type::String
                                                  name: 'publicEciesKey'
                                                  description: |
                                                    The public ECIES key used for sharing data with this instance.
                                          - !ruby/object:Api::Type::String
                                            name: 'imageUri'
                                            description: |
                                              Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                                          - !ruby/object:Api::Type::String
                                            name: 'machineTypeUri'
                                            description: |
                                              Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'diskConfig'
                                            description: |
                                              Specifies the config of disk options for a group of VM instances.
                                            properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'bootDiskType'
                                                  description: |
                                                    Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'bootDiskSizeGb'
                                                  description: |
                                                    Optional. Size in GB of the boot disk (default is 500GB).
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'numLocalSsds'
                                                  description: |
                                                    Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                                - !ruby/object:Api::Type::String
                                                  name: 'localSsdInterface'
                                                  description: |
                                                    Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                                          - !ruby/object:Api::Type::Boolean
                                            name: 'isPreemptible'
                                            description: |
                                              Output only. Specifies that this instance group contains preemptible instances.
                                          - !ruby/object:Api::Type::Enum
                                            name: 'preemptibility'
                                            description: |
                                              Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                            values:
                                              - :PREEMPTIBILITY_UNSPECIFIED
                                              - :NON_PREEMPTIBLE
                                              - :PREEMPTIBLE
                                              - :SPOT
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'managedGroupConfig'
                                            description: |
                                              Specifies the resources used to actively manage an instance group.
                                            properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceTemplateName'
                                                  description: |
                                                    Output only. The name of the Instance Template used for the Managed Instance Group.
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceGroupManagerName'
                                                  description: |
                                                    Output only. The name of the Instance Group Manager for this group.
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceGroupManagerUri'
                                                  description: |
                                                    Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                                          - !ruby/object:Api::Type::Array
                                            name: 'accelerators'
                                            description: |
                                              Optional. The Compute Engine accelerator configuration for these instances.
                                            item_type: !ruby/object:Api::Type::NestedObject
                                              properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'acceleratorTypeUri'
                                                  description: |
                                                    Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'acceleratorCount'
                                                  description: |
                                                    The number of the accelerator cards of this type exposed to this instance.
                                          - !ruby/object:Api::Type::String
                                            name: 'minCpuPlatform'
                                            description: |
                                              Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                                          - !ruby/object:Api::Type::Integer
                                            name: 'minNumInstances'
                                            description: |
                                              Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'instanceFlexibilityPolicy'
                                            description: |
                                              Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                            properties:
                                                - !ruby/object:Api::Type::Array
                                                  name: 'instanceSelectionList'
                                                  description: |
                                                    Optional. List of instance selection options that the group will use when creating new VMs.
                                                  item_type: !ruby/object:Api::Type::NestedObject
                                                    properties:
                                                      - !ruby/object:Api::Type::Array
                                                        name: 'machineTypes'
                                                        description: |
                                                          Optional. Full machine-type names, e.g. "n1-standard-16".
                                                        item_type: Api::Type::String
                                                      - !ruby/object:Api::Type::Integer
                                                        name: 'rank'
                                                        description: |
                                                          Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                                - !ruby/object:Api::Type::Array
                                                  name: 'instanceSelectionResults'
                                                  description: |
                                                    Output only. A list of instance selection results in the group.
                                                  item_type: !ruby/object:Api::Type::NestedObject
                                                    properties:
                                                      - !ruby/object:Api::Type::String
                                                        name: 'machineType'
                                                        description: |
                                                          Output only. Full machine-type names, e.g. "n1-standard-16".
                                                      - !ruby/object:Api::Type::Integer
                                                        name: 'vmCount'
                                                        description: |
                                                          Output only. Number of VM provisioned with the machine_type.
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'startupConfig'
                                            description: |
                                              Configuration to handle the startup of instances during cluster create and update process.
                                            properties:
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'requiredRegistrationFraction'
                                                  description: |
                                                    Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'labels'
                                      description: |
                                        Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labelsn.
                                      properties:
                                        - !ruby/object:Api::Type::String
                                          name: 'additionalProperties'
                                          description: |
                                            
                              - !ruby/object:Api::Type::String
                                name: 'nodeGroupId'
                                description: |
                                  Optional. A node group ID. Generated if not specified.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'labels'
                    description: |
                      Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
            - !ruby/object:Api::Type::NestedObject
              name: 'clusterSelector'
              description: |
                A selector that chooses target cluster for jobs based on metadata.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'zone'
                    description: |
                      Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'clusterLabels'
                    description: |
                      Required. The cluster labels. Cluster must have all labels to match.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
      - !ruby/object:Api::Type::Array
        name: 'jobs'
        description: |
          Required. The Directed Acyclic Graph of Jobs to submit.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'stepId'
              description: |
                Required. The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
            - !ruby/object:Api::Type::NestedObject
              name: 'hadoopJob'
              description: |
                A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainJarFileUri'
                    description: |
                      The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
                  - !ruby/object:Api::Type::String
                    name: 'mainClass'
                    description: |
                      The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkJob'
              description: |
                A Dataproc job for running Apache Spark (https://spark.apache.org/) applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainJarFileUri'
                    description: |
                      The HCFS URI of the jar file that contains the main class.
                  - !ruby/object:Api::Type::String
                    name: 'mainClass'
                    description: |
                      The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in SparkJob.jar_file_uris.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'pysparkJob'
              description: |
                A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainPythonFileUri'
                    description: |
                      Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'pythonFileUris'
                    description: |
                      Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'hiveJob'
              description: |
                A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains Hive queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'scriptVariables'
                    description: |
                      Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'pigJob'
              description: |
                A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains the Pig queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'scriptVariables'
                    description: |
                      Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkRJob'
              description: |
                A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainRFileUri'
                    description: |
                      Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkSqlJob'
              description: |
                A Dataproc job for running Apache Spark SQL (https://spark.apache.org/sql/) queries.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains SQL queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'scriptVariables'
                    description: |
                      Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API might be overwritten.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'prestoJob'
              description: |
                A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains SQL queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::String
                    name: 'outputFormat'
                    description: |
                      Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
                  - !ruby/object:Api::Type::Array
                    name: 'clientTags'
                    description: |
                      Optional. Presto client tags to attach to this query
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'trinoJob'
              description: |
                A Dataproc job for running Trino (https://trino.io/) queries. IMPORTANT: The Dataproc Trino Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/trino) must be enabled when the cluster is created to submit a Trino job to the cluster.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains SQL queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::String
                    name: 'outputFormat'
                    description: |
                      Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats
                  - !ruby/object:Api::Type::Array
                    name: 'clientTags'
                    description: |
                      Optional. Trino client tags to attach to this query
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values. Used to set Trino session properties (https://trino.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Trino CLI
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'flinkJob'
              description: |
                A Dataproc job for running Apache Flink applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainJarFileUri'
                    description: |
                      The HCFS URI of the jar file that contains the main class.
                  - !ruby/object:Api::Type::String
                    name: 'mainClass'
                    description: |
                      The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jarFileUris.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Flink driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::String
                    name: 'savepointUri'
                    description: |
                      Optional. HCFS URI of the savepoint, which contains the last saved progress for starting the current job.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Flink. Properties that conflict with values set by the Dataproc API might beoverwritten. Can include properties set in/etc/flink/conf/flink-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'labels'
              description: |
                Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'scheduling'
              description: |
                Job scheduling options.
              properties:
                  - !ruby/object:Api::Type::Integer
                    name: 'maxFailuresPerHour'
                    description: |
                      Optional. Maximum number of times per hour a driver can be restarted as a result of driver exiting with non-zero code before job is reported failed.A job might be reported as thrashing if the driver exits with a non-zero code four times within a 10-minute window.Maximum value is 10.Note: This restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
                  - !ruby/object:Api::Type::Integer
                    name: 'maxFailuresTotal'
                    description: |
                      Optional. Maximum total number of times a driver can be restarted as a result of the driver exiting with a non-zero code. After the maximum number is reached, the job will be reported as failed.Maximum value is 240.Note: Currently, this restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
            - !ruby/object:Api::Type::Array
              name: 'prerequisiteStepIds'
              description: |
                Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
              item_type: Api::Type::String
      - !ruby/object:Api::Type::Array
        name: 'parameters'
        description: |
          Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.
            - !ruby/object:Api::Type::Array
              name: 'fields'
              description: |
                Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels'key' placement.clusterSelector.clusterLabels'key' placement.managedCluster.labels'key' placement.clusterSelector.clusterLabels'key' jobs'step-id'.labels'key' Jobs in the jobs list can be referenced by step-id: jobs'step-id'.hadoopJob.mainJarFileUri jobs'step-id'.hiveJob.queryFileUri jobs'step-id'.pySparkJob.mainPythonFileUri jobs'step-id'.hadoopJob.jarFileUris0 jobs'step-id'.hadoopJob.archiveUris0 jobs'step-id'.hadoopJob.fileUris0 jobs'step-id'.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs'step-id'.sparkJob.args0 Other examples: jobs'step-id'.hadoopJob.properties'key' jobs'step-id'.hadoopJob.args0 jobs'step-id'.hiveJob.scriptVariables'key' jobs'step-id'.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs'step-id'.sparkJob.args
              item_type: Api::Type::String
            - !ruby/object:Api::Type::String
              name: 'description'
              description: |
                Optional. Brief description of the parameter. Must not exceed 1024 characters.
            - !ruby/object:Api::Type::NestedObject
              name: 'validation'
              description: |
                Configuration for parameter validation.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'regex'
                    description: |
                      Validation based on regular expressions.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'regexes'
                          description: |
                            Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'values'
                    description: |
                      Validation based on a list of allowed values.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'values'
                          description: |
                            Required. List of allowed values for the parameter.
                          item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'dagTimeout'
        description: |
          Optional. Timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10 minutes ("600s") to 24 hours ("86400s"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a managed cluster, the cluster is deleted.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionConfig'
        description: |
          Encryption settings for encrypting workflow template job arguments.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKey'
              description: |
                Optional. The Cloud KMS key name to use for encrypting workflow template job arguments.When this this key is provided, the following workflow template job arguments (https://cloud.google.com/dataproc/docs/concepts/workflows/use-workflows#adding_jobs_to_a_template), if present, are CMEK encrypted (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_workflow_template_data): FlinkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/FlinkJob) HadoopJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/HadoopJob) SparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkJob) SparkRJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkRJob) PySparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/PySparkJob) SparkSqlJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkSqlJob) scriptVariables and queryList.queries HiveJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/HiveJob) scriptVariables and queryList.queries PigJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PigJob) scriptVariables and queryList.queries PrestoJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PrestoJob) scriptVariables and queryList.queries
  


    
  - !ruby/object:Api::Resource
    name: ProjectLocationWorkflowTemplate
    base_url: '{{+parent}}/workflowTemplates'
    self_link: '{{+name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/dataproc/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A Dataproc workflow template resource.
    properties:
  
      - !ruby/object:Api::Type::String
        name: 'id'
        description: |
          
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
      - !ruby/object:Api::Type::Integer
        name: 'version'
        description: |
          Optional. Used to perform a consistent read-modify-write.This field should be left blank for a CreateWorkflowTemplate request. It is required for an UpdateWorkflowTemplate request, and must match the current server version. A typical update template flow would fetch the current template with a GetWorkflowTemplate request, which will return the current template with the version field filled in with the current server version. The user updates other fields in the template, then returns it as part of the UpdateWorkflowTemplate request.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. The time template was created.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. The time template was last updated.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::NestedObject
        name: 'placement'
        description: |
          Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
        properties:
            - !ruby/object:Api::Type::NestedObject
              name: 'managedCluster'
              description: |
                Cluster that is managed by the workflow.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'clusterName'
                    description: |
                      Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'config'
                    description: |
                      The cluster config.
                    properties:
                        - !ruby/object:Api::Type::String
                          name: 'configBucket'
                          description: |
                            Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
                        - !ruby/object:Api::Type::String
                          name: 'tempBucket'
                          description: |
                            Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'gceClusterConfig'
                          description: |
                            Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'zoneUri'
                                description: |
                                  Optional. The Compute Engine zone where the Dataproc cluster will be located. If omitted, the service will pick a zone in the cluster's Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] [zone]
                              - !ruby/object:Api::Type::String
                                name: 'networkUri'
                                description: |
                                  Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default projects/[project_id]/global/networks/default default
                              - !ruby/object:Api::Type::String
                                name: 'subnetworkUri'
                                description: |
                                  Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/[region]/subnetworks/sub0 projects/[project_id]/regions/[region]/subnetworks/sub0 sub0
                              - !ruby/object:Api::Type::Boolean
                                name: 'internalIpOnly'
                                description: |
                                  Optional. This setting applies to subnetwork-enabled networks. It is set to true by default in clusters created with image versions 2.2.x.When set to true: All cluster VMs have internal IP addresses. Google Private Access (https://cloud.google.com/vpc/docs/private-google-access) must be enabled to access Dataproc and other Google Cloud APIs. Off-cluster dependencies must be configured to be accessible without external IP addresses.When set to false: Cluster VMs are not restricted to internal IP addresses. Ephemeral external IP addresses are assigned to each cluster VM.
                              - !ruby/object:Api::Type::Enum
                                name: 'privateIpv6GoogleAccess'
                                description: |
                                  Optional. The type of IPv6 access for a cluster.
                                values:
                                  - :PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED
                                  - :INHERIT_FROM_SUBNETWORK
                                  - :OUTBOUND
                                  - :BIDIRECTIONAL
                              - !ruby/object:Api::Type::String
                                name: 'serviceAccount'
                                description: |
                                  Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
                              - !ruby/object:Api::Type::Array
                                name: 'serviceAccountScopes'
                                description: |
                                  Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'tags'
                                description: |
                                  The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::NestedObject
                                name: 'metadata'
                                description: |
                                  Optional. The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
                                properties:
                                  - !ruby/object:Api::Type::String
                                    name: 'additionalProperties'
                                    description: |
                                      
                              - !ruby/object:Api::Type::NestedObject
                                name: 'reservationAffinity'
                                description: |
                                  Reservation Affinity for consuming Zonal reservation.
                                properties:
                                    - !ruby/object:Api::Type::Enum
                                      name: 'consumeReservationType'
                                      description: |
                                        Optional. Type of reservation to consume
                                      values:
                                        - :TYPE_UNSPECIFIED
                                        - :NO_RESERVATION
                                        - :ANY_RESERVATION
                                        - :SPECIFIC_RESERVATION
                                    - !ruby/object:Api::Type::String
                                      name: 'key'
                                      description: |
                                        Optional. Corresponds to the label key of reservation resource.
                                    - !ruby/object:Api::Type::Array
                                      name: 'values'
                                      description: |
                                        Optional. Corresponds to the label values of reservation resource.
                                      item_type: Api::Type::String
                              - !ruby/object:Api::Type::NestedObject
                                name: 'nodeGroupAffinity'
                                description: |
                                  Node Group Affinity for clusters using sole-tenant node groups. The Dataproc NodeGroupAffinity resource is not related to the Dataproc NodeGroup resource.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'nodeGroupUri'
                                      description: |
                                        Required. The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 node-group-1
                              - !ruby/object:Api::Type::NestedObject
                                name: 'shieldedInstanceConfig'
                                description: |
                                  Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
                                properties:
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableSecureBoot'
                                      description: |
                                        Optional. Defines whether instances have Secure Boot enabled.
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableVtpm'
                                      description: |
                                        Optional. Defines whether instances have the vTPM enabled.
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableIntegrityMonitoring'
                                      description: |
                                        Optional. Defines whether instances have integrity monitoring enabled.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'confidentialInstanceConfig'
                                description: |
                                  Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)
                                properties:
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableConfidentialCompute'
                                      description: |
                                        Optional. Defines whether the instance should have confidential compute enabled.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'masterConfig'
                          description: |
                            The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'numInstances'
                                description: |
                                  Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                              - !ruby/object:Api::Type::Array
                                name: 'instanceNames'
                                description: |
                                  Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'instanceReferences'
                                description: |
                                  Output only. List of references to Compute Engine instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceName'
                                      description: |
                                        The user-friendly name of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceId'
                                      description: |
                                        The unique identifier of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicKey'
                                      description: |
                                        The public RSA key used for sharing data with this instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicEciesKey'
                                      description: |
                                        The public ECIES key used for sharing data with this instance.
                              - !ruby/object:Api::Type::String
                                name: 'imageUri'
                                description: |
                                  Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                              - !ruby/object:Api::Type::String
                                name: 'machineTypeUri'
                                description: |
                                  Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'diskConfig'
                                description: |
                                  Specifies the config of disk options for a group of VM instances.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'bootDiskType'
                                      description: |
                                        Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'bootDiskSizeGb'
                                      description: |
                                        Optional. Size in GB of the boot disk (default is 500GB).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'numLocalSsds'
                                      description: |
                                        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                    - !ruby/object:Api::Type::String
                                      name: 'localSsdInterface'
                                      description: |
                                        Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                              - !ruby/object:Api::Type::Boolean
                                name: 'isPreemptible'
                                description: |
                                  Output only. Specifies that this instance group contains preemptible instances.
                              - !ruby/object:Api::Type::Enum
                                name: 'preemptibility'
                                description: |
                                  Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                values:
                                  - :PREEMPTIBILITY_UNSPECIFIED
                                  - :NON_PREEMPTIBLE
                                  - :PREEMPTIBLE
                                  - :SPOT
                              - !ruby/object:Api::Type::NestedObject
                                name: 'managedGroupConfig'
                                description: |
                                  Specifies the resources used to actively manage an instance group.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceTemplateName'
                                      description: |
                                        Output only. The name of the Instance Template used for the Managed Instance Group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerName'
                                      description: |
                                        Output only. The name of the Instance Group Manager for this group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerUri'
                                      description: |
                                        Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                              - !ruby/object:Api::Type::Array
                                name: 'accelerators'
                                description: |
                                  Optional. The Compute Engine accelerator configuration for these instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'acceleratorTypeUri'
                                      description: |
                                        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'acceleratorCount'
                                      description: |
                                        The number of the accelerator cards of this type exposed to this instance.
                              - !ruby/object:Api::Type::String
                                name: 'minCpuPlatform'
                                description: |
                                  Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                              - !ruby/object:Api::Type::Integer
                                name: 'minNumInstances'
                                description: |
                                  Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'instanceFlexibilityPolicy'
                                description: |
                                  Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionList'
                                      description: |
                                        Optional. List of instance selection options that the group will use when creating new VMs.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'machineTypes'
                                            description: |
                                              Optional. Full machine-type names, e.g. "n1-standard-16".
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Integer
                                            name: 'rank'
                                            description: |
                                              Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionResults'
                                      description: |
                                        Output only. A list of instance selection results in the group.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'machineType'
                                            description: |
                                              Output only. Full machine-type names, e.g. "n1-standard-16".
                                          - !ruby/object:Api::Type::Integer
                                            name: 'vmCount'
                                            description: |
                                              Output only. Number of VM provisioned with the machine_type.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'startupConfig'
                                description: |
                                  Configuration to handle the startup of instances during cluster create and update process.
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'requiredRegistrationFraction'
                                      description: |
                                        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'workerConfig'
                          description: |
                            The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'numInstances'
                                description: |
                                  Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                              - !ruby/object:Api::Type::Array
                                name: 'instanceNames'
                                description: |
                                  Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'instanceReferences'
                                description: |
                                  Output only. List of references to Compute Engine instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceName'
                                      description: |
                                        The user-friendly name of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceId'
                                      description: |
                                        The unique identifier of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicKey'
                                      description: |
                                        The public RSA key used for sharing data with this instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicEciesKey'
                                      description: |
                                        The public ECIES key used for sharing data with this instance.
                              - !ruby/object:Api::Type::String
                                name: 'imageUri'
                                description: |
                                  Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                              - !ruby/object:Api::Type::String
                                name: 'machineTypeUri'
                                description: |
                                  Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'diskConfig'
                                description: |
                                  Specifies the config of disk options for a group of VM instances.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'bootDiskType'
                                      description: |
                                        Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'bootDiskSizeGb'
                                      description: |
                                        Optional. Size in GB of the boot disk (default is 500GB).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'numLocalSsds'
                                      description: |
                                        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                    - !ruby/object:Api::Type::String
                                      name: 'localSsdInterface'
                                      description: |
                                        Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                              - !ruby/object:Api::Type::Boolean
                                name: 'isPreemptible'
                                description: |
                                  Output only. Specifies that this instance group contains preemptible instances.
                              - !ruby/object:Api::Type::Enum
                                name: 'preemptibility'
                                description: |
                                  Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                values:
                                  - :PREEMPTIBILITY_UNSPECIFIED
                                  - :NON_PREEMPTIBLE
                                  - :PREEMPTIBLE
                                  - :SPOT
                              - !ruby/object:Api::Type::NestedObject
                                name: 'managedGroupConfig'
                                description: |
                                  Specifies the resources used to actively manage an instance group.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceTemplateName'
                                      description: |
                                        Output only. The name of the Instance Template used for the Managed Instance Group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerName'
                                      description: |
                                        Output only. The name of the Instance Group Manager for this group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerUri'
                                      description: |
                                        Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                              - !ruby/object:Api::Type::Array
                                name: 'accelerators'
                                description: |
                                  Optional. The Compute Engine accelerator configuration for these instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'acceleratorTypeUri'
                                      description: |
                                        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'acceleratorCount'
                                      description: |
                                        The number of the accelerator cards of this type exposed to this instance.
                              - !ruby/object:Api::Type::String
                                name: 'minCpuPlatform'
                                description: |
                                  Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                              - !ruby/object:Api::Type::Integer
                                name: 'minNumInstances'
                                description: |
                                  Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'instanceFlexibilityPolicy'
                                description: |
                                  Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionList'
                                      description: |
                                        Optional. List of instance selection options that the group will use when creating new VMs.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'machineTypes'
                                            description: |
                                              Optional. Full machine-type names, e.g. "n1-standard-16".
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Integer
                                            name: 'rank'
                                            description: |
                                              Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionResults'
                                      description: |
                                        Output only. A list of instance selection results in the group.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'machineType'
                                            description: |
                                              Output only. Full machine-type names, e.g. "n1-standard-16".
                                          - !ruby/object:Api::Type::Integer
                                            name: 'vmCount'
                                            description: |
                                              Output only. Number of VM provisioned with the machine_type.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'startupConfig'
                                description: |
                                  Configuration to handle the startup of instances during cluster create and update process.
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'requiredRegistrationFraction'
                                      description: |
                                        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'secondaryWorkerConfig'
                          description: |
                            The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'numInstances'
                                description: |
                                  Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                              - !ruby/object:Api::Type::Array
                                name: 'instanceNames'
                                description: |
                                  Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'instanceReferences'
                                description: |
                                  Output only. List of references to Compute Engine instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceName'
                                      description: |
                                        The user-friendly name of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceId'
                                      description: |
                                        The unique identifier of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicKey'
                                      description: |
                                        The public RSA key used for sharing data with this instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicEciesKey'
                                      description: |
                                        The public ECIES key used for sharing data with this instance.
                              - !ruby/object:Api::Type::String
                                name: 'imageUri'
                                description: |
                                  Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                              - !ruby/object:Api::Type::String
                                name: 'machineTypeUri'
                                description: |
                                  Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'diskConfig'
                                description: |
                                  Specifies the config of disk options for a group of VM instances.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'bootDiskType'
                                      description: |
                                        Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'bootDiskSizeGb'
                                      description: |
                                        Optional. Size in GB of the boot disk (default is 500GB).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'numLocalSsds'
                                      description: |
                                        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                    - !ruby/object:Api::Type::String
                                      name: 'localSsdInterface'
                                      description: |
                                        Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                              - !ruby/object:Api::Type::Boolean
                                name: 'isPreemptible'
                                description: |
                                  Output only. Specifies that this instance group contains preemptible instances.
                              - !ruby/object:Api::Type::Enum
                                name: 'preemptibility'
                                description: |
                                  Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                values:
                                  - :PREEMPTIBILITY_UNSPECIFIED
                                  - :NON_PREEMPTIBLE
                                  - :PREEMPTIBLE
                                  - :SPOT
                              - !ruby/object:Api::Type::NestedObject
                                name: 'managedGroupConfig'
                                description: |
                                  Specifies the resources used to actively manage an instance group.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceTemplateName'
                                      description: |
                                        Output only. The name of the Instance Template used for the Managed Instance Group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerName'
                                      description: |
                                        Output only. The name of the Instance Group Manager for this group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerUri'
                                      description: |
                                        Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                              - !ruby/object:Api::Type::Array
                                name: 'accelerators'
                                description: |
                                  Optional. The Compute Engine accelerator configuration for these instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'acceleratorTypeUri'
                                      description: |
                                        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'acceleratorCount'
                                      description: |
                                        The number of the accelerator cards of this type exposed to this instance.
                              - !ruby/object:Api::Type::String
                                name: 'minCpuPlatform'
                                description: |
                                  Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                              - !ruby/object:Api::Type::Integer
                                name: 'minNumInstances'
                                description: |
                                  Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'instanceFlexibilityPolicy'
                                description: |
                                  Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionList'
                                      description: |
                                        Optional. List of instance selection options that the group will use when creating new VMs.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'machineTypes'
                                            description: |
                                              Optional. Full machine-type names, e.g. "n1-standard-16".
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Integer
                                            name: 'rank'
                                            description: |
                                              Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionResults'
                                      description: |
                                        Output only. A list of instance selection results in the group.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'machineType'
                                            description: |
                                              Output only. Full machine-type names, e.g. "n1-standard-16".
                                          - !ruby/object:Api::Type::Integer
                                            name: 'vmCount'
                                            description: |
                                              Output only. Number of VM provisioned with the machine_type.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'startupConfig'
                                description: |
                                  Configuration to handle the startup of instances during cluster create and update process.
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'requiredRegistrationFraction'
                                      description: |
                                        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'softwareConfig'
                          description: |
                            Specifies the selection and config of software inside the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'imageVersion'
                                description: |
                                  Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'properties'
                                description: |
                                  Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
                                properties:
                                  - !ruby/object:Api::Type::String
                                    name: 'additionalProperties'
                                    description: |
                                      
                              - !ruby/object:Api::Type::Array
                                name: 'optionalComponents'
                                description: |
                                  Optional. The set of components to activate on the cluster.
                                item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'initializationActions'
                          description: |
                            Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi 
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::String
                                name: 'executableFile'
                                description: |
                                  Required. Cloud Storage URI of executable file.
                              - !ruby/object:Api::Type::String
                                name: 'executionTimeout'
                                description: |
                                  Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'encryptionConfig'
                          description: |
                            Encryption settings for the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'gcePdKmsKeyName'
                                description: |
                                  Optional. The Cloud KMS key resource name to use for persistent disk encryption for all instances in the cluster. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.
                              - !ruby/object:Api::Type::String
                                name: 'kmsKey'
                                description: |
                                  Optional. The Cloud KMS key resource name to use for cluster persistent disk and job argument encryption. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.When this key resource name is provided, the following job arguments of the following job types submitted to the cluster are encrypted using CMEK: FlinkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/FlinkJob) HadoopJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/HadoopJob) SparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkJob) SparkRJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkRJob) PySparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/PySparkJob) SparkSqlJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkSqlJob) scriptVariables and queryList.queries HiveJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/HiveJob) scriptVariables and queryList.queries PigJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PigJob) scriptVariables and queryList.queries PrestoJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PrestoJob) scriptVariables and queryList.queries
                        - !ruby/object:Api::Type::NestedObject
                          name: 'autoscalingConfig'
                          description: |
                            Autoscaling Policy config associated with the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'policyUri'
                                description: |
                                  Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'securityConfig'
                          description: |
                            Security related configuration, including encryption, Kerberos, etc.
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'kerberosConfig'
                                description: |
                                  Specifies Kerberos related configuration.
                                properties:
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableKerberos'
                                      description: |
                                        Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
                                    - !ruby/object:Api::Type::String
                                      name: 'rootPrincipalPasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
                                    - !ruby/object:Api::Type::String
                                      name: 'kmsKeyUri'
                                      description: |
                                        Optional. The URI of the KMS key used to encrypt sensitive files.
                                    - !ruby/object:Api::Type::String
                                      name: 'keystoreUri'
                                      description: |
                                        Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
                                    - !ruby/object:Api::Type::String
                                      name: 'truststoreUri'
                                      description: |
                                        Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
                                    - !ruby/object:Api::Type::String
                                      name: 'keystorePasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
                                    - !ruby/object:Api::Type::String
                                      name: 'keyPasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
                                    - !ruby/object:Api::Type::String
                                      name: 'truststorePasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustRealm'
                                      description: |
                                        Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustKdc'
                                      description: |
                                        Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustAdminServer'
                                      description: |
                                        Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustSharedPasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
                                    - !ruby/object:Api::Type::String
                                      name: 'kdcDbKeyUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'tgtLifetimeHours'
                                      description: |
                                        Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
                                    - !ruby/object:Api::Type::String
                                      name: 'realm'
                                      description: |
                                        Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'identityConfig'
                                description: |
                                  Identity related configuration, including service account based secure multi-tenancy user mappings.
                                properties:
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'userServiceAccountMapping'
                                      description: |
                                        Required. Map of user to service account.
                                      properties:
                                        - !ruby/object:Api::Type::String
                                          name: 'additionalProperties'
                                          description: |
                                            
                        - !ruby/object:Api::Type::NestedObject
                          name: 'lifecycleConfig'
                          description: |
                            Specifies the cluster auto-delete schedule configuration.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'idleDeleteTtl'
                                description: |
                                  Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                              - !ruby/object:Api::Type::String
                                name: 'autoDeleteTime'
                                description: |
                                  Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                              - !ruby/object:Api::Type::String
                                name: 'autoDeleteTtl'
                                description: |
                                  Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                              - !ruby/object:Api::Type::String
                                name: 'idleStartTime'
                                description: |
                                  Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'endpointConfig'
                          description: |
                            Endpoint config for this cluster
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'httpPorts'
                                description: |
                                  Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.
                                properties:
                                  - !ruby/object:Api::Type::String
                                    name: 'additionalProperties'
                                    description: |
                                      
                              - !ruby/object:Api::Type::Boolean
                                name: 'enableHttpPortAccess'
                                description: |
                                  Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'metastoreConfig'
                          description: |
                            Specifies a Metastore configuration.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'dataprocMetastoreService'
                                description: |
                                  Required. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]
                        - !ruby/object:Api::Type::NestedObject
                          name: 'gkeClusterConfig'
                          description: |
                            The cluster's GKE config.
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'namespacedGkeDeploymentTarget'
                                description: |
                                  Deprecated. Used only for the deprecated beta. A full, namespace-isolated deployment target for an existing GKE cluster.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'targetGkeCluster'
                                      description: |
                                        Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
                                    - !ruby/object:Api::Type::String
                                      name: 'clusterNamespace'
                                      description: |
                                        Optional. A namespace within the GKE cluster to deploy into.
                              - !ruby/object:Api::Type::String
                                name: 'gkeClusterTarget'
                                description: |
                                  Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
                              - !ruby/object:Api::Type::Array
                                name: 'nodePoolTarget'
                                description: |
                                  Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'nodePool'
                                      description: |
                                        Required. The target GKE node pool. Format: 'projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'
                                    - !ruby/object:Api::Type::Array
                                      name: 'roles'
                                      description: |
                                        Required. The roles associated with the GKE node pool.
                                      item_type: Api::Type::String
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'nodePoolConfig'
                                      description: |
                                        The configuration of a GKE node pool used by a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/concepts/jobs/dataproc-gke#create-a-dataproc-on-gke-cluster).
                                      properties:
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'config'
                                            description: |
                                              Parameters that describe cluster nodes.
                                            properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'machineType'
                                                  description: |
                                                    Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'localSsdCount'
                                                  description: |
                                                    Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
                                                - !ruby/object:Api::Type::Boolean
                                                  name: 'preemptible'
                                                  description: |
                                                    Optional. Whether the nodes are created as legacy preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
                                                - !ruby/object:Api::Type::Array
                                                  name: 'accelerators'
                                                  description: |
                                                    Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
                                                  item_type: !ruby/object:Api::Type::NestedObject
                                                    properties:
                                                      - !ruby/object:Api::Type::String
                                                        name: 'acceleratorCount'
                                                        description: |
                                                          The number of accelerator cards exposed to an instance.
                                                      - !ruby/object:Api::Type::String
                                                        name: 'acceleratorType'
                                                        description: |
                                                          The accelerator type resource namename (see GPUs on Compute Engine).
                                                      - !ruby/object:Api::Type::String
                                                        name: 'gpuPartitionSize'
                                                        description: |
                                                          Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
                                                - !ruby/object:Api::Type::String
                                                  name: 'minCpuPlatform'
                                                  description: |
                                                    Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as "Intel Haswell"` or Intel Sandy Bridge".
                                                - !ruby/object:Api::Type::String
                                                  name: 'bootDiskKmsKey'
                                                  description: |
                                                    Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}
                                                - !ruby/object:Api::Type::Boolean
                                                  name: 'spot'
                                                  description: |
                                                    Optional. Whether the nodes are created as Spot VM instances (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
                                          - !ruby/object:Api::Type::Array
                                            name: 'locations'
                                            description: |
                                              Optional. The list of Compute Engine zones (https://cloud.google.com/compute/docs/zones#available) where node pool nodes associated with a Dataproc on GKE virtual cluster will be located.Note: All node pools associated with a virtual cluster must be located in the same region as the virtual cluster, and they must be located in the same zone within that region.If a location is not specified during node pool creation, Dataproc on GKE will choose the zone.
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'autoscaling'
                                            description: |
                                              GkeNodePoolAutoscaling contains information the cluster autoscaler needs to adjust the size of the node pool to the current cluster usage.
                                            properties:
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'minNodeCount'
                                                  description: |
                                                    The minimum number of nodes in the node pool. Must be >= 0 and <= max_node_count.
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'maxNodeCount'
                                                  description: |
                                                    The maximum number of nodes in the node pool. Must be >= min_node_count, and must be > 0. Note: Quota must be sufficient to scale up the cluster.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'dataprocMetricConfig'
                          description: |
                            Dataproc metric config.
                          properties:
                              - !ruby/object:Api::Type::Array
                                name: 'metrics'
                                description: |
                                  Required. Metrics sources to enable.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::Enum
                                      name: 'metricSource'
                                      description: |
                                        Required. A standard set of metrics is collected unless metricOverrides are specified for the metric source (see Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) for more information).
                                      values:
                                        - :METRIC_SOURCE_UNSPECIFIED
                                        - :MONITORING_AGENT_DEFAULTS
                                        - :HDFS
                                        - :SPARK
                                        - :YARN
                                        - :SPARK_HISTORY_SERVER
                                        - :HIVESERVER2
                                        - :HIVEMETASTORE
                                        - :FLINK
                                    - !ruby/object:Api::Type::Array
                                      name: 'metricOverrides'
                                      description: |
                                        Optional. Specify one or more Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) to collect for the metric course (for the SPARK metric source (any Spark metric (https://spark.apache.org/docs/latest/monitoring.html#metrics) can be specified).Provide metrics in the following format: METRIC_SOURCE: INSTANCE:GROUP:METRIC Use camelcase as appropriate.Examples: yarn:ResourceManager:QueueMetrics:AppsCompleted spark:driver:DAGScheduler:job.allJobs sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed hiveserver2:JVM:Memory:NonHeapMemoryUsage.used Notes: Only the specified overridden metrics are collected for the metric source. For example, if one or more spark:executive metrics are listed as metric overrides, other SPARK metrics are not collected. The collection of the metrics for other enabled custom metric sources is unaffected. For example, if both SPARK andd YARN metric sources are enabled, and overrides are provided for Spark metrics only, all YARN metrics are collected.
                                      item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'auxiliaryNodeGroups'
                          description: |
                            Optional. The node group settings.
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'nodeGroup'
                                description: |
                                  Dataproc Node Group. The Dataproc NodeGroup resource is not related to the Dataproc NodeGroupAffinity resource.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'name'
                                      description: |
                                        The Node group resource name (https://aip.dev/122).
                                    - !ruby/object:Api::Type::Array
                                      name: 'roles'
                                      description: |
                                        Required. Node group roles.
                                      item_type: Api::Type::String
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'nodeGroupConfig'
                                      description: |
                                        The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                                      properties:
                                          - !ruby/object:Api::Type::Integer
                                            name: 'numInstances'
                                            description: |
                                              Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                                          - !ruby/object:Api::Type::Array
                                            name: 'instanceNames'
                                            description: |
                                              Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Array
                                            name: 'instanceReferences'
                                            description: |
                                              Output only. List of references to Compute Engine instances.
                                            item_type: !ruby/object:Api::Type::NestedObject
                                              properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceName'
                                                  description: |
                                                    The user-friendly name of the Compute Engine instance.
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceId'
                                                  description: |
                                                    The unique identifier of the Compute Engine instance.
                                                - !ruby/object:Api::Type::String
                                                  name: 'publicKey'
                                                  description: |
                                                    The public RSA key used for sharing data with this instance.
                                                - !ruby/object:Api::Type::String
                                                  name: 'publicEciesKey'
                                                  description: |
                                                    The public ECIES key used for sharing data with this instance.
                                          - !ruby/object:Api::Type::String
                                            name: 'imageUri'
                                            description: |
                                              Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                                          - !ruby/object:Api::Type::String
                                            name: 'machineTypeUri'
                                            description: |
                                              Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'diskConfig'
                                            description: |
                                              Specifies the config of disk options for a group of VM instances.
                                            properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'bootDiskType'
                                                  description: |
                                                    Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'bootDiskSizeGb'
                                                  description: |
                                                    Optional. Size in GB of the boot disk (default is 500GB).
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'numLocalSsds'
                                                  description: |
                                                    Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                                - !ruby/object:Api::Type::String
                                                  name: 'localSsdInterface'
                                                  description: |
                                                    Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                                          - !ruby/object:Api::Type::Boolean
                                            name: 'isPreemptible'
                                            description: |
                                              Output only. Specifies that this instance group contains preemptible instances.
                                          - !ruby/object:Api::Type::Enum
                                            name: 'preemptibility'
                                            description: |
                                              Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                            values:
                                              - :PREEMPTIBILITY_UNSPECIFIED
                                              - :NON_PREEMPTIBLE
                                              - :PREEMPTIBLE
                                              - :SPOT
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'managedGroupConfig'
                                            description: |
                                              Specifies the resources used to actively manage an instance group.
                                            properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceTemplateName'
                                                  description: |
                                                    Output only. The name of the Instance Template used for the Managed Instance Group.
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceGroupManagerName'
                                                  description: |
                                                    Output only. The name of the Instance Group Manager for this group.
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceGroupManagerUri'
                                                  description: |
                                                    Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                                          - !ruby/object:Api::Type::Array
                                            name: 'accelerators'
                                            description: |
                                              Optional. The Compute Engine accelerator configuration for these instances.
                                            item_type: !ruby/object:Api::Type::NestedObject
                                              properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'acceleratorTypeUri'
                                                  description: |
                                                    Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'acceleratorCount'
                                                  description: |
                                                    The number of the accelerator cards of this type exposed to this instance.
                                          - !ruby/object:Api::Type::String
                                            name: 'minCpuPlatform'
                                            description: |
                                              Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                                          - !ruby/object:Api::Type::Integer
                                            name: 'minNumInstances'
                                            description: |
                                              Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'instanceFlexibilityPolicy'
                                            description: |
                                              Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                            properties:
                                                - !ruby/object:Api::Type::Array
                                                  name: 'instanceSelectionList'
                                                  description: |
                                                    Optional. List of instance selection options that the group will use when creating new VMs.
                                                  item_type: !ruby/object:Api::Type::NestedObject
                                                    properties:
                                                      - !ruby/object:Api::Type::Array
                                                        name: 'machineTypes'
                                                        description: |
                                                          Optional. Full machine-type names, e.g. "n1-standard-16".
                                                        item_type: Api::Type::String
                                                      - !ruby/object:Api::Type::Integer
                                                        name: 'rank'
                                                        description: |
                                                          Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                                - !ruby/object:Api::Type::Array
                                                  name: 'instanceSelectionResults'
                                                  description: |
                                                    Output only. A list of instance selection results in the group.
                                                  item_type: !ruby/object:Api::Type::NestedObject
                                                    properties:
                                                      - !ruby/object:Api::Type::String
                                                        name: 'machineType'
                                                        description: |
                                                          Output only. Full machine-type names, e.g. "n1-standard-16".
                                                      - !ruby/object:Api::Type::Integer
                                                        name: 'vmCount'
                                                        description: |
                                                          Output only. Number of VM provisioned with the machine_type.
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'startupConfig'
                                            description: |
                                              Configuration to handle the startup of instances during cluster create and update process.
                                            properties:
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'requiredRegistrationFraction'
                                                  description: |
                                                    Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'labels'
                                      description: |
                                        Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labelsn.
                                      properties:
                                        - !ruby/object:Api::Type::String
                                          name: 'additionalProperties'
                                          description: |
                                            
                              - !ruby/object:Api::Type::String
                                name: 'nodeGroupId'
                                description: |
                                  Optional. A node group ID. Generated if not specified.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'labels'
                    description: |
                      Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
            - !ruby/object:Api::Type::NestedObject
              name: 'clusterSelector'
              description: |
                A selector that chooses target cluster for jobs based on metadata.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'zone'
                    description: |
                      Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'clusterLabels'
                    description: |
                      Required. The cluster labels. Cluster must have all labels to match.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
      - !ruby/object:Api::Type::Array
        name: 'jobs'
        description: |
          Required. The Directed Acyclic Graph of Jobs to submit.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'stepId'
              description: |
                Required. The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
            - !ruby/object:Api::Type::NestedObject
              name: 'hadoopJob'
              description: |
                A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainJarFileUri'
                    description: |
                      The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
                  - !ruby/object:Api::Type::String
                    name: 'mainClass'
                    description: |
                      The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkJob'
              description: |
                A Dataproc job for running Apache Spark (https://spark.apache.org/) applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainJarFileUri'
                    description: |
                      The HCFS URI of the jar file that contains the main class.
                  - !ruby/object:Api::Type::String
                    name: 'mainClass'
                    description: |
                      The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in SparkJob.jar_file_uris.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'pysparkJob'
              description: |
                A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainPythonFileUri'
                    description: |
                      Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'pythonFileUris'
                    description: |
                      Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'hiveJob'
              description: |
                A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains Hive queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'scriptVariables'
                    description: |
                      Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'pigJob'
              description: |
                A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains the Pig queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'scriptVariables'
                    description: |
                      Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkRJob'
              description: |
                A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainRFileUri'
                    description: |
                      Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkSqlJob'
              description: |
                A Dataproc job for running Apache Spark SQL (https://spark.apache.org/sql/) queries.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains SQL queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'scriptVariables'
                    description: |
                      Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API might be overwritten.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'prestoJob'
              description: |
                A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains SQL queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::String
                    name: 'outputFormat'
                    description: |
                      Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
                  - !ruby/object:Api::Type::Array
                    name: 'clientTags'
                    description: |
                      Optional. Presto client tags to attach to this query
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'trinoJob'
              description: |
                A Dataproc job for running Trino (https://trino.io/) queries. IMPORTANT: The Dataproc Trino Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/trino) must be enabled when the cluster is created to submit a Trino job to the cluster.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains SQL queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::String
                    name: 'outputFormat'
                    description: |
                      Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats
                  - !ruby/object:Api::Type::Array
                    name: 'clientTags'
                    description: |
                      Optional. Trino client tags to attach to this query
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values. Used to set Trino session properties (https://trino.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Trino CLI
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'flinkJob'
              description: |
                A Dataproc job for running Apache Flink applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainJarFileUri'
                    description: |
                      The HCFS URI of the jar file that contains the main class.
                  - !ruby/object:Api::Type::String
                    name: 'mainClass'
                    description: |
                      The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jarFileUris.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Flink driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::String
                    name: 'savepointUri'
                    description: |
                      Optional. HCFS URI of the savepoint, which contains the last saved progress for starting the current job.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Flink. Properties that conflict with values set by the Dataproc API might beoverwritten. Can include properties set in/etc/flink/conf/flink-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'labels'
              description: |
                Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'scheduling'
              description: |
                Job scheduling options.
              properties:
                  - !ruby/object:Api::Type::Integer
                    name: 'maxFailuresPerHour'
                    description: |
                      Optional. Maximum number of times per hour a driver can be restarted as a result of driver exiting with non-zero code before job is reported failed.A job might be reported as thrashing if the driver exits with a non-zero code four times within a 10-minute window.Maximum value is 10.Note: This restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
                  - !ruby/object:Api::Type::Integer
                    name: 'maxFailuresTotal'
                    description: |
                      Optional. Maximum total number of times a driver can be restarted as a result of the driver exiting with a non-zero code. After the maximum number is reached, the job will be reported as failed.Maximum value is 240.Note: Currently, this restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
            - !ruby/object:Api::Type::Array
              name: 'prerequisiteStepIds'
              description: |
                Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
              item_type: Api::Type::String
      - !ruby/object:Api::Type::Array
        name: 'parameters'
        description: |
          Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.
            - !ruby/object:Api::Type::Array
              name: 'fields'
              description: |
                Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels'key' placement.clusterSelector.clusterLabels'key' placement.managedCluster.labels'key' placement.clusterSelector.clusterLabels'key' jobs'step-id'.labels'key' Jobs in the jobs list can be referenced by step-id: jobs'step-id'.hadoopJob.mainJarFileUri jobs'step-id'.hiveJob.queryFileUri jobs'step-id'.pySparkJob.mainPythonFileUri jobs'step-id'.hadoopJob.jarFileUris0 jobs'step-id'.hadoopJob.archiveUris0 jobs'step-id'.hadoopJob.fileUris0 jobs'step-id'.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs'step-id'.sparkJob.args0 Other examples: jobs'step-id'.hadoopJob.properties'key' jobs'step-id'.hadoopJob.args0 jobs'step-id'.hiveJob.scriptVariables'key' jobs'step-id'.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs'step-id'.sparkJob.args
              item_type: Api::Type::String
            - !ruby/object:Api::Type::String
              name: 'description'
              description: |
                Optional. Brief description of the parameter. Must not exceed 1024 characters.
            - !ruby/object:Api::Type::NestedObject
              name: 'validation'
              description: |
                Configuration for parameter validation.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'regex'
                    description: |
                      Validation based on regular expressions.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'regexes'
                          description: |
                            Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'values'
                    description: |
                      Validation based on a list of allowed values.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'values'
                          description: |
                            Required. List of allowed values for the parameter.
                          item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'dagTimeout'
        description: |
          Optional. Timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10 minutes ("600s") to 24 hours ("86400s"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a managed cluster, the cluster is deleted.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionConfig'
        description: |
          Encryption settings for encrypting workflow template job arguments.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKey'
              description: |
                Optional. The Cloud KMS key name to use for encrypting workflow template job arguments.When this this key is provided, the following workflow template job arguments (https://cloud.google.com/dataproc/docs/concepts/workflows/use-workflows#adding_jobs_to_a_template), if present, are CMEK encrypted (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_workflow_template_data): FlinkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/FlinkJob) HadoopJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/HadoopJob) SparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkJob) SparkRJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkRJob) PySparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/PySparkJob) SparkSqlJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkSqlJob) scriptVariables and queryList.queries HiveJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/HiveJob) scriptVariables and queryList.queries PigJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PigJob) scriptVariables and queryList.queries PrestoJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PrestoJob) scriptVariables and queryList.queries
  


    
  - !ruby/object:Api::Resource
    name: ProjectLocationWorkflowTemplate
    base_url: '{{+parent}}/workflowTemplates'
    self_link: '{{+name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/dataproc/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A Dataproc workflow template resource.
    properties:
  
      - !ruby/object:Api::Type::String
        name: 'id'
        description: |
          
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
      - !ruby/object:Api::Type::Integer
        name: 'version'
        description: |
          Optional. Used to perform a consistent read-modify-write.This field should be left blank for a CreateWorkflowTemplate request. It is required for an UpdateWorkflowTemplate request, and must match the current server version. A typical update template flow would fetch the current template with a GetWorkflowTemplate request, which will return the current template with the version field filled in with the current server version. The user updates other fields in the template, then returns it as part of the UpdateWorkflowTemplate request.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. The time template was created.
      - !ruby/object:Api::Type::String
        name: 'updateTime'
        description: |
          Output only. The time template was last updated.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::NestedObject
        name: 'placement'
        description: |
          Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
        properties:
            - !ruby/object:Api::Type::NestedObject
              name: 'managedCluster'
              description: |
                Cluster that is managed by the workflow.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'clusterName'
                    description: |
                      Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'config'
                    description: |
                      The cluster config.
                    properties:
                        - !ruby/object:Api::Type::String
                          name: 'configBucket'
                          description: |
                            Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
                        - !ruby/object:Api::Type::String
                          name: 'tempBucket'
                          description: |
                            Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'gceClusterConfig'
                          description: |
                            Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'zoneUri'
                                description: |
                                  Optional. The Compute Engine zone where the Dataproc cluster will be located. If omitted, the service will pick a zone in the cluster's Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] [zone]
                              - !ruby/object:Api::Type::String
                                name: 'networkUri'
                                description: |
                                  Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default projects/[project_id]/global/networks/default default
                              - !ruby/object:Api::Type::String
                                name: 'subnetworkUri'
                                description: |
                                  Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/[region]/subnetworks/sub0 projects/[project_id]/regions/[region]/subnetworks/sub0 sub0
                              - !ruby/object:Api::Type::Boolean
                                name: 'internalIpOnly'
                                description: |
                                  Optional. This setting applies to subnetwork-enabled networks. It is set to true by default in clusters created with image versions 2.2.x.When set to true: All cluster VMs have internal IP addresses. Google Private Access (https://cloud.google.com/vpc/docs/private-google-access) must be enabled to access Dataproc and other Google Cloud APIs. Off-cluster dependencies must be configured to be accessible without external IP addresses.When set to false: Cluster VMs are not restricted to internal IP addresses. Ephemeral external IP addresses are assigned to each cluster VM.
                              - !ruby/object:Api::Type::Enum
                                name: 'privateIpv6GoogleAccess'
                                description: |
                                  Optional. The type of IPv6 access for a cluster.
                                values:
                                  - :PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED
                                  - :INHERIT_FROM_SUBNETWORK
                                  - :OUTBOUND
                                  - :BIDIRECTIONAL
                              - !ruby/object:Api::Type::String
                                name: 'serviceAccount'
                                description: |
                                  Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
                              - !ruby/object:Api::Type::Array
                                name: 'serviceAccountScopes'
                                description: |
                                  Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'tags'
                                description: |
                                  The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::NestedObject
                                name: 'metadata'
                                description: |
                                  Optional. The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
                                properties:
                                  - !ruby/object:Api::Type::String
                                    name: 'additionalProperties'
                                    description: |
                                      
                              - !ruby/object:Api::Type::NestedObject
                                name: 'reservationAffinity'
                                description: |
                                  Reservation Affinity for consuming Zonal reservation.
                                properties:
                                    - !ruby/object:Api::Type::Enum
                                      name: 'consumeReservationType'
                                      description: |
                                        Optional. Type of reservation to consume
                                      values:
                                        - :TYPE_UNSPECIFIED
                                        - :NO_RESERVATION
                                        - :ANY_RESERVATION
                                        - :SPECIFIC_RESERVATION
                                    - !ruby/object:Api::Type::String
                                      name: 'key'
                                      description: |
                                        Optional. Corresponds to the label key of reservation resource.
                                    - !ruby/object:Api::Type::Array
                                      name: 'values'
                                      description: |
                                        Optional. Corresponds to the label values of reservation resource.
                                      item_type: Api::Type::String
                              - !ruby/object:Api::Type::NestedObject
                                name: 'nodeGroupAffinity'
                                description: |
                                  Node Group Affinity for clusters using sole-tenant node groups. The Dataproc NodeGroupAffinity resource is not related to the Dataproc NodeGroup resource.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'nodeGroupUri'
                                      description: |
                                        Required. The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 node-group-1
                              - !ruby/object:Api::Type::NestedObject
                                name: 'shieldedInstanceConfig'
                                description: |
                                  Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
                                properties:
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableSecureBoot'
                                      description: |
                                        Optional. Defines whether instances have Secure Boot enabled.
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableVtpm'
                                      description: |
                                        Optional. Defines whether instances have the vTPM enabled.
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableIntegrityMonitoring'
                                      description: |
                                        Optional. Defines whether instances have integrity monitoring enabled.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'confidentialInstanceConfig'
                                description: |
                                  Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)
                                properties:
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableConfidentialCompute'
                                      description: |
                                        Optional. Defines whether the instance should have confidential compute enabled.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'masterConfig'
                          description: |
                            The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'numInstances'
                                description: |
                                  Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                              - !ruby/object:Api::Type::Array
                                name: 'instanceNames'
                                description: |
                                  Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'instanceReferences'
                                description: |
                                  Output only. List of references to Compute Engine instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceName'
                                      description: |
                                        The user-friendly name of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceId'
                                      description: |
                                        The unique identifier of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicKey'
                                      description: |
                                        The public RSA key used for sharing data with this instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicEciesKey'
                                      description: |
                                        The public ECIES key used for sharing data with this instance.
                              - !ruby/object:Api::Type::String
                                name: 'imageUri'
                                description: |
                                  Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                              - !ruby/object:Api::Type::String
                                name: 'machineTypeUri'
                                description: |
                                  Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'diskConfig'
                                description: |
                                  Specifies the config of disk options for a group of VM instances.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'bootDiskType'
                                      description: |
                                        Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'bootDiskSizeGb'
                                      description: |
                                        Optional. Size in GB of the boot disk (default is 500GB).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'numLocalSsds'
                                      description: |
                                        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                    - !ruby/object:Api::Type::String
                                      name: 'localSsdInterface'
                                      description: |
                                        Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                              - !ruby/object:Api::Type::Boolean
                                name: 'isPreemptible'
                                description: |
                                  Output only. Specifies that this instance group contains preemptible instances.
                              - !ruby/object:Api::Type::Enum
                                name: 'preemptibility'
                                description: |
                                  Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                values:
                                  - :PREEMPTIBILITY_UNSPECIFIED
                                  - :NON_PREEMPTIBLE
                                  - :PREEMPTIBLE
                                  - :SPOT
                              - !ruby/object:Api::Type::NestedObject
                                name: 'managedGroupConfig'
                                description: |
                                  Specifies the resources used to actively manage an instance group.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceTemplateName'
                                      description: |
                                        Output only. The name of the Instance Template used for the Managed Instance Group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerName'
                                      description: |
                                        Output only. The name of the Instance Group Manager for this group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerUri'
                                      description: |
                                        Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                              - !ruby/object:Api::Type::Array
                                name: 'accelerators'
                                description: |
                                  Optional. The Compute Engine accelerator configuration for these instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'acceleratorTypeUri'
                                      description: |
                                        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'acceleratorCount'
                                      description: |
                                        The number of the accelerator cards of this type exposed to this instance.
                              - !ruby/object:Api::Type::String
                                name: 'minCpuPlatform'
                                description: |
                                  Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                              - !ruby/object:Api::Type::Integer
                                name: 'minNumInstances'
                                description: |
                                  Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'instanceFlexibilityPolicy'
                                description: |
                                  Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionList'
                                      description: |
                                        Optional. List of instance selection options that the group will use when creating new VMs.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'machineTypes'
                                            description: |
                                              Optional. Full machine-type names, e.g. "n1-standard-16".
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Integer
                                            name: 'rank'
                                            description: |
                                              Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionResults'
                                      description: |
                                        Output only. A list of instance selection results in the group.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'machineType'
                                            description: |
                                              Output only. Full machine-type names, e.g. "n1-standard-16".
                                          - !ruby/object:Api::Type::Integer
                                            name: 'vmCount'
                                            description: |
                                              Output only. Number of VM provisioned with the machine_type.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'startupConfig'
                                description: |
                                  Configuration to handle the startup of instances during cluster create and update process.
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'requiredRegistrationFraction'
                                      description: |
                                        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'workerConfig'
                          description: |
                            The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'numInstances'
                                description: |
                                  Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                              - !ruby/object:Api::Type::Array
                                name: 'instanceNames'
                                description: |
                                  Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'instanceReferences'
                                description: |
                                  Output only. List of references to Compute Engine instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceName'
                                      description: |
                                        The user-friendly name of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceId'
                                      description: |
                                        The unique identifier of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicKey'
                                      description: |
                                        The public RSA key used for sharing data with this instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicEciesKey'
                                      description: |
                                        The public ECIES key used for sharing data with this instance.
                              - !ruby/object:Api::Type::String
                                name: 'imageUri'
                                description: |
                                  Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                              - !ruby/object:Api::Type::String
                                name: 'machineTypeUri'
                                description: |
                                  Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'diskConfig'
                                description: |
                                  Specifies the config of disk options for a group of VM instances.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'bootDiskType'
                                      description: |
                                        Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'bootDiskSizeGb'
                                      description: |
                                        Optional. Size in GB of the boot disk (default is 500GB).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'numLocalSsds'
                                      description: |
                                        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                    - !ruby/object:Api::Type::String
                                      name: 'localSsdInterface'
                                      description: |
                                        Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                              - !ruby/object:Api::Type::Boolean
                                name: 'isPreemptible'
                                description: |
                                  Output only. Specifies that this instance group contains preemptible instances.
                              - !ruby/object:Api::Type::Enum
                                name: 'preemptibility'
                                description: |
                                  Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                values:
                                  - :PREEMPTIBILITY_UNSPECIFIED
                                  - :NON_PREEMPTIBLE
                                  - :PREEMPTIBLE
                                  - :SPOT
                              - !ruby/object:Api::Type::NestedObject
                                name: 'managedGroupConfig'
                                description: |
                                  Specifies the resources used to actively manage an instance group.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceTemplateName'
                                      description: |
                                        Output only. The name of the Instance Template used for the Managed Instance Group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerName'
                                      description: |
                                        Output only. The name of the Instance Group Manager for this group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerUri'
                                      description: |
                                        Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                              - !ruby/object:Api::Type::Array
                                name: 'accelerators'
                                description: |
                                  Optional. The Compute Engine accelerator configuration for these instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'acceleratorTypeUri'
                                      description: |
                                        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'acceleratorCount'
                                      description: |
                                        The number of the accelerator cards of this type exposed to this instance.
                              - !ruby/object:Api::Type::String
                                name: 'minCpuPlatform'
                                description: |
                                  Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                              - !ruby/object:Api::Type::Integer
                                name: 'minNumInstances'
                                description: |
                                  Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'instanceFlexibilityPolicy'
                                description: |
                                  Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionList'
                                      description: |
                                        Optional. List of instance selection options that the group will use when creating new VMs.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'machineTypes'
                                            description: |
                                              Optional. Full machine-type names, e.g. "n1-standard-16".
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Integer
                                            name: 'rank'
                                            description: |
                                              Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionResults'
                                      description: |
                                        Output only. A list of instance selection results in the group.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'machineType'
                                            description: |
                                              Output only. Full machine-type names, e.g. "n1-standard-16".
                                          - !ruby/object:Api::Type::Integer
                                            name: 'vmCount'
                                            description: |
                                              Output only. Number of VM provisioned with the machine_type.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'startupConfig'
                                description: |
                                  Configuration to handle the startup of instances during cluster create and update process.
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'requiredRegistrationFraction'
                                      description: |
                                        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'secondaryWorkerConfig'
                          description: |
                            The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                          properties:
                              - !ruby/object:Api::Type::Integer
                                name: 'numInstances'
                                description: |
                                  Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                              - !ruby/object:Api::Type::Array
                                name: 'instanceNames'
                                description: |
                                  Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                item_type: Api::Type::String
                              - !ruby/object:Api::Type::Array
                                name: 'instanceReferences'
                                description: |
                                  Output only. List of references to Compute Engine instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceName'
                                      description: |
                                        The user-friendly name of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceId'
                                      description: |
                                        The unique identifier of the Compute Engine instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicKey'
                                      description: |
                                        The public RSA key used for sharing data with this instance.
                                    - !ruby/object:Api::Type::String
                                      name: 'publicEciesKey'
                                      description: |
                                        The public ECIES key used for sharing data with this instance.
                              - !ruby/object:Api::Type::String
                                name: 'imageUri'
                                description: |
                                  Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                              - !ruby/object:Api::Type::String
                                name: 'machineTypeUri'
                                description: |
                                  Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'diskConfig'
                                description: |
                                  Specifies the config of disk options for a group of VM instances.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'bootDiskType'
                                      description: |
                                        Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'bootDiskSizeGb'
                                      description: |
                                        Optional. Size in GB of the boot disk (default is 500GB).
                                    - !ruby/object:Api::Type::Integer
                                      name: 'numLocalSsds'
                                      description: |
                                        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                    - !ruby/object:Api::Type::String
                                      name: 'localSsdInterface'
                                      description: |
                                        Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                              - !ruby/object:Api::Type::Boolean
                                name: 'isPreemptible'
                                description: |
                                  Output only. Specifies that this instance group contains preemptible instances.
                              - !ruby/object:Api::Type::Enum
                                name: 'preemptibility'
                                description: |
                                  Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                values:
                                  - :PREEMPTIBILITY_UNSPECIFIED
                                  - :NON_PREEMPTIBLE
                                  - :PREEMPTIBLE
                                  - :SPOT
                              - !ruby/object:Api::Type::NestedObject
                                name: 'managedGroupConfig'
                                description: |
                                  Specifies the resources used to actively manage an instance group.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceTemplateName'
                                      description: |
                                        Output only. The name of the Instance Template used for the Managed Instance Group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerName'
                                      description: |
                                        Output only. The name of the Instance Group Manager for this group.
                                    - !ruby/object:Api::Type::String
                                      name: 'instanceGroupManagerUri'
                                      description: |
                                        Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                              - !ruby/object:Api::Type::Array
                                name: 'accelerators'
                                description: |
                                  Optional. The Compute Engine accelerator configuration for these instances.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'acceleratorTypeUri'
                                      description: |
                                        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'acceleratorCount'
                                      description: |
                                        The number of the accelerator cards of this type exposed to this instance.
                              - !ruby/object:Api::Type::String
                                name: 'minCpuPlatform'
                                description: |
                                  Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                              - !ruby/object:Api::Type::Integer
                                name: 'minNumInstances'
                                description: |
                                  Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'instanceFlexibilityPolicy'
                                description: |
                                  Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                properties:
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionList'
                                      description: |
                                        Optional. List of instance selection options that the group will use when creating new VMs.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::Array
                                            name: 'machineTypes'
                                            description: |
                                              Optional. Full machine-type names, e.g. "n1-standard-16".
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Integer
                                            name: 'rank'
                                            description: |
                                              Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                    - !ruby/object:Api::Type::Array
                                      name: 'instanceSelectionResults'
                                      description: |
                                        Output only. A list of instance selection results in the group.
                                      item_type: !ruby/object:Api::Type::NestedObject
                                        properties:
                                          - !ruby/object:Api::Type::String
                                            name: 'machineType'
                                            description: |
                                              Output only. Full machine-type names, e.g. "n1-standard-16".
                                          - !ruby/object:Api::Type::Integer
                                            name: 'vmCount'
                                            description: |
                                              Output only. Number of VM provisioned with the machine_type.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'startupConfig'
                                description: |
                                  Configuration to handle the startup of instances during cluster create and update process.
                                properties:
                                    - !ruby/object:Api::Type::Integer
                                      name: 'requiredRegistrationFraction'
                                      description: |
                                        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'softwareConfig'
                          description: |
                            Specifies the selection and config of software inside the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'imageVersion'
                                description: |
                                  Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'properties'
                                description: |
                                  Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
                                properties:
                                  - !ruby/object:Api::Type::String
                                    name: 'additionalProperties'
                                    description: |
                                      
                              - !ruby/object:Api::Type::Array
                                name: 'optionalComponents'
                                description: |
                                  Optional. The set of components to activate on the cluster.
                                item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'initializationActions'
                          description: |
                            Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi 
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::String
                                name: 'executableFile'
                                description: |
                                  Required. Cloud Storage URI of executable file.
                              - !ruby/object:Api::Type::String
                                name: 'executionTimeout'
                                description: |
                                  Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'encryptionConfig'
                          description: |
                            Encryption settings for the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'gcePdKmsKeyName'
                                description: |
                                  Optional. The Cloud KMS key resource name to use for persistent disk encryption for all instances in the cluster. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.
                              - !ruby/object:Api::Type::String
                                name: 'kmsKey'
                                description: |
                                  Optional. The Cloud KMS key resource name to use for cluster persistent disk and job argument encryption. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.When this key resource name is provided, the following job arguments of the following job types submitted to the cluster are encrypted using CMEK: FlinkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/FlinkJob) HadoopJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/HadoopJob) SparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkJob) SparkRJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkRJob) PySparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/PySparkJob) SparkSqlJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkSqlJob) scriptVariables and queryList.queries HiveJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/HiveJob) scriptVariables and queryList.queries PigJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PigJob) scriptVariables and queryList.queries PrestoJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PrestoJob) scriptVariables and queryList.queries
                        - !ruby/object:Api::Type::NestedObject
                          name: 'autoscalingConfig'
                          description: |
                            Autoscaling Policy config associated with the cluster.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'policyUri'
                                description: |
                                  Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'securityConfig'
                          description: |
                            Security related configuration, including encryption, Kerberos, etc.
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'kerberosConfig'
                                description: |
                                  Specifies Kerberos related configuration.
                                properties:
                                    - !ruby/object:Api::Type::Boolean
                                      name: 'enableKerberos'
                                      description: |
                                        Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
                                    - !ruby/object:Api::Type::String
                                      name: 'rootPrincipalPasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
                                    - !ruby/object:Api::Type::String
                                      name: 'kmsKeyUri'
                                      description: |
                                        Optional. The URI of the KMS key used to encrypt sensitive files.
                                    - !ruby/object:Api::Type::String
                                      name: 'keystoreUri'
                                      description: |
                                        Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
                                    - !ruby/object:Api::Type::String
                                      name: 'truststoreUri'
                                      description: |
                                        Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
                                    - !ruby/object:Api::Type::String
                                      name: 'keystorePasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
                                    - !ruby/object:Api::Type::String
                                      name: 'keyPasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
                                    - !ruby/object:Api::Type::String
                                      name: 'truststorePasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustRealm'
                                      description: |
                                        Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustKdc'
                                      description: |
                                        Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustAdminServer'
                                      description: |
                                        Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
                                    - !ruby/object:Api::Type::String
                                      name: 'crossRealmTrustSharedPasswordUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
                                    - !ruby/object:Api::Type::String
                                      name: 'kdcDbKeyUri'
                                      description: |
                                        Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
                                    - !ruby/object:Api::Type::Integer
                                      name: 'tgtLifetimeHours'
                                      description: |
                                        Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
                                    - !ruby/object:Api::Type::String
                                      name: 'realm'
                                      description: |
                                        Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
                              - !ruby/object:Api::Type::NestedObject
                                name: 'identityConfig'
                                description: |
                                  Identity related configuration, including service account based secure multi-tenancy user mappings.
                                properties:
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'userServiceAccountMapping'
                                      description: |
                                        Required. Map of user to service account.
                                      properties:
                                        - !ruby/object:Api::Type::String
                                          name: 'additionalProperties'
                                          description: |
                                            
                        - !ruby/object:Api::Type::NestedObject
                          name: 'lifecycleConfig'
                          description: |
                            Specifies the cluster auto-delete schedule configuration.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'idleDeleteTtl'
                                description: |
                                  Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                              - !ruby/object:Api::Type::String
                                name: 'autoDeleteTime'
                                description: |
                                  Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                              - !ruby/object:Api::Type::String
                                name: 'autoDeleteTtl'
                                description: |
                                  Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                              - !ruby/object:Api::Type::String
                                name: 'idleStartTime'
                                description: |
                                  Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
                        - !ruby/object:Api::Type::NestedObject
                          name: 'endpointConfig'
                          description: |
                            Endpoint config for this cluster
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'httpPorts'
                                description: |
                                  Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.
                                properties:
                                  - !ruby/object:Api::Type::String
                                    name: 'additionalProperties'
                                    description: |
                                      
                              - !ruby/object:Api::Type::Boolean
                                name: 'enableHttpPortAccess'
                                description: |
                                  Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'metastoreConfig'
                          description: |
                            Specifies a Metastore configuration.
                          properties:
                              - !ruby/object:Api::Type::String
                                name: 'dataprocMetastoreService'
                                description: |
                                  Required. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]
                        - !ruby/object:Api::Type::NestedObject
                          name: 'gkeClusterConfig'
                          description: |
                            The cluster's GKE config.
                          properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'namespacedGkeDeploymentTarget'
                                description: |
                                  Deprecated. Used only for the deprecated beta. A full, namespace-isolated deployment target for an existing GKE cluster.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'targetGkeCluster'
                                      description: |
                                        Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
                                    - !ruby/object:Api::Type::String
                                      name: 'clusterNamespace'
                                      description: |
                                        Optional. A namespace within the GKE cluster to deploy into.
                              - !ruby/object:Api::Type::String
                                name: 'gkeClusterTarget'
                                description: |
                                  Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
                              - !ruby/object:Api::Type::Array
                                name: 'nodePoolTarget'
                                description: |
                                  Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'nodePool'
                                      description: |
                                        Required. The target GKE node pool. Format: 'projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'
                                    - !ruby/object:Api::Type::Array
                                      name: 'roles'
                                      description: |
                                        Required. The roles associated with the GKE node pool.
                                      item_type: Api::Type::String
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'nodePoolConfig'
                                      description: |
                                        The configuration of a GKE node pool used by a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/concepts/jobs/dataproc-gke#create-a-dataproc-on-gke-cluster).
                                      properties:
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'config'
                                            description: |
                                              Parameters that describe cluster nodes.
                                            properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'machineType'
                                                  description: |
                                                    Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'localSsdCount'
                                                  description: |
                                                    Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
                                                - !ruby/object:Api::Type::Boolean
                                                  name: 'preemptible'
                                                  description: |
                                                    Optional. Whether the nodes are created as legacy preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
                                                - !ruby/object:Api::Type::Array
                                                  name: 'accelerators'
                                                  description: |
                                                    Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
                                                  item_type: !ruby/object:Api::Type::NestedObject
                                                    properties:
                                                      - !ruby/object:Api::Type::String
                                                        name: 'acceleratorCount'
                                                        description: |
                                                          The number of accelerator cards exposed to an instance.
                                                      - !ruby/object:Api::Type::String
                                                        name: 'acceleratorType'
                                                        description: |
                                                          The accelerator type resource namename (see GPUs on Compute Engine).
                                                      - !ruby/object:Api::Type::String
                                                        name: 'gpuPartitionSize'
                                                        description: |
                                                          Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
                                                - !ruby/object:Api::Type::String
                                                  name: 'minCpuPlatform'
                                                  description: |
                                                    Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as "Intel Haswell"` or Intel Sandy Bridge".
                                                - !ruby/object:Api::Type::String
                                                  name: 'bootDiskKmsKey'
                                                  description: |
                                                    Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}
                                                - !ruby/object:Api::Type::Boolean
                                                  name: 'spot'
                                                  description: |
                                                    Optional. Whether the nodes are created as Spot VM instances (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
                                          - !ruby/object:Api::Type::Array
                                            name: 'locations'
                                            description: |
                                              Optional. The list of Compute Engine zones (https://cloud.google.com/compute/docs/zones#available) where node pool nodes associated with a Dataproc on GKE virtual cluster will be located.Note: All node pools associated with a virtual cluster must be located in the same region as the virtual cluster, and they must be located in the same zone within that region.If a location is not specified during node pool creation, Dataproc on GKE will choose the zone.
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'autoscaling'
                                            description: |
                                              GkeNodePoolAutoscaling contains information the cluster autoscaler needs to adjust the size of the node pool to the current cluster usage.
                                            properties:
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'minNodeCount'
                                                  description: |
                                                    The minimum number of nodes in the node pool. Must be >= 0 and <= max_node_count.
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'maxNodeCount'
                                                  description: |
                                                    The maximum number of nodes in the node pool. Must be >= min_node_count, and must be > 0. Note: Quota must be sufficient to scale up the cluster.
                        - !ruby/object:Api::Type::NestedObject
                          name: 'dataprocMetricConfig'
                          description: |
                            Dataproc metric config.
                          properties:
                              - !ruby/object:Api::Type::Array
                                name: 'metrics'
                                description: |
                                  Required. Metrics sources to enable.
                                item_type: !ruby/object:Api::Type::NestedObject
                                  properties:
                                    - !ruby/object:Api::Type::Enum
                                      name: 'metricSource'
                                      description: |
                                        Required. A standard set of metrics is collected unless metricOverrides are specified for the metric source (see Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) for more information).
                                      values:
                                        - :METRIC_SOURCE_UNSPECIFIED
                                        - :MONITORING_AGENT_DEFAULTS
                                        - :HDFS
                                        - :SPARK
                                        - :YARN
                                        - :SPARK_HISTORY_SERVER
                                        - :HIVESERVER2
                                        - :HIVEMETASTORE
                                        - :FLINK
                                    - !ruby/object:Api::Type::Array
                                      name: 'metricOverrides'
                                      description: |
                                        Optional. Specify one or more Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) to collect for the metric course (for the SPARK metric source (any Spark metric (https://spark.apache.org/docs/latest/monitoring.html#metrics) can be specified).Provide metrics in the following format: METRIC_SOURCE: INSTANCE:GROUP:METRIC Use camelcase as appropriate.Examples: yarn:ResourceManager:QueueMetrics:AppsCompleted spark:driver:DAGScheduler:job.allJobs sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed hiveserver2:JVM:Memory:NonHeapMemoryUsage.used Notes: Only the specified overridden metrics are collected for the metric source. For example, if one or more spark:executive metrics are listed as metric overrides, other SPARK metrics are not collected. The collection of the metrics for other enabled custom metric sources is unaffected. For example, if both SPARK andd YARN metric sources are enabled, and overrides are provided for Spark metrics only, all YARN metrics are collected.
                                      item_type: Api::Type::String
                        - !ruby/object:Api::Type::Array
                          name: 'auxiliaryNodeGroups'
                          description: |
                            Optional. The node group settings.
                          item_type: !ruby/object:Api::Type::NestedObject
                            properties:
                              - !ruby/object:Api::Type::NestedObject
                                name: 'nodeGroup'
                                description: |
                                  Dataproc Node Group. The Dataproc NodeGroup resource is not related to the Dataproc NodeGroupAffinity resource.
                                properties:
                                    - !ruby/object:Api::Type::String
                                      name: 'name'
                                      description: |
                                        The Node group resource name (https://aip.dev/122).
                                    - !ruby/object:Api::Type::Array
                                      name: 'roles'
                                      description: |
                                        Required. Node group roles.
                                      item_type: Api::Type::String
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'nodeGroupConfig'
                                      description: |
                                        The config settings for Compute Engine resources in an instance group, such as a master or worker group.
                                      properties:
                                          - !ruby/object:Api::Type::Integer
                                            name: 'numInstances'
                                            description: |
                                              Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
                                          - !ruby/object:Api::Type::Array
                                            name: 'instanceNames'
                                            description: |
                                              Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
                                            item_type: Api::Type::String
                                          - !ruby/object:Api::Type::Array
                                            name: 'instanceReferences'
                                            description: |
                                              Output only. List of references to Compute Engine instances.
                                            item_type: !ruby/object:Api::Type::NestedObject
                                              properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceName'
                                                  description: |
                                                    The user-friendly name of the Compute Engine instance.
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceId'
                                                  description: |
                                                    The unique identifier of the Compute Engine instance.
                                                - !ruby/object:Api::Type::String
                                                  name: 'publicKey'
                                                  description: |
                                                    The public RSA key used for sharing data with this instance.
                                                - !ruby/object:Api::Type::String
                                                  name: 'publicEciesKey'
                                                  description: |
                                                    The public ECIES key used for sharing data with this instance.
                                          - !ruby/object:Api::Type::String
                                            name: 'imageUri'
                                            description: |
                                              Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default.
                                          - !ruby/object:Api::Type::String
                                            name: 'machineTypeUri'
                                            description: |
                                              Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2.
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'diskConfig'
                                            description: |
                                              Specifies the config of disk options for a group of VM instances.
                                            properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'bootDiskType'
                                                  description: |
                                                    Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'bootDiskSizeGb'
                                                  description: |
                                                    Optional. Size in GB of the boot disk (default is 500GB).
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'numLocalSsds'
                                                  description: |
                                                    Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
                                                - !ruby/object:Api::Type::String
                                                  name: 'localSsdInterface'
                                                  description: |
                                                    Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
                                          - !ruby/object:Api::Type::Boolean
                                            name: 'isPreemptible'
                                            description: |
                                              Output only. Specifies that this instance group contains preemptible instances.
                                          - !ruby/object:Api::Type::Enum
                                            name: 'preemptibility'
                                            description: |
                                              Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
                                            values:
                                              - :PREEMPTIBILITY_UNSPECIFIED
                                              - :NON_PREEMPTIBLE
                                              - :PREEMPTIBLE
                                              - :SPOT
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'managedGroupConfig'
                                            description: |
                                              Specifies the resources used to actively manage an instance group.
                                            properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceTemplateName'
                                                  description: |
                                                    Output only. The name of the Instance Template used for the Managed Instance Group.
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceGroupManagerName'
                                                  description: |
                                                    Output only. The name of the Instance Group Manager for this group.
                                                - !ruby/object:Api::Type::String
                                                  name: 'instanceGroupManagerUri'
                                                  description: |
                                                    Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
                                          - !ruby/object:Api::Type::Array
                                            name: 'accelerators'
                                            description: |
                                              Optional. The Compute Engine accelerator configuration for these instances.
                                            item_type: !ruby/object:Api::Type::NestedObject
                                              properties:
                                                - !ruby/object:Api::Type::String
                                                  name: 'acceleratorTypeUri'
                                                  description: |
                                                    Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4 nvidia-tesla-t4Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-t4.
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'acceleratorCount'
                                                  description: |
                                                    The number of the accelerator cards of this type exposed to this instance.
                                          - !ruby/object:Api::Type::String
                                            name: 'minCpuPlatform'
                                            description: |
                                              Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
                                          - !ruby/object:Api::Type::Integer
                                            name: 'minNumInstances'
                                            description: |
                                              Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted.
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'instanceFlexibilityPolicy'
                                            description: |
                                              Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
                                            properties:
                                                - !ruby/object:Api::Type::Array
                                                  name: 'instanceSelectionList'
                                                  description: |
                                                    Optional. List of instance selection options that the group will use when creating new VMs.
                                                  item_type: !ruby/object:Api::Type::NestedObject
                                                    properties:
                                                      - !ruby/object:Api::Type::Array
                                                        name: 'machineTypes'
                                                        description: |
                                                          Optional. Full machine-type names, e.g. "n1-standard-16".
                                                        item_type: Api::Type::String
                                                      - !ruby/object:Api::Type::Integer
                                                        name: 'rank'
                                                        description: |
                                                          Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
                                                - !ruby/object:Api::Type::Array
                                                  name: 'instanceSelectionResults'
                                                  description: |
                                                    Output only. A list of instance selection results in the group.
                                                  item_type: !ruby/object:Api::Type::NestedObject
                                                    properties:
                                                      - !ruby/object:Api::Type::String
                                                        name: 'machineType'
                                                        description: |
                                                          Output only. Full machine-type names, e.g. "n1-standard-16".
                                                      - !ruby/object:Api::Type::Integer
                                                        name: 'vmCount'
                                                        description: |
                                                          Output only. Number of VM provisioned with the machine_type.
                                          - !ruby/object:Api::Type::NestedObject
                                            name: 'startupConfig'
                                            description: |
                                              Configuration to handle the startup of instances during cluster create and update process.
                                            properties:
                                                - !ruby/object:Api::Type::Integer
                                                  name: 'requiredRegistrationFraction'
                                                  description: |
                                                    Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
                                    - !ruby/object:Api::Type::NestedObject
                                      name: 'labels'
                                      description: |
                                        Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labelsn.
                                      properties:
                                        - !ruby/object:Api::Type::String
                                          name: 'additionalProperties'
                                          description: |
                                            
                              - !ruby/object:Api::Type::String
                                name: 'nodeGroupId'
                                description: |
                                  Optional. A node group ID. Generated if not specified.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'labels'
                    description: |
                      Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
            - !ruby/object:Api::Type::NestedObject
              name: 'clusterSelector'
              description: |
                A selector that chooses target cluster for jobs based on metadata.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'zone'
                    description: |
                      Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'clusterLabels'
                    description: |
                      Required. The cluster labels. Cluster must have all labels to match.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
      - !ruby/object:Api::Type::Array
        name: 'jobs'
        description: |
          Required. The Directed Acyclic Graph of Jobs to submit.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'stepId'
              description: |
                Required. The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
            - !ruby/object:Api::Type::NestedObject
              name: 'hadoopJob'
              description: |
                A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainJarFileUri'
                    description: |
                      The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
                  - !ruby/object:Api::Type::String
                    name: 'mainClass'
                    description: |
                      The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkJob'
              description: |
                A Dataproc job for running Apache Spark (https://spark.apache.org/) applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainJarFileUri'
                    description: |
                      The HCFS URI of the jar file that contains the main class.
                  - !ruby/object:Api::Type::String
                    name: 'mainClass'
                    description: |
                      The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in SparkJob.jar_file_uris.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'pysparkJob'
              description: |
                A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainPythonFileUri'
                    description: |
                      Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'pythonFileUris'
                    description: |
                      Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'hiveJob'
              description: |
                A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains Hive queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'scriptVariables'
                    description: |
                      Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'pigJob'
              description: |
                A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains the Pig queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'scriptVariables'
                    description: |
                      Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkRJob'
              description: |
                A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainRFileUri'
                    description: |
                      Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'fileUris'
                    description: |
                      Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'archiveUris'
                    description: |
                      Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkSqlJob'
              description: |
                A Dataproc job for running Apache Spark SQL (https://spark.apache.org/sql/) queries.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains SQL queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'scriptVariables'
                    description: |
                      Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API might be overwritten.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'prestoJob'
              description: |
                A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains SQL queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::String
                    name: 'outputFormat'
                    description: |
                      Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
                  - !ruby/object:Api::Type::Array
                    name: 'clientTags'
                    description: |
                      Optional. Presto client tags to attach to this query
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'trinoJob'
              description: |
                A Dataproc job for running Trino (https://trino.io/) queries. IMPORTANT: The Dataproc Trino Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/trino) must be enabled when the cluster is created to submit a Trino job to the cluster.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'queryFileUri'
                    description: |
                      The HCFS URI of the script that contains SQL queries.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'queryList'
                    description: |
                      A list of queries to run on a cluster.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'queries'
                          description: |
                            Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } 
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::Boolean
                    name: 'continueOnFailure'
                    description: |
                      Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
                  - !ruby/object:Api::Type::String
                    name: 'outputFormat'
                    description: |
                      Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats
                  - !ruby/object:Api::Type::Array
                    name: 'clientTags'
                    description: |
                      Optional. Trino client tags to attach to this query
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values. Used to set Trino session properties (https://trino.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Trino CLI
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'flinkJob'
              description: |
                A Dataproc job for running Apache Flink applications on YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'mainJarFileUri'
                    description: |
                      The HCFS URI of the jar file that contains the main class.
                  - !ruby/object:Api::Type::String
                    name: 'mainClass'
                    description: |
                      The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jarFileUris.
                  - !ruby/object:Api::Type::Array
                    name: 'args'
                    description: |
                      Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::Array
                    name: 'jarFileUris'
                    description: |
                      Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Flink driver and tasks.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::String
                    name: 'savepointUri'
                    description: |
                      Optional. HCFS URI of the savepoint, which contains the last saved progress for starting the current job.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'properties'
                    description: |
                      Optional. A mapping of property names to values, used to configure Flink. Properties that conflict with values set by the Dataproc API might beoverwritten. Can include properties set in/etc/flink/conf/flink-defaults.conf and classes in user code.
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |
                          
                  - !ruby/object:Api::Type::NestedObject
                    name: 'loggingConfig'
                    description: |
                      The runtime logging config of the job.
                    properties:
                        - !ruby/object:Api::Type::NestedObject
                          name: 'driverLogLevels'
                          description: |
                            The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                          properties:
                            - !ruby/object:Api::Type::String
                              name: 'additionalProperties'
                              description: |
                                
            - !ruby/object:Api::Type::NestedObject
              name: 'labels'
              description: |
                Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'scheduling'
              description: |
                Job scheduling options.
              properties:
                  - !ruby/object:Api::Type::Integer
                    name: 'maxFailuresPerHour'
                    description: |
                      Optional. Maximum number of times per hour a driver can be restarted as a result of driver exiting with non-zero code before job is reported failed.A job might be reported as thrashing if the driver exits with a non-zero code four times within a 10-minute window.Maximum value is 10.Note: This restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
                  - !ruby/object:Api::Type::Integer
                    name: 'maxFailuresTotal'
                    description: |
                      Optional. Maximum total number of times a driver can be restarted as a result of the driver exiting with a non-zero code. After the maximum number is reached, the job will be reported as failed.Maximum value is 240.Note: Currently, this restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
            - !ruby/object:Api::Type::Array
              name: 'prerequisiteStepIds'
              description: |
                Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
              item_type: Api::Type::String
      - !ruby/object:Api::Type::Array
        name: 'parameters'
        description: |
          Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.
            - !ruby/object:Api::Type::Array
              name: 'fields'
              description: |
                Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels'key' placement.clusterSelector.clusterLabels'key' placement.managedCluster.labels'key' placement.clusterSelector.clusterLabels'key' jobs'step-id'.labels'key' Jobs in the jobs list can be referenced by step-id: jobs'step-id'.hadoopJob.mainJarFileUri jobs'step-id'.hiveJob.queryFileUri jobs'step-id'.pySparkJob.mainPythonFileUri jobs'step-id'.hadoopJob.jarFileUris0 jobs'step-id'.hadoopJob.archiveUris0 jobs'step-id'.hadoopJob.fileUris0 jobs'step-id'.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs'step-id'.sparkJob.args0 Other examples: jobs'step-id'.hadoopJob.properties'key' jobs'step-id'.hadoopJob.args0 jobs'step-id'.hiveJob.scriptVariables'key' jobs'step-id'.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs'step-id'.sparkJob.args
              item_type: Api::Type::String
            - !ruby/object:Api::Type::String
              name: 'description'
              description: |
                Optional. Brief description of the parameter. Must not exceed 1024 characters.
            - !ruby/object:Api::Type::NestedObject
              name: 'validation'
              description: |
                Configuration for parameter validation.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'regex'
                    description: |
                      Validation based on regular expressions.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'regexes'
                          description: |
                            Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
                          item_type: Api::Type::String
                  - !ruby/object:Api::Type::NestedObject
                    name: 'values'
                    description: |
                      Validation based on a list of allowed values.
                    properties:
                        - !ruby/object:Api::Type::Array
                          name: 'values'
                          description: |
                            Required. List of allowed values for the parameter.
                          item_type: Api::Type::String
      - !ruby/object:Api::Type::String
        name: 'dagTimeout'
        description: |
          Optional. Timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10 minutes ("600s") to 24 hours ("86400s"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a managed cluster, the cluster is deleted.
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionConfig'
        description: |
          Encryption settings for encrypting workflow template job arguments.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKey'
              description: |
                Optional. The Cloud KMS key name to use for encrypting workflow template job arguments.When this this key is provided, the following workflow template job arguments (https://cloud.google.com/dataproc/docs/concepts/workflows/use-workflows#adding_jobs_to_a_template), if present, are CMEK encrypted (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_workflow_template_data): FlinkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/FlinkJob) HadoopJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/HadoopJob) SparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkJob) SparkRJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkRJob) PySparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/PySparkJob) SparkSqlJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkSqlJob) scriptVariables and queryList.queries HiveJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/HiveJob) scriptVariables and queryList.queries PigJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PigJob) scriptVariables and queryList.queries PrestoJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PrestoJob) scriptVariables and queryList.queries
  



  - !ruby/object:Api::Resource
    name: ProjectRegionJob
    base_url: 'projects/{{projectId}}/regions/{{region}}/jobs'
    self_link: 'projects/{{projectId}}/regions/{{region}}/jobs/{{jobId}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/dataproc/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A Dataproc job resource.
    properties:

      - !ruby/object:Api::Type::NestedObject
        name: 'reference'
        description: |
          Encapsulates the full scoping used to reference a job.
        properties:
            - !ruby/object:Api::Type::String
              name: 'projectId'
              description: |
                Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
            - !ruby/object:Api::Type::String
              name: 'jobId'
              description: |
                Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
      - !ruby/object:Api::Type::NestedObject
        name: 'placement'
        description: |
          Dataproc job config.
        properties:
            - !ruby/object:Api::Type::String
              name: 'clusterName'
              description: |
                Required. The name of the cluster where the job will be submitted.
            - !ruby/object:Api::Type::String
              name: 'clusterUuid'
              description: |
                Output only. A cluster UUID generated by the Dataproc service when the job is submitted.
            - !ruby/object:Api::Type::NestedObject
              name: 'clusterLabels'
              description: |
                Optional. Cluster labels to identify a cluster where the job will be submitted.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

      - !ruby/object:Api::Type::NestedObject
        name: 'hadoopJob'
        description: |
          A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
        properties:
            - !ruby/object:Api::Type::String
              name: 'mainJarFileUri'
              description: |
                The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
            - !ruby/object:Api::Type::String
              name: 'mainClass'
              description: |
                The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
            - !ruby/object:Api::Type::Array
              name: 'args'
              description: |
                Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'fileUris'
              description: |
                Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'archiveUris'
              description: |
                Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |

      - !ruby/object:Api::Type::NestedObject
        name: 'sparkJob'
        description: |
          A Dataproc job for running Apache Spark (https://spark.apache.org/) applications on YARN.
        properties:
            - !ruby/object:Api::Type::String
              name: 'mainJarFileUri'
              description: |
                The HCFS URI of the jar file that contains the main class.
            - !ruby/object:Api::Type::String
              name: 'mainClass'
              description: |
                The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in SparkJob.jar_file_uris.
            - !ruby/object:Api::Type::Array
              name: 'args'
              description: |
                Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'fileUris'
              description: |
                Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'archiveUris'
              description: |
                Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |

      - !ruby/object:Api::Type::NestedObject
        name: 'pysparkJob'
        description: |
          A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
        properties:
            - !ruby/object:Api::Type::String
              name: 'mainPythonFileUri'
              description: |
                Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.
            - !ruby/object:Api::Type::Array
              name: 'args'
              description: |
                Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'pythonFileUris'
              description: |
                Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'fileUris'
              description: |
                Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'archiveUris'
              description: |
                Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |

      - !ruby/object:Api::Type::NestedObject
        name: 'hiveJob'
        description: |
          A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
        properties:
            - !ruby/object:Api::Type::String
              name: 'queryFileUri'
              description: |
                The HCFS URI of the script that contains Hive queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'queryList'
              description: |
                A list of queries to run on a cluster.
              properties:
                  - !ruby/object:Api::Type::Array
                    name: 'queries'
                    description: |
                      Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::Boolean
              name: 'continueOnFailure'
              description: |
                Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'scriptVariables'
              description: |
                Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
              item_type: Api::Type::String
      - !ruby/object:Api::Type::NestedObject
        name: 'pigJob'
        description: |
          A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
        properties:
            - !ruby/object:Api::Type::String
              name: 'queryFileUri'
              description: |
                The HCFS URI of the script that contains the Pig queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'queryList'
              description: |
                A list of queries to run on a cluster.
              properties:
                  - !ruby/object:Api::Type::Array
                    name: 'queries'
                    description: |
                      Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::Boolean
              name: 'continueOnFailure'
              description: |
                Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'scriptVariables'
              description: |
                Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |

      - !ruby/object:Api::Type::NestedObject
        name: 'sparkRJob'
        description: |
          A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
        properties:
            - !ruby/object:Api::Type::String
              name: 'mainRFileUri'
              description: |
                Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.
            - !ruby/object:Api::Type::Array
              name: 'args'
              description: |
                Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'fileUris'
              description: |
                Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'archiveUris'
              description: |
                Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |

      - !ruby/object:Api::Type::NestedObject
        name: 'sparkSqlJob'
        description: |
          A Dataproc job for running Apache Spark SQL (https://spark.apache.org/sql/) queries.
        properties:
            - !ruby/object:Api::Type::String
              name: 'queryFileUri'
              description: |
                The HCFS URI of the script that contains SQL queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'queryList'
              description: |
                A list of queries to run on a cluster.
              properties:
                  - !ruby/object:Api::Type::Array
                    name: 'queries'
                    description: |
                      Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'scriptVariables'
              description: |
                Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API might be overwritten.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |

      - !ruby/object:Api::Type::NestedObject
        name: 'prestoJob'
        description: |
          A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.
        properties:
            - !ruby/object:Api::Type::String
              name: 'queryFileUri'
              description: |
                The HCFS URI of the script that contains SQL queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'queryList'
              description: |
                A list of queries to run on a cluster.
              properties:
                  - !ruby/object:Api::Type::Array
                    name: 'queries'
                    description: |
                      Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::Boolean
              name: 'continueOnFailure'
              description: |
                Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
            - !ruby/object:Api::Type::String
              name: 'outputFormat'
              description: |
                Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
            - !ruby/object:Api::Type::Array
              name: 'clientTags'
              description: |
                Optional. Presto client tags to attach to this query
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |

      - !ruby/object:Api::Type::NestedObject
        name: 'trinoJob'
        description: |
          A Dataproc job for running Trino (https://trino.io/) queries. IMPORTANT: The Dataproc Trino Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/trino) must be enabled when the cluster is created to submit a Trino job to the cluster.
        properties:
            - !ruby/object:Api::Type::String
              name: 'queryFileUri'
              description: |
                The HCFS URI of the script that contains SQL queries.
            - !ruby/object:Api::Type::NestedObject
              name: 'queryList'
              description: |
                A list of queries to run on a cluster.
              properties:
                  - !ruby/object:Api::Type::Array
                    name: 'queries'
                    description: |
                      Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } }
                    item_type: Api::Type::String
            - !ruby/object:Api::Type::Boolean
              name: 'continueOnFailure'
              description: |
                Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
            - !ruby/object:Api::Type::String
              name: 'outputFormat'
              description: |
                Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats
            - !ruby/object:Api::Type::Array
              name: 'clientTags'
              description: |
                Optional. Trino client tags to attach to this query
              item_type: Api::Type::String
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values. Used to set Trino session properties (https://trino.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Trino CLI
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |

      - !ruby/object:Api::Type::NestedObject
        name: 'flinkJob'
        description: |
          A Dataproc job for running Apache Flink applications on YARN.
        properties:
            - !ruby/object:Api::Type::String
              name: 'mainJarFileUri'
              description: |
                The HCFS URI of the jar file that contains the main class.
            - !ruby/object:Api::Type::String
              name: 'mainClass'
              description: |
                The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jarFileUris.
            - !ruby/object:Api::Type::Array
              name: 'args'
              description: |
                Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::Array
              name: 'jarFileUris'
              description: |
                Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Flink driver and tasks.
              item_type: Api::Type::String
            - !ruby/object:Api::Type::String
              name: 'savepointUri'
              description: |
                Optional. HCFS URI of the savepoint, which contains the last saved progress for starting the current job.
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, used to configure Flink. Properties that conflict with values set by the Dataproc API might beoverwritten. Can include properties set in/etc/flink/conf/flink-defaults.conf and classes in user code.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |

            - !ruby/object:Api::Type::NestedObject
              name: 'loggingConfig'
              description: |
                The runtime logging config of the job.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'driverLogLevels'
                    description: |
                      The per-package log levels for the driver. This can include "root" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'
                    properties:
                      - !ruby/object:Api::Type::String
                        name: 'additionalProperties'
                        description: |

      - !ruby/object:Api::Type::NestedObject
        name: 'status'
        description: |
          Dataproc job status.
        properties:
            - !ruby/object:Api::Type::Enum
              name: 'state'
              description: |
                Output only. A state message specifying the overall job state.
              values:
                - :STATE_UNSPECIFIED
                - :PENDING
                - :SETUP_DONE
                - :RUNNING
                - :CANCEL_PENDING
                - :CANCEL_STARTED
                - :CANCELLED
                - :DONE
                - :ERROR
                - :ATTEMPT_FAILURE
            - !ruby/object:Api::Type::String
              name: 'details'
              description: |
                Optional. Output only. Job state details, such as an error description if the state is ERROR.
            - !ruby/object:Api::Type::String
              name: 'stateStartTime'
              description: |
                Output only. The time when this state was entered.
            - !ruby/object:Api::Type::Enum
              name: 'substate'
              description: |
                Output only. Additional state information, which includes status reported by the agent.
              values:
                - :UNSPECIFIED
                - :SUBMITTED
                - :QUEUED
                - :STALE_STATUS
      - !ruby/object:Api::Type::Array
        name: 'statusHistory'
        description: |
          Output only. The previous job status.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Enum
              name: 'state'
              description: |
                Output only. A state message specifying the overall job state.
              values:
                - :STATE_UNSPECIFIED
                - :PENDING
                - :SETUP_DONE
                - :RUNNING
                - :CANCEL_PENDING
                - :CANCEL_STARTED
                - :CANCELLED
                - :DONE
                - :ERROR
                - :ATTEMPT_FAILURE
            - !ruby/object:Api::Type::String
              name: 'details'
              description: |
                Optional. Output only. Job state details, such as an error description if the state is ERROR.
            - !ruby/object:Api::Type::String
              name: 'stateStartTime'
              description: |
                Output only. The time when this state was entered.
            - !ruby/object:Api::Type::Enum
              name: 'substate'
              description: |
                Output only. Additional state information, which includes status reported by the agent.
              values:
                - :UNSPECIFIED
                - :SUBMITTED
                - :QUEUED
                - :STALE_STATUS
      - !ruby/object:Api::Type::Array
        name: 'yarnApplications'
        description: |
          Output only. The collection of YARN applications spun up by this job.Beta Feature: This report is available for testing purposes only. It might be changed before final release.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Required. The application name.
            - !ruby/object:Api::Type::Enum
              name: 'state'
              description: |
                Required. The application state.
              values:
                - :STATE_UNSPECIFIED
                - :NEW
                - :NEW_SAVING
                - :SUBMITTED
                - :ACCEPTED
                - :RUNNING
                - :FINISHED
                - :FAILED
                - :KILLED
            - !ruby/object:Api::Type::Integer
              name: 'progress'
              description: |
                Required. The numerical progress of the application, from 1 to 100.
            - !ruby/object:Api::Type::String
              name: 'trackingUrl'
              description: |
                Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.
      - !ruby/object:Api::Type::String
        name: 'driverOutputResourceUri'
        description: |
          Output only. A URI pointing to the location of the stdout of the job's driver program.
      - !ruby/object:Api::Type::String
        name: 'driverControlFilesUri'
        description: |
          Output only. If present, the location of miscellaneous control files which can be used as part of job setup and handling. If not present, control files might be placed in the same location as driver_output_uri.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          Optional. The labels to associate with this job. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a job.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |

      - !ruby/object:Api::Type::NestedObject
        name: 'scheduling'
        description: |
          Job scheduling options.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'maxFailuresPerHour'
              description: |
                Optional. Maximum number of times per hour a driver can be restarted as a result of driver exiting with non-zero code before job is reported failed.A job might be reported as thrashing if the driver exits with a non-zero code four times within a 10-minute window.Maximum value is 10.Note: This restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
            - !ruby/object:Api::Type::Integer
              name: 'maxFailuresTotal'
              description: |
                Optional. Maximum total number of times a driver can be restarted as a result of the driver exiting with a non-zero code. After the maximum number is reached, the job will be reported as failed.Maximum value is 240.Note: Currently, this restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template).
      - !ruby/object:Api::Type::String
        name: 'jobUuid'
        description: |
          Output only. A UUID that uniquely identifies a job within the project over time. This is in contrast to a user-settable reference.job_id that might be reused over time.
      - !ruby/object:Api::Type::Boolean
        name: 'done'
        description: |
          Output only. Indicates whether the job is completed. If the value is false, the job is still in progress. If true, the job is completed, and status.state field will indicate if it was successful, failed, or cancelled.
      - !ruby/object:Api::Type::NestedObject
        name: 'driverSchedulingConfig'
        description: |
          Driver scheduling configuration.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'memoryMb'
              description: |
                Required. The amount of memory in MB the driver is requesting.
            - !ruby/object:Api::Type::Integer
              name: 'vcores'
              description: |
                Required. The number of vCPUs the driver is requesting.
  



  - !ruby/object:Api::Resource
    name: ProjectRegionAutoscalingPolicy
    base_url: '{{+parent}}/autoscalingPolicies'
    self_link: '{{+name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/dataproc/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        Describes an autoscaling policy for Dataproc cluster autoscaler.
    properties:

      - !ruby/object:Api::Type::String
        name: 'id'
        description: |
          Required. The policy id.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The "resource name" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
      - !ruby/object:Api::Type::NestedObject
        name: 'basicAlgorithm'
        description: |
          Basic algorithm for autoscaling.
        properties:
            - !ruby/object:Api::Type::NestedObject
              name: 'yarnConfig'
              description: |
                Basic autoscaling configurations for YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'gracefulDecommissionTimeout'
                    description: |
                      Required. Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleUpFactor'
                    description: |
                      Required. Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleDownFactor'
                    description: |
                      Required. Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleUpMinWorkerFraction'
                    description: |
                      Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleDownMinWorkerFraction'
                    description: |
                      Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkStandaloneConfig'
              description: |
                Basic autoscaling configurations for Spark Standalone.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'gracefulDecommissionTimeout'
                    description: |
                      Required. Timeout for Spark graceful decommissioning of spark workers. Specifies the duration to wait for spark worker to complete spark decommissioning tasks before forcefully removing workers. Only applicable to downscaling operations.Bounds: 0s, 1d.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleUpFactor'
                    description: |
                      Required. Fraction of required workers to add to Spark Standalone clusters. A scale-up factor of 1.0 will result in scaling up so that there are no more required workers for the Spark Job (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling).Bounds: 0.0, 1.0.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleDownFactor'
                    description: |
                      Required. Fraction of required executors to remove from Spark Serverless clusters. A scale-down factor of 1.0 will result in scaling down so that there are no more executors for the Spark Job.(more aggressive scaling). A scale-down factor closer to 0 will result in a smaller magnitude of scaling donw (less aggressive scaling).Bounds: 0.0, 1.0.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleUpMinWorkerFraction'
                    description: |
                      Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleDownMinWorkerFraction'
                    description: |
                      Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
                  - !ruby/object:Api::Type::Boolean
                    name: 'removeOnlyIdleWorkers'
                    description: |
                      Optional. Remove only idle workers when scaling down cluster
            - !ruby/object:Api::Type::String
              name: 'cooldownPeriod'
              description: |
                Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.
      - !ruby/object:Api::Type::NestedObject
        name: 'workerConfig'
        description: |
          Configuration for the size bounds of an instance group, including its proportional size to other groups.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'minInstances'
              description: |
                Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
            - !ruby/object:Api::Type::Integer
              name: 'maxInstances'
              description: |
                Required. Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
            - !ruby/object:Api::Type::Integer
              name: 'weight'
              description: |
                Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
      - !ruby/object:Api::Type::NestedObject
        name: 'secondaryWorkerConfig'
        description: |
          Configuration for the size bounds of an instance group, including its proportional size to other groups.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'minInstances'
              description: |
                Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
            - !ruby/object:Api::Type::Integer
              name: 'maxInstances'
              description: |
                Required. Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
            - !ruby/object:Api::Type::Integer
              name: 'weight'
              description: |
                Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          Optional. The labels to associate with this autoscaling policy. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with an autoscaling policy.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
  



  - !ruby/object:Api::Resource
    name: ProjectRegionAutoscalingPolicy
    base_url: '{{+parent}}/autoscalingPolicies'
    self_link: '{{+name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/dataproc/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        Describes an autoscaling policy for Dataproc cluster autoscaler.
    properties:

      - !ruby/object:Api::Type::String
        name: 'id'
        description: |
          Required. The policy id.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Output only. The "resource name" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
      - !ruby/object:Api::Type::NestedObject
        name: 'basicAlgorithm'
        description: |
          Basic algorithm for autoscaling.
        properties:
            - !ruby/object:Api::Type::NestedObject
              name: 'yarnConfig'
              description: |
                Basic autoscaling configurations for YARN.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'gracefulDecommissionTimeout'
                    description: |
                      Required. Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleUpFactor'
                    description: |
                      Required. Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleDownFactor'
                    description: |
                      Required. Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleUpMinWorkerFraction'
                    description: |
                      Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleDownMinWorkerFraction'
                    description: |
                      Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkStandaloneConfig'
              description: |
                Basic autoscaling configurations for Spark Standalone.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'gracefulDecommissionTimeout'
                    description: |
                      Required. Timeout for Spark graceful decommissioning of spark workers. Specifies the duration to wait for spark worker to complete spark decommissioning tasks before forcefully removing workers. Only applicable to downscaling operations.Bounds: 0s, 1d.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleUpFactor'
                    description: |
                      Required. Fraction of required workers to add to Spark Standalone clusters. A scale-up factor of 1.0 will result in scaling up so that there are no more required workers for the Spark Job (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling).Bounds: 0.0, 1.0.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleDownFactor'
                    description: |
                      Required. Fraction of required executors to remove from Spark Serverless clusters. A scale-down factor of 1.0 will result in scaling down so that there are no more executors for the Spark Job.(more aggressive scaling). A scale-down factor closer to 0 will result in a smaller magnitude of scaling donw (less aggressive scaling).Bounds: 0.0, 1.0.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleUpMinWorkerFraction'
                    description: |
                      Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
                  - !ruby/object:Api::Type::Integer
                    name: 'scaleDownMinWorkerFraction'
                    description: |
                      Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.
                  - !ruby/object:Api::Type::Boolean
                    name: 'removeOnlyIdleWorkers'
                    description: |
                      Optional. Remove only idle workers when scaling down cluster
            - !ruby/object:Api::Type::String
              name: 'cooldownPeriod'
              description: |
                Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.
      - !ruby/object:Api::Type::NestedObject
        name: 'workerConfig'
        description: |
          Configuration for the size bounds of an instance group, including its proportional size to other groups.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'minInstances'
              description: |
                Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
            - !ruby/object:Api::Type::Integer
              name: 'maxInstances'
              description: |
                Required. Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
            - !ruby/object:Api::Type::Integer
              name: 'weight'
              description: |
                Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
      - !ruby/object:Api::Type::NestedObject
        name: 'secondaryWorkerConfig'
        description: |
          Configuration for the size bounds of an instance group, including its proportional size to other groups.
        properties:
            - !ruby/object:Api::Type::Integer
              name: 'minInstances'
              description: |
                Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.
            - !ruby/object:Api::Type::Integer
              name: 'maxInstances'
              description: |
                Required. Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.
            - !ruby/object:Api::Type::Integer
              name: 'weight'
              description: |
                Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          Optional. The labels to associate with this autoscaling policy. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with an autoscaling policy.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
  


    
  - !ruby/object:Api::Resource
    name: ProjectLocationSession
    base_url: '{{+parent}}/sessions'
    self_link: '{{+name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/dataproc/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A representation of a session.
    properties:
  
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Required. The resource name of the session.
      - !ruby/object:Api::Type::String
        name: 'uuid'
        description: |
          Output only. A session UUID (Unique Universal Identifier). The service generates this value when it creates the session.
      - !ruby/object:Api::Type::String
        name: 'createTime'
        description: |
          Output only. The time when the session was created.
      - !ruby/object:Api::Type::NestedObject
        name: 'jupyterSession'
        description: |
          Jupyter configuration for an interactive session.
        properties:
            - !ruby/object:Api::Type::Enum
              name: 'kernel'
              description: |
                Optional. Kernel
              values:
                - :KERNEL_UNSPECIFIED
                - :PYTHON
                - :SCALA
            - !ruby/object:Api::Type::String
              name: 'displayName'
              description: |
                Optional. Display name, shown in the Jupyter kernelspec card.
      - !ruby/object:Api::Type::NestedObject
        name: 'runtimeInfo'
        description: |
          Runtime information about workload execution.
        properties:
            - !ruby/object:Api::Type::NestedObject
              name: 'endpoints'
              description: |
                Output only. Map of remote access endpoints (such as web interfaces and APIs) to their URIs.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::String
              name: 'outputUri'
              description: |
                Output only. A URI pointing to the location of the stdout and stderr of the workload.
            - !ruby/object:Api::Type::String
              name: 'diagnosticOutputUri'
              description: |
                Output only. A URI pointing to the location of the diagnostics tarball.
            - !ruby/object:Api::Type::NestedObject
              name: 'approximateUsage'
              description: |
                Usage metrics represent approximate total resources consumed by a workload.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'milliDcuSeconds'
                    description: |
                      Optional. DCU (Dataproc Compute Units) usage in (milliDCU x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
                  - !ruby/object:Api::Type::String
                    name: 'shuffleStorageGbSeconds'
                    description: |
                      Optional. Shuffle storage usage in (GB x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
                  - !ruby/object:Api::Type::String
                    name: 'milliAcceleratorSeconds'
                    description: |
                      Optional. Accelerator usage in (milliAccelerator x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
                  - !ruby/object:Api::Type::String
                    name: 'acceleratorType'
                    description: |
                      Optional. Accelerator type being used, if any
            - !ruby/object:Api::Type::NestedObject
              name: 'currentUsage'
              description: |
                The usage snapshot represents the resources consumed by a workload at a specified time.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'milliDcu'
                    description: |
                      Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
                  - !ruby/object:Api::Type::String
                    name: 'shuffleStorageGb'
                    description: |
                      Optional. Shuffle Storage in gigabytes (GB). (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))
                  - !ruby/object:Api::Type::String
                    name: 'milliDcuPremium'
                    description: |
                      Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) charged at premium tier (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
                  - !ruby/object:Api::Type::String
                    name: 'shuffleStorageGbPremium'
                    description: |
                      Optional. Shuffle Storage in gigabytes (GB) charged at premium tier. (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))
                  - !ruby/object:Api::Type::String
                    name: 'milliAccelerator'
                    description: |
                      Optional. Milli (one-thousandth) accelerator. (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))
                  - !ruby/object:Api::Type::String
                    name: 'acceleratorType'
                    description: |
                      Optional. Accelerator type being used, if any
                  - !ruby/object:Api::Type::String
                    name: 'snapshotTime'
                    description: |
                      Optional. The timestamp of the usage snapshot.
      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          Output only. A state of the session.
        values:
          - :STATE_UNSPECIFIED
          - :CREATING
          - :ACTIVE
          - :TERMINATING
          - :TERMINATED
          - :FAILED
      - !ruby/object:Api::Type::String
        name: 'stateMessage'
        description: |
          Output only. Session state details, such as the failure description if the state is FAILED.
      - !ruby/object:Api::Type::String
        name: 'stateTime'
        description: |
          Output only. The time when the session entered the current state.
      - !ruby/object:Api::Type::String
        name: 'creator'
        description: |
          Output only. The email address of the user who created the session.
      - !ruby/object:Api::Type::NestedObject
        name: 'labels'
        description: |
          Optional. The labels to associate with the session. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.
        properties:
          - !ruby/object:Api::Type::String
            name: 'additionalProperties'
            description: |
              
      - !ruby/object:Api::Type::NestedObject
        name: 'runtimeConfig'
        description: |
          Runtime configuration for a workload.
        properties:
            - !ruby/object:Api::Type::String
              name: 'version'
              description: |
                Optional. Version of the batch runtime.
            - !ruby/object:Api::Type::String
              name: 'containerImage'
              description: |
                Optional. Optional custom container image for the job runtime environment. If not specified, a default container image will be used.
            - !ruby/object:Api::Type::NestedObject
              name: 'properties'
              description: |
                Optional. A mapping of property names to values, which are used to configure workload execution.
              properties:
                - !ruby/object:Api::Type::String
                  name: 'additionalProperties'
                  description: |
                    
            - !ruby/object:Api::Type::NestedObject
              name: 'repositoryConfig'
              description: |
                Configuration for dependency repositories
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'pypiRepositoryConfig'
                    description: |
                      Configuration for PyPi repository
                    properties:
                        - !ruby/object:Api::Type::String
                          name: 'pypiRepository'
                          description: |
                            Optional. PyPi repository address
      - !ruby/object:Api::Type::NestedObject
        name: 'environmentConfig'
        description: |
          Environment configuration for a workload.
        properties:
            - !ruby/object:Api::Type::NestedObject
              name: 'executionConfig'
              description: |
                Execution configuration for a workload.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'serviceAccount'
                    description: |
                      Optional. Service account that used to execute workload.
                  - !ruby/object:Api::Type::String
                    name: 'networkUri'
                    description: |
                      Optional. Network URI to connect workload to.
                  - !ruby/object:Api::Type::String
                    name: 'subnetworkUri'
                    description: |
                      Optional. Subnetwork URI to connect workload to.
                  - !ruby/object:Api::Type::Array
                    name: 'networkTags'
                    description: |
                      Optional. Tags used for network traffic control.
                    item_type: Api::Type::String
                  - !ruby/object:Api::Type::String
                    name: 'kmsKey'
                    description: |
                      Optional. The Cloud KMS key to use for encryption.
                  - !ruby/object:Api::Type::String
                    name: 'idleTtl'
                    description: |
                      Optional. Applies to sessions only. The duration to keep the session alive while it's idling. Exceeding this threshold causes the session to terminate. This field cannot be set on a batch workload. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). Defaults to 1 hour if not set. If both ttl and idle_ttl are specified for an interactive session, the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first.
                  - !ruby/object:Api::Type::String
                    name: 'ttl'
                    description: |
                      Optional. The duration after which the workload will be terminated, specified as the JSON representation for Duration (https://protobuf.dev/programming-guides/proto3/#json). When the workload exceeds this duration, it will be unconditionally terminated without waiting for ongoing work to finish. If ttl is not specified for a batch workload, the workload will be allowed to run until it exits naturally (or run forever without exiting). If ttl is not specified for an interactive session, it defaults to 24 hours. If ttl is not specified for a batch that uses 2.1+ runtime version, it defaults to 4 hours. Minimum value is 10 minutes; maximum value is 14 days. If both ttl and idle_ttl are specified (for an interactive session), the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first.
                  - !ruby/object:Api::Type::String
                    name: 'stagingBucket'
                    description: |
                      Optional. A Cloud Storage bucket used to stage workload dependencies, config files, and store workload output and other ephemeral data, such as Spark history files. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location according to the region where your workload is running, and then create and manage project-level, per-location staging and temporary buckets. This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
            - !ruby/object:Api::Type::NestedObject
              name: 'peripheralsConfig'
              description: |
                Auxiliary services configuration for a workload.
              properties:
                  - !ruby/object:Api::Type::String
                    name: 'metastoreService'
                    description: |
                      Optional. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[region]/services/[service_id]
                  - !ruby/object:Api::Type::NestedObject
                    name: 'sparkHistoryServerConfig'
                    description: |
                      Spark History Server configuration for the workload.
                    properties:
                        - !ruby/object:Api::Type::String
                          name: 'dataprocCluster'
                          description: |
                            Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.Example: projects/[project_id]/regions/[region]/clusters/[cluster_name]
      - !ruby/object:Api::Type::String
        name: 'user'
        description: |
          Optional. The email address of the user who owns the session.
      - !ruby/object:Api::Type::Array
        name: 'stateHistory'
        description: |
          Output only. Historical state information for the session.
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Enum
              name: 'state'
              description: |
                Output only. The state of the session at this point in the session history.
              values:
                - :STATE_UNSPECIFIED
                - :CREATING
                - :ACTIVE
                - :TERMINATING
                - :TERMINATED
                - :FAILED
            - !ruby/object:Api::Type::String
              name: 'stateMessage'
              description: |
                Output only. Details about the state at this point in the session history.
            - !ruby/object:Api::Type::String
              name: 'stateStartTime'
              description: |
                Output only. The time when the session entered the historical state.
      - !ruby/object:Api::Type::String
        name: 'sessionTemplate'
        description: |
          Optional. The session template used by the session.Only resource names, including project ID and location, are valid.Example: * https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id] * projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id]The template must be in the same project and Dataproc region as the session.
  
