--- !ruby/object:Api::Product
name: bigtableadmin
display_name: bigtableadmin
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://bigtableadmin.googleapis.com//v2/
scopes:
  - https://bigtableadmin.googleapis.com//auth/cloud-platform
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: https://bigtableadmin.googleapis.com/
    url: https://console.cloud.google.com/apis/library/bigtableadmin.googleapis.com/
objects:
    
  - !ruby/object:Api::Resource
    name: ProjectInstanceCluster
    base_url: '{{+parent}}/clusters'
    self_link: '{{+name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/bigtableadmin/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance.
    properties:
  
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`.
      - !ruby/object:Api::Type::String
        name: 'location'
        description: |
          Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`.
      - !ruby/object:Api::Type::Enum
        name: 'state'
        description: |
          Output only. The current state of the cluster.
        values:
          - :STATE_NOT_KNOWN
          - :READY
          - :CREATING
          - :RESIZING
          - :DISABLED
      - !ruby/object:Api::Type::Integer
        name: 'serveNodes'
        description: |
          The number of nodes in the cluster. If no value is set, Cloud Bigtable automatically allocates nodes based on your data footprint and optimized for 50% storage utilization.
      - !ruby/object:Api::Type::NestedObject
        name: 'clusterConfig'
        description: |
          Configuration for a cluster.
        properties:
            - !ruby/object:Api::Type::NestedObject
              name: 'clusterAutoscalingConfig'
              description: |
                Autoscaling config for a cluster.
              properties:
                  - !ruby/object:Api::Type::NestedObject
                    name: 'autoscalingLimits'
                    description: |
                      Limits for the number of nodes a Cluster can autoscale up/down to.
                    properties:
                        - !ruby/object:Api::Type::Integer
                          name: 'minServeNodes'
                          description: |
                            Required. Minimum number of nodes to scale down to.
                        - !ruby/object:Api::Type::Integer
                          name: 'maxServeNodes'
                          description: |
                            Required. Maximum number of nodes to scale up to.
                  - !ruby/object:Api::Type::NestedObject
                    name: 'autoscalingTargets'
                    description: |
                      The Autoscaling targets for a Cluster. These determine the recommended nodes.
                    properties:
                        - !ruby/object:Api::Type::Integer
                          name: 'cpuUtilizationPercent'
                          description: |
                            The cpu utilization that the Autoscaler should be trying to achieve. This number is on a scale from 0 (no utilization) to 100 (total utilization), and is limited between 10 and 80, otherwise it will return INVALID_ARGUMENT error.
                        - !ruby/object:Api::Type::Integer
                          name: 'storageUtilizationGibPerNode'
                          description: |
                            The storage utilization that the Autoscaler should be trying to achieve. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16TiB) for an HDD cluster, otherwise it will return INVALID_ARGUMENT error. If this value is set to 0, it will be treated as if it were set to the default value: 2560 for SSD, 8192 for HDD.
      - !ruby/object:Api::Type::Enum
        name: 'defaultStorageType'
        description: |
          Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.
        values:
          - :STORAGE_TYPE_UNSPECIFIED
          - :SSD
          - :HDD
      - !ruby/object:Api::Type::NestedObject
        name: 'encryptionConfig'
        description: |
          Cloud Key Management Service (Cloud KMS) settings for a CMEK-protected cluster.
        properties:
            - !ruby/object:Api::Type::String
              name: 'kmsKeyName'
              description: |
                Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster. Values are of the form `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}`


    
  - !ruby/object:Api::Resource
    name: ProjectInstanceAppProfile
    base_url: '{{+parent}}/appProfiles'
    self_link: '{{+name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/bigtableadmin/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A configuration object describing how Cloud Bigtable should treat traffic from a particular end user application.
    properties:
  
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          Long form description of the use case for this AppProfile.
      - !ruby/object:Api::Type::NestedObject
        name: 'multiClusterRoutingUseAny'
        description: |
          Read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest cluster that is available in the event of transient errors or delays. Clusters in a region are considered equidistant. Choosing this option sacrifices read-your-writes consistency to improve availability.
        properties:
            - !ruby/object:Api::Type::Array
              name: 'clusterIds'
              description: |
                The set of clusters to route to. The order is ignored; clusters will be tried in order of distance. If left empty, all clusters are eligible.
              item_type: Api::Type::String
      - !ruby/object:Api::Type::NestedObject
        name: 'singleClusterRouting'
        description: |
          Unconditionally routes all read/write requests to a specific cluster. This option preserves read-your-writes consistency but does not improve availability.
        properties:
            - !ruby/object:Api::Type::String
              name: 'clusterId'
              description: |
                The cluster to which read/write requests should be routed.
            - !ruby/object:Api::Type::Boolean
              name: 'allowTransactionalWrites'
              description: |
                Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are allowed by this app profile. It is unsafe to send these requests to the same table/row/column in multiple clusters.
      - !ruby/object:Api::Type::Enum
        name: 'priority'
        description: |
          This field has been deprecated in favor of `standard_isolation.priority`. If you set this field, `standard_isolation.priority` will be set instead. The priority of requests sent using this app profile.
        values:
          - :PRIORITY_UNSPECIFIED
          - :PRIORITY_LOW
          - :PRIORITY_MEDIUM
          - :PRIORITY_HIGH
      - !ruby/object:Api::Type::NestedObject
        name: 'standardIsolation'
        description: |
          Standard options for isolating this app profile's traffic from other use cases.
        properties:
            - !ruby/object:Api::Type::Enum
              name: 'priority'
              description: |
                The priority of requests sent using this app profile.
              values:
                - :PRIORITY_UNSPECIFIED
                - :PRIORITY_LOW
                - :PRIORITY_MEDIUM
                - :PRIORITY_HIGH
      - !ruby/object:Api::Type::NestedObject
        name: 'dataBoostIsolationReadOnly'
        description: |
          Data Boost is a serverless compute capability that lets you run high-throughput read jobs and queries on your Bigtable data, without impacting the performance of the clusters that handle your application traffic. Data Boost supports read-only use cases with single-cluster routing.
        properties:
            - !ruby/object:Api::Type::Enum
              name: 'computeBillingOwner'
              description: |
                The Compute Billing Owner for this Data Boost App Profile.
              values:
                - :COMPUTE_BILLING_OWNER_UNSPECIFIED
                - :HOST_PAYS
  


    
  - !ruby/object:Api::Resource
    name: ProjectInstanceAppProfile
    base_url: '{{+parent}}/appProfiles'
    self_link: '{{+name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/bigtableadmin/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        A configuration object describing how Cloud Bigtable should treat traffic from a particular end user application.
    properties:
  
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.
      - !ruby/object:Api::Type::String
        name: 'etag'
        description: |
          Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: |
          Long form description of the use case for this AppProfile.
      - !ruby/object:Api::Type::NestedObject
        name: 'multiClusterRoutingUseAny'
        description: |
          Read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest cluster that is available in the event of transient errors or delays. Clusters in a region are considered equidistant. Choosing this option sacrifices read-your-writes consistency to improve availability.
        properties:
            - !ruby/object:Api::Type::Array
              name: 'clusterIds'
              description: |
                The set of clusters to route to. The order is ignored; clusters will be tried in order of distance. If left empty, all clusters are eligible.
              item_type: Api::Type::String
      - !ruby/object:Api::Type::NestedObject
        name: 'singleClusterRouting'
        description: |
          Unconditionally routes all read/write requests to a specific cluster. This option preserves read-your-writes consistency but does not improve availability.
        properties:
            - !ruby/object:Api::Type::String
              name: 'clusterId'
              description: |
                The cluster to which read/write requests should be routed.
            - !ruby/object:Api::Type::Boolean
              name: 'allowTransactionalWrites'
              description: |
                Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are allowed by this app profile. It is unsafe to send these requests to the same table/row/column in multiple clusters.
      - !ruby/object:Api::Type::Enum
        name: 'priority'
        description: |
          This field has been deprecated in favor of `standard_isolation.priority`. If you set this field, `standard_isolation.priority` will be set instead. The priority of requests sent using this app profile.
        values:
          - :PRIORITY_UNSPECIFIED
          - :PRIORITY_LOW
          - :PRIORITY_MEDIUM
          - :PRIORITY_HIGH
      - !ruby/object:Api::Type::NestedObject
        name: 'standardIsolation'
        description: |
          Standard options for isolating this app profile's traffic from other use cases.
        properties:
            - !ruby/object:Api::Type::Enum
              name: 'priority'
              description: |
                The priority of requests sent using this app profile.
              values:
                - :PRIORITY_UNSPECIFIED
                - :PRIORITY_LOW
                - :PRIORITY_MEDIUM
                - :PRIORITY_HIGH
      - !ruby/object:Api::Type::NestedObject
        name: 'dataBoostIsolationReadOnly'
        description: |
          Data Boost is a serverless compute capability that lets you run high-throughput read jobs and queries on your Bigtable data, without impacting the performance of the clusters that handle your application traffic. Data Boost supports read-only use cases with single-cluster routing.
        properties:
            - !ruby/object:Api::Type::Enum
              name: 'computeBillingOwner'
              description: |
                The Compute Billing Owner for this Data Boost App Profile.
              values:
                - :COMPUTE_BILLING_OWNER_UNSPECIFIED
                - :HOST_PAYS
  
