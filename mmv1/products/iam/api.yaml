# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# TODO(nelsonjr): Make all Zone and Region resource ref

--- !ruby/object:Api::Product
name: IAM
display_name: Cloud IAM
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://iam.googleapis.com/v1/
scopes:
  - https://www.googleapis.com/auth/iam
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Identity and Access Management (IAM) API
    url: https://console.cloud.google.com/apis/library/iam.googleapis.com/
objects:
  - !ruby/object:Api::Resource
    name: 'Role'
    base_url: projects/{{project}}/roles
    description: |
      A role in the Identity and Access Management API
    update_mask: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the role.
        required: true
      - !ruby/object:Api::Type::String
        name: 'title'
        description: |
          A human-readable title for the role. Typically this is limited to 100
          UTF-8 bytes.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: "Human-readable description for the role"
      - !ruby/object:Api::Type::Array
        name: 'includedPermissions'
        description: Names of permissions this role grants when bound in an IAM policy.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::Enum
        name: 'stage'
        description: The current launch stage of the role.
        values:
          - :ALPHA
          - :BETA
          - :GA
          - :DEPRECATED
          - :DISABLED
          - :EAP
      - !ruby/object:Api::Type::Boolean
        name: 'deleted'
        description: The current deleted state of the role
        output: true
  - !ruby/object:Api::Resource
    name: 'ServiceAccount'
    base_url: projects/{{project}}/serviceAccounts
    collection_url_key: 'accounts'
    description: |
      A service account in the Identity and Access Management API.
    properties:
      - !ruby/object:Api::Type::String
        name: name
        description: The name of the service account.
      - !ruby/object:Api::Type::String
        name: projectId
        description: Id of the project that owns the service account.
        output: true
      - !ruby/object:Api::Type::String
        name: uniqueId
        description: Unique and stable id of the service account
        output: true
      - !ruby/object:Api::Type::String
        name: email
        description: Email address of the service account.
        output: true
      - !ruby/object:Api::Type::String
        name: displayName
        description: User specified description of service account.
      # 'etag' ignored: not relevant to object convergence.
      - !ruby/object:Api::Type::String
        name: oauth2ClientId
        description: OAuth2 client id for the service account.
        output: true
  - !ruby/object:Api::Resource
    name: 'ServiceAccountKey'
    base_url: projects/{{project}}/serviceAccounts/{{service_account}}/keys
    collection_url_key: 'keys'
    description: |
      A service account in the Identity and Access Management API.
    parameters:
      - !ruby/object:Api::Type::ResourceRef
        name: serviceAccount
        description: The name of the serviceAccount.
        resource: ServiceAccount
        imports: name
      # A non-API property to allow writing results to a specific output file.
      - !ruby/object:Api::Type::Path
        name: path
        description: |
          The full name of the file that will hold the service account private
          key. The management of this file will depend on the value of
          sync_file parameter.

          File path must be absolute.
    properties:
      - !ruby/object:Api::Type::String
        name: name
        description: The name of the key.
        output: true
      - !ruby/object:Api::Type::Enum
        name: privateKeyType
        description: Output format for the service account key.
        values:
          - :TYPE_UNSPECIFIED
          - :TYPE_PKCS12_FILE
          - :TYPE_GOOGLE_CREDENTIALS_FILE
      - !ruby/object:Api::Type::Enum
        name: keyAlgorithm
        description: Specifies the algorithm for the key.
        values:
          - :KEY_ALG_UNSPECIFIED
          - :KEY_ALG_RSA_1024
          - :KEY_ALG_RSA_2048
      - !ruby/object:Api::Type::String
        name: privateKeyData
        description: Private key data. Base-64 encoded.
        output: true
      - !ruby/object:Api::Type::String
        name: publicKeyData
        description: Public key data. Base-64 encoded.
        output: true
      - !ruby/object:Api::Type::Time
        name: validAfterTime
        description: Key can only be used after this time.
        output: true
      - !ruby/object:Api::Type::Time
        name: validBeforeTime
        description: Key can only be used before this time.
        output: true
      - !ruby/object:Api::Type::Enum
        name: keyType
        output: true
        description: |
          Specifies the type of the key. Possible values include KEY_TYPE_UNSPECIFIED, USER_MANAGED and SYSTEM_MANAGED
        values:
          - :KEY_TYPE_UNSPECIFIED
          - :USER_MANAGED
          - :SYSTEM_MANAGED
  - !ruby/object:Api::Resource
    name: 'OrganizationCustomRole'
    base_url: organizations/{{org_id}}/roles
    description: |
      A role in the Identity and Access Management API
    update_mask: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: The name of the role.
        required: true
      - !ruby/object:Api::Type::String
        name: 'title'
        description: |
          A human-readable title for the role. Typically this is limited to 100
          UTF-8 bytes.
      - !ruby/object:Api::Type::String
        name: 'description'
        description: "Human-readable description for the role"
      - !ruby/object:Api::Type::Array
        name: 'includedPermissions'
        description: Names of permissions this role grants when bound in an IAM policy.
        item_type: Api::Type::String
      - !ruby/object:Api::Type::Enum
        name: 'stage'
        description: The current launch stage of the role.
        values:
          - :ALPHA
          - :BETA
          - :GA
          - :DEPRECATED
          - :DISABLED
          - :EAP
      - !ruby/object:Api::Type::Boolean
        name: 'deleted'
        description: The current deleted state of the role
        output: true

    
  - !ruby/object:Api::Resource
    name: ProjectServiceAccountKey
    base_url: '{{name}}/keys'
    self_link: '{{name}}'
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
      api: 'https://cloud.google.com/iam/docs'
    async: !ruby/object:Api::OpAsync
      operation: !ruby/object:Api::OpAsync::Operation
         path: 'name'
         base_url: '{op_id}'
         wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
         path: 'response'
         resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    description: |-
        Represents a service account key. A service account has two sets of key-pairs: user-managed, and system-managed. User-managed key-pairs can be created and deleted by users. Users are responsible for rotating these keys periodically to ensure security of their service accounts. Users retain the private key of these key-pairs, and Google retains ONLY the public key. System-managed keys are automatically rotated by Google, and are used for signing for a maximum of two weeks. The rotation process is probabilistic, and usage of the new key will gradually ramp up and down over the key's lifetime. If you cache the public key set for a service account, we recommend that you update the cache every 15 minutes. User-managed keys can be added and removed at any time, so it is important to update the cache frequently. For Google-managed keys, Google will publish a key at least 6 hours before it is first used for signing and will keep publishing it for at least 6 hours after it was last used for signing. Public keys for all service accounts are also published at the OAuth2 Service Account API.
    properties:
  
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          The resource name of the service account key in the following format `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
      - !ruby/object:Api::Type::Enum
        name: 'privateKeyType'
        description: |
          The output format for the private key. Only provided in `CreateServiceAccountKey` responses, not in `GetServiceAccountKey` or `ListServiceAccountKey` responses. Google never exposes system-managed private keys, and never retains user-managed private keys.
        values:
          - :TYPE_UNSPECIFIED
          - :TYPE_PKCS12_FILE
          - :TYPE_GOOGLE_CREDENTIALS_FILE
      - !ruby/object:Api::Type::Enum
        name: 'keyAlgorithm'
        description: |
          Specifies the algorithm (and possibly key size) for the key.
        values:
          - :KEY_ALG_UNSPECIFIED
          - :KEY_ALG_RSA_1024
          - :KEY_ALG_RSA_2048
      - !ruby/object:Api::Type::String
        name: 'privateKeyData'
        description: |
          The private key data. Only provided in `CreateServiceAccountKey` responses. Make sure to keep the private key data secure because it allows for the assertion of the service account identity. When base64 decoded, the private key data can be used to authenticate with Google API client libraries and with gcloud auth activate-service-account.
      - !ruby/object:Api::Type::String
        name: 'publicKeyData'
        description: |
          The public key data. Only provided in `GetServiceAccountKey` responses.
      - !ruby/object:Api::Type::String
        name: 'validAfterTime'
        description: |
          The key can be used after this timestamp.
      - !ruby/object:Api::Type::String
        name: 'validBeforeTime'
        description: |
          The key can be used before this timestamp. For system-managed key pairs, this timestamp is the end time for the private key signing operation. The public key could still be used for verification for a few hours after this time.
      - !ruby/object:Api::Type::Enum
        name: 'keyOrigin'
        description: |
          The key origin.
        values:
          - :ORIGIN_UNSPECIFIED
          - :USER_PROVIDED
          - :GOOGLE_PROVIDED
      - !ruby/object:Api::Type::Enum
        name: 'keyType'
        description: |
          The key type.
        values:
          - :KEY_TYPE_UNSPECIFIED
          - :USER_MANAGED
          - :SYSTEM_MANAGED
      - !ruby/object:Api::Type::Boolean
        name: 'disabled'
        description: |
          The key status.
  
